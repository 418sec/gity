diff --git a/diff/content/diff.css b/diff/content/diff.css
deleted file mode 100755
index 9c59acc..0000000
--- a/diff/content/diff.css
+++ /dev/null
@@ -1,113 +0,0 @@
-.difftextarea {
-	display:none;
-	width:1px;
-	height:1px;
-}
-
-code .delline, code .oldfile {
-	background-color:#fef3f3;
-  color:#B00;
-	display:block;
-}
-
-code .addline, code .newfile {
-	background-color:#eafee9;
-  color: #080;
-}
-
-table,table tr,table tr td {
-	margin:0;
-	padding:0;
-}
-
-body {
-	margin:0;
-	width:100%;
-}
-
-.fileHeader {
-	height:17px;
-	line-height:18px;
-	color:white;
-	display:block;
-	margin-top:15px;
-	border-top:solid 1px #ddd;
-	padding-left:8px;
-	background-color:#2b2b2b;
-	//background-color:#657a9d;
-	//background-color:#1e9dfd;
-	//background:transparent url("filebg2.png") repeat-x;
-	//content:-webkit-gradient(linear, left top, left bottom, from(#00abeb), to(#fff), color-stop(0.5, #fff), color-stop(0.5, #66cc00));
-}
-
-.firstFileHeader {
-	height:17px;
-	line-height:18px;
-	color:white;
-	display:block;
-	padding-left:8px;
-	background-color:#333333;
-	//background-color:#657a9d;
-	//background-color:#1e9dfd;
-	//background:transparent url("filebg2.png") repeat-x;
-	//content: -webkit-gradient(linear, left top, left bottom, from(#00abeb), to(#fff), color-stop(0.5, #fff), color-stop(0.5, #66cc00));
-}
-
-code .firsthunkheader {
-  background-color:#f7f7f7;
-  color: #111;
-	height:17px;
-	line-height:18px;
-	padding-left:8px;
-	font-size:9px;
-	margin-bottom:8px;
-	border-top:solid 1px #ddd;
-	border-bottom:solid 1px #ddd;
-}
-
-code .hunkheader {
-  background-color:#f7f7f7;
-  color: #111;
-	height:17px;
-	line-height:18px;
-	padding-left:8px;
-	font-size:9px;
-	margin-bottom:8px;
-	margin-top:8px;
-	border-top:solid 1px #ddd;
-	border-bottom:solid 1px #ddd;
-}
-
-.line {
-	padding-left:5px;
-}
-
-pre {
-  width: 100%;
-	font-family:Monaco;
-  font-size:11px;
-	line-height:16px;
-}
-
-pre code {
-  width: 100%;
-}
-
-.whitespace {
-	background-color:rgba(255,0,0,0.5);
-}
-
-table.diff {
-	border-spacing: 0;
-}
-
-.lineno {
-	padding-right: 2px;
-	background-color: #ECECEC;
-	color: #A9A9A9;
-	border-right: 1px solid #DDDDDD;
-	text-align: right;
-}
-/**
-modified on nov 16 2009.
-**/
diff --git a/diff/content/filebg.png b/diff/content/filebg.png
deleted file mode 100644
index 3c9a394..0000000
Binary files a/diff/content/filebg.png and /dev/null differ
diff --git a/diff/content/filebg2.png b/diff/content/filebg2.png
deleted file mode 100644
index d692464..0000000
Binary files a/diff/content/filebg2.png and /dev/null differ
diff --git a/diff/content/gity.js b/diff/content/gity.js
deleted file mode 100755
index e75a185..0000000
--- a/diff/content/gity.js
+++ /dev/null
@@ -1,104 +0,0 @@
-function startDiff()
-{
-	var diff=$("#diff")
-	var safeDiff=diff.val().replace(/&lt;/g, "&lt;");
-	$("#updateddiff").html(safeDiff);
-	highlightDiffs();
-}
-
-function highlightDiffs()
-{
-	var diffs=$("#updateddiff");
-	var diffn=0;
-	for(diffn;diffn&lt;diffs.length;diffn++)
-	{
-		var diff=diffs[diffn];
-		var content=diff.innerHTML.replace(/\t/g, "    ");
-		var line1 = "";
-		var line2 = "";
-		var diffContent = "";
-		var lines = content.split('\n');
-		var hunk_start_line_1 = -1;
-		var hunk_start_line_2 = -1;
-		var firstHunkHeader = true;
-		var firstFileLine = true;
-		var header = false;
-		var lineno=0;
-		for(lineno;lineno&lt;lines.length;lineno++)
-		{
-			var l=lines[lineno];
-			var firstChar=l.charAt(0);
-			
-			if(firstChar != "d" && firstChar != "+" && firstChar != "-" && firstChar != "@" && firstChar != " ") continue;
-			
-			/*if(l.indexOf("index") == 0)
-			{
-				nl = lines[lineno+1]
-				if(nl.indexOf("Binary") == 0)
-				{
-					diffContent+='&lt;div class="line">Binary file has changes&lt;/div>';
-					lineno++;
-				}
-				continue;
-			}*/
-			
-			if(header)
-			{
-				if(firstChar=="+"||firstChar=="-") continue;
-			}
-			if(firstChar=="d")
-			{
-				header=true;
-				line1+='\n';
-				line2+='\n';
-				pieces=l.split(" ")
-				file=pieces[pieces.length-1];
-				file = file.replace("b/","");
-				firstHunkHeader=true;
-				if(firstFileLine) diffContent+='&lt;div class="firstFileHeader">'+file+'&lt;/div>';
-				else diffContent+='&lt;div class="fileHeader">'+file+'&lt;/div>';
-				firstFileLine=false;
-				continue;
-			}
-			if(firstChar=="+")
-			{
-				//highlight trailing whitespace
-				if(m=l.match(/\s+$/)) l=l.replace(/\s+$/,"&lt;span class='whitespace line'>"+m+"&lt;/span>");
-				line1+="\n";
-				line2+=++hunk_start_line_2+"\n";
-				diffContent+="&lt;div class='addline line'>"+l+"&lt;/div>";
-			}
-			if (firstChar=="-")
-			{
-				line1+=++hunk_start_line_1+"\n";
-				line2+="\n";
-				diffContent+="&lt;div class='delline line'>"+l+"&lt;/div>";
-			}
-			if(firstChar == "@")
-			{
-				header=false;
-				if(m=l.match(/@@ \-([0-9]+),\d+ \+(\d+),\d+ @@/))
-				{
-					hunk_start_line_1=parseInt(m[1])-1;
-					hunk_start_line_2=parseInt(m[2])-1;
-				}
-				line1+="\n";
-				line2+="\n";
-				if(firstHunkHeader) diffContent+="&lt;div class='firsthunkheader'>"+l+"&lt;/div>";
-				else diffContent+="&lt;div class='hunkheader'>"+l+"&lt;/div>";
-				firstHunkHeader=false;
-			}
-			if(firstChar == " ")
-			{
-				line1 += ++hunk_start_line_1 + "\n";
-				line2 += ++hunk_start_line_2 + "\n";
-				diffContent += "&lt;span class='line'>" + l + "&lt;/span>\n";
-			}
-		}
-		diff.innerHTML="&lt;table class='diff' width='100%'>&lt;td width='100%' class='test'>&lt;pre class='test'>" + diffContent + "&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>";
-	}
-}
-
-/**
-modified on nov 16 2009.
-**/
\ No newline at end of file
diff --git a/diff/content/jquery.js b/diff/content/jquery.js
deleted file mode 100644
index b1ae21d..0000000
--- a/diff/content/jquery.js
+++ /dev/null
@@ -1,19 +0,0 @@
-/*
- * jQuery JavaScript Library v1.3.2
- * http://jquery.com/
- *
- * Copyright (c) 2009 John Resig
- * Dual licensed under the MIT and GPL licenses.
- * http://docs.jquery.com/License
- *
- * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)
- * Revision: 6246
- */
-(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=/^[^&lt;]*(&lt;(.|\s)+>)[^>]*$|^#([\w-]+)$/,f=/^.[^:#\[\.,]*$/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)&lt;0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(/ jQuery\d+="(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)&lt;0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I&lt;0){return null}for(var F=H?I:0,J=H?I+1:M.length;F&lt;J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(/\r/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&/radio|checkbox/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(/ jQuery\d+="(?:\d+|null)"/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G&lt;E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H&lt;I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=/z-?index|font-?weight|opacity|zoom|line-?height/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&/\S/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H&lt;I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H&lt;I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(/\s+/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(/\s+/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(/\s+/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(/float/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(/float/i)){F="float"}F=F.replace(/([A-Z])/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(/\-(\w)/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!/^\d+(px)?$/i.test(L)&&/^\d/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=/^&lt;(\w+)\s*\/?>$/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(/(&lt;(\w+)[^>]*?)\/>/g,function(U,V,T){return T.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?U:V+">&lt;/"+T+">"});var O=S.replace(/^\s+/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("&lt;opt")&&[1,"&lt;select multiple='multiple'>","&lt;/select>"]||!O.indexOf("&lt;leg")&&[1,"&lt;fieldset>","&lt;/fieldset>"]||O.match(/^&lt;(thead|tbody|tfoot|colg|cap)/)&&[1,"&lt;table>","&lt;/table>"]||!O.indexOf("&lt;tr")&&[2,"&lt;table>&lt;tbody>","&lt;/tbody>&lt;/table>"]||(!O.indexOf("&lt;td")||!O.indexOf("&lt;th"))&&[3,"&lt;table>&lt;tbody>&lt;tr>","&lt;/tr>&lt;/tbody>&lt;/table>"]||!O.indexOf("&lt;col")&&[2,"&lt;table>&lt;tbody>&lt;/tbody>&lt;colgroup>","&lt;/colgroup>&lt;/table>"]||!o.support.htmlSerialize&&[1,"div&lt;div>","&lt;/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=/&lt;tbody/i.test(S),N=!O.indexOf("&lt;table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="&lt;table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&/^\s/.test(S)){L.insertBefore(K.createTextNode(S.match(/^\s*/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=/href|src|style/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(/(button|input|object|select|textarea)/i)?0:J.nodeName.match(/^(a|area)$/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(/alpha\([^)]*\)/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(/opacity=([^)]*)/)[1])/100)+"":""}G=G.replace(/-([a-z])/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(/^\s+|\s+$/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E&lt;F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G&lt;H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H&lt;I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G&lt;H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(C),opera:/opera/.test(C),msie:/msie/.test(C)&&!/opera/.test(C),mozilla:/mozilla/.test(C)&&!/(compatible|webkit)/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K&lt;H;K++){var I=(K>0?this.clone(true):this).get();o.fn[F].apply(o(L[K]),I);J=J.concat(I)}return this.pushStack(J,E,G)}});o.each({removeAttr:function(E){o.attr(this,E,"");if(this.nodeType==1){this.removeAttribute(E)}},addClass:function(E){o.className.add(this,E)},removeClass:function(E){o.className.remove(this,E)},toggleClass:function(F,E){if(typeof E!=="boolean"){E=!o.className.has(this,F)}o.className[E?"add":"remove"](this,F)},remove:function(E){if(!E||o.filter(E,[this]).length){o("*",this).add([this]).each(function(){o.event.remove(this);o.removeData(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty:function(){o(this).children().remove();while(this.firstChild){this.removeChild(this.firstChild)}}},function(E,F){o.fn[E]=function(){return this.each(F,arguments)}});function j(E,F){return E[0]&&parseInt(o.curCSS(E[0],F,true),10)||0}var h="jQuery"+e(),v=0,A={};o.extend({cache:{},data:function(F,E,G){F=F==l?A:F;var H=F[h];if(!H){H=F[h]=++v}if(E&&!o.cache[H]){o.cache[H]={}}if(G!==g){o.cache[H][E]=G}return E?o.cache[H][E]:H},removeData:function(F,E){F=F==l?A:F;var H=F[h];if(E){if(o.cache[H]){delete o.cache[H][E];E="";for(E in o.cache[H]){break}if(!E){o.removeData(F)}}}else{try{delete F[h]}catch(G){if(F.removeAttribute){F.removeAttribute(h)}}delete o.cache[H]}},queue:function(F,E,H){if(F){E=(E||"fx")+"queue";var G=o.data(F,E);if(!G||o.isArray(H)){G=o.data(F,E,o.makeArray(H))}else{if(H){G.push(H)}}}return G},dequeue:function(H,G){var E=o.queue(H,G),F=E.shift();if(!G||G==="fx"){F=E[0]}if(F!==g){F.call(H)}}});o.fn.extend({data:function(E,G){var H=E.split(".");H[1]=H[1]?"."+H[1]:"";if(G===g){var F=this.triggerHandler("getData"+H[1]+"!",[H[0]]);if(F===g&&this.length){F=o.data(this[0],E)}return F===g&&H[1]?this.data(H[0]):F}else{return this.trigger("setData"+H[1]+"!",[H[0],G]).each(function(){o.data(this,E,G)})}},removeData:function(E){return this.each(function(){o.removeData(this,E)})},queue:function(E,F){if(typeof E!=="string"){F=E;E="fx"}if(F===g){return o.queue(this[0],E)}return this.each(function(){var G=o.queue(this,E,F);if(E=="fx"&&G.length==1){G[0].call(this)}})},dequeue:function(E){return this.each(function(){o.dequeue(this,E)})}});
-/*
- * Sizzle CSS Selector Engine - v0.9.3
- *  Copyright 2009, The Dojo Foundation
- *  Released under the MIT, BSD, and GPL Licenses.
- *  More information: http://sizzlejs.com/
- */
-(function(){var R=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,L=0,H=Object.prototype.toString;var F=function(Y,U,ab,ac){ab=ab||[];U=U||document;if(U.nodeType!==1&&U.nodeType!==9){return[]}if(!Y||typeof Y!=="string"){return ab}var Z=[],W,af,ai,T,ad,V,X=true;R.lastIndex=0;while((W=R.exec(Y))!==null){Z.push(W[1]);if(W[2]){V=RegExp.rightContext;break}}if(Z.length>1&&M.exec(Y)){if(Z.length===2&&I.relative[Z[0]]){af=J(Z[0]+Z[1],U)}else{af=I.relative[Z[0]]?[U]:F(Z.shift(),U);while(Z.length){Y=Z.shift();if(I.relative[Y]){Y+=Z.shift()}af=J(Y,af)}}}else{var ae=ac?{expr:Z.pop(),set:E(ac)}:F.find(Z.pop(),Z.length===1&&U.parentNode?U.parentNode:U,Q(U));af=F.filter(ae.expr,ae.set);if(Z.length>0){ai=E(af)}else{X=false}while(Z.length){var ah=Z.pop(),ag=ah;if(!I.relative[ah]){ah=""}else{ag=Z.pop()}if(ag==null){ag=U}I.relative[ah](ai,ag,Q(U))}}if(!ai){ai=af}if(!ai){throw"Syntax error, unrecognized expression: "+(ah||Y)}if(H.call(ai)==="[object Array]"){if(!X){ab.push.apply(ab,ai)}else{if(U.nodeType===1){for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&(ai[aa]===true||ai[aa].nodeType===1&&K(U,ai[aa]))){ab.push(af[aa])}}}else{for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&ai[aa].nodeType===1){ab.push(af[aa])}}}}}else{E(ai,ab)}if(V){F(V,U,ab,ac);if(G){hasDuplicate=false;ab.sort(G);if(hasDuplicate){for(var aa=1;aa&lt;ab.length;aa++){if(ab[aa]===ab[aa-1]){ab.splice(aa--,1)}}}}}return ab};F.matches=function(T,U){return F(T,null,null,U)};F.find=function(aa,T,ab){var Z,X;if(!aa){return[]}for(var W=0,V=I.order.length;W&lt;V;W++){var Y=I.order[W],X;if((X=I.match[Y].exec(aa))){var U=RegExp.leftContext;if(U.substr(U.length-1)!=="\\"){X[1]=(X[1]||"").replace(/\\/g,"");Z=I.find[Y](X,T,ab);if(Z!=null){aa=aa.replace(I.match[Y],"");break}}}}if(!Z){Z=T.getElementsByTagName("*")}return{set:Z,expr:aa}};F.filter=function(ad,ac,ag,W){var V=ad,ai=[],aa=ac,Y,T,Z=ac&&ac[0]&&Q(ac[0]);while(ad&&ac.length){for(var ab in I.filter){if((Y=I.match[ab].exec(ad))!=null){var U=I.filter[ab],ah,af;T=false;if(aa==ai){ai=[]}if(I.preFilter[ab]){Y=I.preFilter[ab](Y,aa,ag,ai,W,Z);if(!Y){T=ah=true}else{if(Y===true){continue}}}if(Y){for(var X=0;(af=aa[X])!=null;X++){if(af){ah=U(af,Y,X,aa);var ae=W^!!ah;if(ag&&ah!=null){if(ae){T=true}else{aa[X]=false}}else{if(ae){ai.push(af);T=true}}}}}if(ah!==g){if(!ag){aa=ai}ad=ad.replace(I.match[ab],"");if(!T){return[]}break}}}if(ad==V){if(T==null){throw"Syntax error, unrecognized expression: "+ad}else{break}}V=ad}return aa};var I=F.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(T){return T.getAttribute("href")}},relative:{"+":function(aa,T,Z){var X=typeof T==="string",ab=X&&!/\W/.test(T),Y=X&&!ab;if(ab&&!Z){T=T.toUpperCase()}for(var W=0,V=aa.length,U;W&lt;V;W++){if((U=aa[W])){while((U=U.previousSibling)&&U.nodeType!==1){}aa[W]=Y||U&&U.nodeName===T?U||false:U===T}}if(Y){F.filter(T,aa,true)}},">":function(Z,U,aa){var X=typeof U==="string";if(X&&!/\W/.test(U)){U=aa?U:U.toUpperCase();for(var V=0,T=Z.length;V&lt;T;V++){var Y=Z[V];if(Y){var W=Y.parentNode;Z[V]=W.nodeName===U?W:false}}}else{for(var V=0,T=Z.length;V&lt;T;V++){var Y=Z[V];if(Y){Z[V]=X?Y.parentNode:Y.parentNode===U}}if(X){F.filter(U,Z,true)}}},"":function(W,U,Y){var V=L++,T=S;if(!U.match(/\W/)){var X=U=Y?U:U.toUpperCase();T=P}T("parentNode",U,V,W,X,Y)},"~":function(W,U,Y){var V=L++,T=S;if(typeof U==="string"&&!U.match(/\W/)){var X=U=Y?U:U.toUpperCase();T=P}T("previousSibling",U,V,W,X,Y)}},find:{ID:function(U,V,W){if(typeof V.getElementById!=="undefined"&&!W){var T=V.getElementById(U[1]);return T?[T]:[]}},NAME:function(V,Y,Z){if(typeof Y.getElementsByName!=="undefined"){var U=[],X=Y.getElementsByName(V[1]);for(var W=0,T=X.length;W&lt;T;W++){if(X[W].getAttribute("name")===V[1]){U.push(X[W])}}return U.length===0?null:U}},TAG:function(T,U){return U.getElementsByTagName(T[1])}},preFilter:{CLASS:function(W,U,V,T,Z,aa){W=" "+W[1].replace(/\\/g,"")+" ";if(aa){return W}for(var X=0,Y;(Y=U[X])!=null;X++){if(Y){if(Z^(Y.className&&(" "+Y.className+" ").indexOf(W)>=0)){if(!V){T.push(Y)}}else{if(V){U[X]=false}}}}return false},ID:function(T){return T[1].replace(/\\/g,"")},TAG:function(U,T){for(var V=0;T[V]===false;V++){}return T[V]&&Q(T[V])?U[1]:U[1].toUpperCase()},CHILD:function(T){if(T[1]=="nth"){var U=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(T[2]=="even"&&"2n"||T[2]=="odd"&&"2n+1"||!/\D/.test(T[2])&&"0n+"+T[2]||T[2]);T[2]=(U[1]+(U[2]||1))-0;T[3]=U[3]-0}T[0]=L++;return T},ATTR:function(X,U,V,T,Y,Z){var W=X[1].replace(/\\/g,"");if(!Z&&I.attrMap[W]){X[1]=I.attrMap[W]}if(X[2]==="~="){X[4]=" "+X[4]+" "}return X},PSEUDO:function(X,U,V,T,Y){if(X[1]==="not"){if(X[3].match(R).length>1||/^\w/.test(X[3])){X[3]=F(X[3],null,null,U)}else{var W=F.filter(X[3],U,V,true^Y);if(!V){T.push.apply(T,W)}return false}}else{if(I.match.POS.test(X[0])||I.match.CHILD.test(X[0])){return true}}return X},POS:function(T){T.unshift(true);return T}},filters:{enabled:function(T){return T.disabled===false&&T.type!=="hidden"},disabled:function(T){return T.disabled===true},checked:function(T){return T.checked===true},selected:function(T){T.parentNode.selectedIndex;return T.selected===true},parent:function(T){return !!T.firstChild},empty:function(T){return !T.firstChild},has:function(V,U,T){return !!F(T[3],V).length},header:function(T){return/h\d/i.test(T.nodeName)},text:function(T){return"text"===T.type},radio:function(T){return"radio"===T.type},checkbox:function(T){return"checkbox"===T.type},file:function(T){return"file"===T.type},password:function(T){return"password"===T.type},submit:function(T){return"submit"===T.type},image:function(T){return"image"===T.type},reset:function(T){return"reset"===T.type},button:function(T){return"button"===T.type||T.nodeName.toUpperCase()==="BUTTON"},input:function(T){return/input|select|textarea|button/i.test(T.nodeName)}},setFilters:{first:function(U,T){return T===0},last:function(V,U,T,W){return U===W.length-1},even:function(U,T){return T%2===0},odd:function(U,T){return T%2===1},lt:function(V,U,T){return U&lt;T[3]-0},gt:function(V,U,T){return U>T[3]-0},nth:function(V,U,T){return T[3]-0==U},eq:function(V,U,T){return T[3]-0==U}},filter:{PSEUDO:function(Z,V,W,aa){var U=V[1],X=I.filters[U];if(X){return X(Z,W,V,aa)}else{if(U==="contains"){return(Z.textContent||Z.innerText||"").indexOf(V[3])>=0}else{if(U==="not"){var Y=V[3];for(var W=0,T=Y.length;W&lt;T;W++){if(Y[W]===Z){return false}}return true}}}},CHILD:function(T,W){var Z=W[1],U=T;switch(Z){case"only":case"first":while(U=U.previousSibling){if(U.nodeType===1){return false}}if(Z=="first"){return true}U=T;case"last":while(U=U.nextSibling){if(U.nodeType===1){return false}}return true;case"nth":var V=W[2],ac=W[3];if(V==1&&ac==0){return true}var Y=W[0],ab=T.parentNode;if(ab&&(ab.sizcache!==Y||!T.nodeIndex)){var X=0;for(U=ab.firstChild;U;U=U.nextSibling){if(U.nodeType===1){U.nodeIndex=++X}}ab.sizcache=Y}var aa=T.nodeIndex-ac;if(V==0){return aa==0}else{return(aa%V==0&&aa/V>=0)}}},ID:function(U,T){return U.nodeType===1&&U.getAttribute("id")===T},TAG:function(U,T){return(T==="*"&&U.nodeType===1)||U.nodeName===T},CLASS:function(U,T){return(" "+(U.className||U.getAttribute("class"))+" ").indexOf(T)>-1},ATTR:function(Y,W){var V=W[1],T=I.attrHandle[V]?I.attrHandle[V](Y):Y[V]!=null?Y[V]:Y.getAttribute(V),Z=T+"",X=W[2],U=W[4];return T==null?X==="!=":X==="="?Z===U:X==="*="?Z.indexOf(U)>=0:X==="~="?(" "+Z+" ").indexOf(U)>=0:!U?Z&&T!==false:X==="!="?Z!=U:X==="^="?Z.indexOf(U)===0:X==="$="?Z.substr(Z.length-U.length)===U:X==="|="?Z===U||Z.substr(0,U.length+1)===U+"-":false},POS:function(X,U,V,Y){var T=U[2],W=I.setFilters[T];if(W){return W(X,V,U,Y)}}}};var M=I.match.POS;for(var O in I.match){I.match[O]=RegExp(I.match[O].source+/(?![^\[]*\])(?![^\(]*\))/.source)}var E=function(U,T){U=Array.prototype.slice.call(U);if(T){T.push.apply(T,U);return T}return U};try{Array.prototype.slice.call(document.documentElement.childNodes)}catch(N){E=function(X,W){var U=W||[];if(H.call(X)==="[object Array]"){Array.prototype.push.apply(U,X)}else{if(typeof X.length==="number"){for(var V=0,T=X.length;V&lt;T;V++){U.push(X[V])}}else{for(var V=0;X[V];V++){U.push(X[V])}}}return U}}var G;if(document.documentElement.compareDocumentPosition){G=function(U,T){var V=U.compareDocumentPosition(T)&4?-1:U===T?0:1;if(V===0){hasDuplicate=true}return V}}else{if("sourceIndex" in document.documentElement){G=function(U,T){var V=U.sourceIndex-T.sourceIndex;if(V===0){hasDuplicate=true}return V}}else{if(document.createRange){G=function(W,U){var V=W.ownerDocument.createRange(),T=U.ownerDocument.createRange();V.selectNode(W);V.collapse(true);T.selectNode(U);T.collapse(true);var X=V.compareBoundaryPoints(Range.START_TO_END,T);if(X===0){hasDuplicate=true}return X}}}}(function(){var U=document.createElement("form"),V="script"+(new Date).getTime();U.innerHTML="&lt;input name='"+V+"'/>";var T=document.documentElement;T.insertBefore(U,T.firstChild);if(!!document.getElementById(V)){I.find.ID=function(X,Y,Z){if(typeof Y.getElementById!=="undefined"&&!Z){var W=Y.getElementById(X[1]);return W?W.id===X[1]||typeof W.getAttributeNode!=="undefined"&&W.getAttributeNode("id").nodeValue===X[1]?[W]:g:[]}};I.filter.ID=function(Y,W){var X=typeof Y.getAttributeNode!=="undefined"&&Y.getAttributeNode("id");return Y.nodeType===1&&X&&X.nodeValue===W}}T.removeChild(U)})();(function(){var T=document.createElement("div");T.appendChild(document.createComment(""));if(T.getElementsByTagName("*").length>0){I.find.TAG=function(U,Y){var X=Y.getElementsByTagName(U[1]);if(U[1]==="*"){var W=[];for(var V=0;X[V];V++){if(X[V].nodeType===1){W.push(X[V])}}X=W}return X}}T.innerHTML="&lt;a href='#'>&lt;/a>";if(T.firstChild&&typeof T.firstChild.getAttribute!=="undefined"&&T.firstChild.getAttribute("href")!=="#"){I.attrHandle.href=function(U){return U.getAttribute("href",2)}}})();if(document.querySelectorAll){(function(){var T=F,U=document.createElement("div");U.innerHTML="&lt;p class='TEST'>&lt;/p>";if(U.querySelectorAll&&U.querySelectorAll(".TEST").length===0){return}F=function(Y,X,V,W){X=X||document;if(!W&&X.nodeType===9&&!Q(X)){try{return E(X.querySelectorAll(Y),V)}catch(Z){}}return T(Y,X,V,W)};F.find=T.find;F.filter=T.filter;F.selectors=T.selectors;F.matches=T.matches})()}if(document.getElementsByClassName&&document.documentElement.getElementsByClassName){(function(){var T=document.createElement("div");T.innerHTML="&lt;div class='test e'>&lt;/div>&lt;div class='test'>&lt;/div>";if(T.getElementsByClassName("e").length===0){return}T.lastChild.className="e";if(T.getElementsByClassName("e").length===1){return}I.order.splice(1,0,"CLASS");I.find.CLASS=function(U,V,W){if(typeof V.getElementsByClassName!=="undefined"&&!W){return V.getElementsByClassName(U[1])}}})()}function P(U,Z,Y,ad,aa,ac){var ab=U=="previousSibling"&&!ac;for(var W=0,V=ad.length;W&lt;V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1&&!ac){T.sizcache=Y;T.sizset=W}if(T.nodeName===Z){X=T;break}T=T[U]}ad[W]=X}}}function S(U,Z,Y,ad,aa,ac){var ab=U=="previousSibling"&&!ac;for(var W=0,V=ad.length;W&lt;V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1){if(!ac){T.sizcache=Y;T.sizset=W}if(typeof Z!=="string"){if(T===Z){X=true;break}}else{if(F.filter(Z,[T]).length>0){X=T;break}}}T=T[U]}ad[W]=X}}}var K=document.compareDocumentPosition?function(U,T){return U.compareDocumentPosition(T)&16}:function(U,T){return U!==T&&(U.contains?U.contains(T):true)};var Q=function(T){return T.nodeType===9&&T.documentElement.nodeName!=="HTML"||!!T.ownerDocument&&Q(T.ownerDocument)};var J=function(T,aa){var W=[],X="",Y,V=aa.nodeType?[aa]:aa;while((Y=I.match.PSEUDO.exec(T))){X+=Y[0];T=T.replace(I.match.PSEUDO,"")}T=I.relative[T]?T+"*":T;for(var Z=0,U=V.length;Z&lt;U;Z++){F(T,V[Z],W)}return F.filter(X,W)};o.find=F;o.filter=F.filter;o.expr=F.selectors;o.expr[":"]=o.expr.filters;F.selectors.filters.hidden=function(T){return T.offsetWidth===0||T.offsetHeight===0};F.selectors.filters.visible=function(T){return T.offsetWidth>0||T.offsetHeight>0};F.selectors.filters.animated=function(T){return o.grep(o.timers,function(U){return T===U.elem}).length};o.multiFilter=function(V,T,U){if(U){V=":not("+V+")"}return F.matches(V,T)};o.dir=function(V,U){var T=[],W=V[U];while(W&&W!=document){if(W.nodeType==1){T.push(W)}W=W[U]}return T};o.nth=function(X,T,V,W){T=T||1;var U=0;for(;X;X=X[V]){if(X.nodeType==1&&++U==T){break}}return X};o.sibling=function(V,U){var T=[];for(;V;V=V.nextSibling){if(V.nodeType==1&&V!=U){T.push(V)}}return T};return;l.Sizzle=F})();o.event={add:function(I,F,H,K){if(I.nodeType==3||I.nodeType==8){return}if(I.setInterval&&I!=l){I=l}if(!H.guid){H.guid=this.guid++}if(K!==g){var G=H;H=this.proxy(G);H.data=K}var E=o.data(I,"events")||o.data(I,"events",{}),J=o.data(I,"handle")||o.data(I,"handle",function(){return typeof o!=="undefined"&&!o.event.triggered?o.event.handle.apply(arguments.callee.elem,arguments):g});J.elem=I;o.each(F.split(/\s+/),function(M,N){var O=N.split(".");N=O.shift();H.type=O.slice().sort().join(".");var L=E[N];if(o.event.specialAll[N]){o.event.specialAll[N].setup.call(I,K,O)}if(!L){L=E[N]={};if(!o.event.special[N]||o.event.special[N].setup.call(I,K,O)===false){if(I.addEventListener){I.addEventListener(N,J,false)}else{if(I.attachEvent){I.attachEvent("on"+N,J)}}}}L[H.guid]=H;o.event.global[N]=true});I=null},guid:1,global:{},remove:function(K,H,J){if(K.nodeType==3||K.nodeType==8){return}var G=o.data(K,"events"),F,E;if(G){if(H===g||(typeof H==="string"&&H.charAt(0)==".")){for(var I in G){this.remove(K,I+(H||""))}}else{if(H.type){J=H.handler;H=H.type}o.each(H.split(/\s+/),function(M,O){var Q=O.split(".");O=Q.shift();var N=RegExp("(^|\\.)"+Q.slice().sort().join(".*\\.")+"(\\.|$)");if(G[O]){if(J){delete G[O][J.guid]}else{for(var P in G[O]){if(N.test(G[O][P].type)){delete G[O][P]}}}if(o.event.specialAll[O]){o.event.specialAll[O].teardown.call(K,Q)}for(F in G[O]){break}if(!F){if(!o.event.special[O]||o.event.special[O].teardown.call(K,Q)===false){if(K.removeEventListener){K.removeEventListener(O,o.data(K,"handle"),false)}else{if(K.detachEvent){K.detachEvent("on"+O,o.data(K,"handle"))}}}F=null;delete G[O]}}})}for(F in G){break}if(!F){var L=o.data(K,"handle");if(L){L.elem=null}o.removeData(K,"events");o.removeData(K,"handle")}}},trigger:function(I,K,H,E){var G=I.type||I;if(!E){I=typeof I==="object"?I[h]?I:o.extend(o.Event(G),I):o.Event(G);if(G.indexOf("!")>=0){I.type=G=G.slice(0,-1);I.exclusive=true}if(!H){I.stopPropagation();if(this.global[G]){o.each(o.cache,function(){if(this.events&&this.events[G]){o.event.trigger(I,K,this.handle.elem)}})}}if(!H||H.nodeType==3||H.nodeType==8){return g}I.result=g;I.target=H;K=o.makeArray(K);K.unshift(I)}I.currentTarget=H;var J=o.data(H,"handle");if(J){J.apply(H,K)}if((!H[G]||(o.nodeName(H,"a")&&G=="click"))&&H["on"+G]&&H["on"+G].apply(H,K)===false){I.result=false}if(!E&&H[G]&&!I.isDefaultPrevented()&&!(o.nodeName(H,"a")&&G=="click")){this.triggered=true;try{H[G]()}catch(L){}}this.triggered=false;if(!I.isPropagationStopped()){var F=H.parentNode||H.ownerDocument;if(F){o.event.trigger(I,K,F,true)}}},handle:function(K){var J,E;K=arguments[0]=o.event.fix(K||l.event);K.currentTarget=this;var L=K.type.split(".");K.type=L.shift();J=!L.length&&!K.exclusive;var I=RegExp("(^|\\.)"+L.slice().sort().join(".*\\.")+"(\\.|$)");E=(o.data(this,"events")||{})[K.type];for(var G in E){var H=E[G];if(J||I.test(H.type)){K.handler=H;K.data=H.data;var F=H.apply(this,arguments);if(F!==g){K.result=F;if(F===false){K.preventDefault();K.stopPropagation()}}if(K.isImmediatePropagationStopped()){break}}}},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(H){if(H[h]){return H}var F=H;H=o.Event(F);for(var G=this.props.length,J;G;){J=this.props[--G];H[J]=F[J]}if(!H.target){H.target=H.srcElement||document}if(H.target.nodeType==3){H.target=H.target.parentNode}if(!H.relatedTarget&&H.fromElement){H.relatedTarget=H.fromElement==H.target?H.toElement:H.fromElement}if(H.pageX==null&&H.clientX!=null){var I=document.documentElement,E=document.body;H.pageX=H.clientX+(I&&I.scrollLeft||E&&E.scrollLeft||0)-(I.clientLeft||0);H.pageY=H.clientY+(I&&I.scrollTop||E&&E.scrollTop||0)-(I.clientTop||0)}if(!H.which&&((H.charCode||H.charCode===0)?H.charCode:H.keyCode)){H.which=H.charCode||H.keyCode}if(!H.metaKey&&H.ctrlKey){H.metaKey=H.ctrlKey}if(!H.which&&H.button){H.which=(H.button&1?1:(H.button&2?3:(H.button&4?2:0)))}return H},proxy:function(F,E){E=E||function(){return F.apply(this,arguments)};E.guid=F.guid=F.guid||E.guid||this.guid++;return E},special:{ready:{setup:B,teardown:function(){}}},specialAll:{live:{setup:function(E,F){o.event.add(this,F[0],c)},teardown:function(G){if(G.length){var E=0,F=RegExp("(^|\\.)"+G[0]+"(\\.|$)");o.each((o.data(this,"events").live||{}),function(){if(F.test(this.type)){E++}});if(E&lt;1){o.event.remove(this,G[0],c)}}}}}};o.Event=function(E){if(!this.preventDefault){return new o.Event(E)}if(E&&E.type){this.originalEvent=E;this.type=E.type}else{this.type=E}this.timeStamp=e();this[h]=true};function k(){return false}function u(){return true}o.Event.prototype={preventDefault:function(){this.isDefaultPrevented=u;var E=this.originalEvent;if(!E){return}if(E.preventDefault){E.preventDefault()}E.returnValue=false},stopPropagation:function(){this.isPropagationStopped=u;var E=this.originalEvent;if(!E){return}if(E.stopPropagation){E.stopPropagation()}E.cancelBubble=true},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=u;this.stopPropagation()},isDefaultPrevented:k,isPropagationStopped:k,isImmediatePropagationStopped:k};var a=function(F){var E=F.relatedTarget;while(E&&E!=this){try{E=E.parentNode}catch(G){E=this}}if(E!=this){F.type=F.data;o.event.handle.apply(this,arguments)}};o.each({mouseover:"mouseenter",mouseout:"mouseleave"},function(F,E){o.event.special[E]={setup:function(){o.event.add(this,F,a,E)},teardown:function(){o.event.remove(this,F,a)}}});o.fn.extend({bind:function(F,G,E){return F=="unload"?this.one(F,G,E):this.each(function(){o.event.add(this,F,E||G,E&&G)})},one:function(G,H,F){var E=o.event.proxy(F||H,function(I){o(this).unbind(I,E);return(F||H).apply(this,arguments)});return this.each(function(){o.event.add(this,G,E,F&&H)})},unbind:function(F,E){return this.each(function(){o.event.remove(this,F,E)})},trigger:function(E,F){return this.each(function(){o.event.trigger(E,F,this)})},triggerHandler:function(E,G){if(this[0]){var F=o.Event(E);F.preventDefault();F.stopPropagation();o.event.trigger(F,G,this[0]);return F.result}},toggle:function(G){var E=arguments,F=1;while(F&lt;E.length){o.event.proxy(G,E[F++])}return this.click(o.event.proxy(G,function(H){this.lastToggle=(this.lastToggle||0)%F;H.preventDefault();return E[this.lastToggle++].apply(this,arguments)||false}))},hover:function(E,F){return this.mouseenter(E).mouseleave(F)},ready:function(E){B();if(o.isReady){E.call(document,o)}else{o.readyList.push(E)}return this},live:function(G,F){var E=o.event.proxy(F);E.guid+=this.selector+G;o(document).bind(i(G,this.selector),this.selector,E);return this},die:function(F,E){o(document).unbind(i(F,this.selector),E?{guid:E.guid+this.selector+F}:null);return this}});function c(H){var E=RegExp("(^|\\.)"+H.type+"(\\.|$)"),G=true,F=[];o.each(o.data(this,"events").live||[],function(I,J){if(E.test(J.type)){var K=o(H.target).closest(J.data)[0];if(K){F.push({elem:K,fn:J})}}});F.sort(function(J,I){return o.data(J.elem,"closest")-o.data(I.elem,"closest")});o.each(F,function(){if(this.fn.call(this.elem,H,this.fn.data)===false){return(G=false)}});return G}function i(F,E){return["live",F,E.replace(/\./g,"`").replace(/ /g,"|")].join(".")}o.extend({isReady:false,readyList:[],ready:function(){if(!o.isReady){o.isReady=true;if(o.readyList){o.each(o.readyList,function(){this.call(document,o)});o.readyList=null}o(document).triggerHandler("ready")}}});var x=false;function B(){if(x){return}x=true;if(document.addEventListener){document.addEventListener("DOMContentLoaded",function(){document.removeEventListener("DOMContentLoaded",arguments.callee,false);o.ready()},false)}else{if(document.attachEvent){document.attachEvent("onreadystatechange",function(){if(document.readyState==="complete"){document.detachEvent("onreadystatechange",arguments.callee);o.ready()}});if(document.documentElement.doScroll&&l==l.top){(function(){if(o.isReady){return}try{document.documentElement.doScroll("left")}catch(E){setTimeout(arguments.callee,0);return}o.ready()})()}}}o.event.add(l,"load",o.ready)}o.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error").split(","),function(F,E){o.fn[E]=function(G){return G?this.bind(E,G):this.trigger(E)}});o(l).bind("unload",function(){for(var E in o.cache){if(E!=1&&o.cache[E].handle){o.event.remove(o.cache[E].handle.elem)}}});(function(){o.support={};var F=document.documentElement,G=document.createElement("script"),K=document.createElement("div"),J="script"+(new Date).getTime();K.style.display="none";K.innerHTML='   &lt;link/>&lt;table>&lt;/table>&lt;a href="/a" style="color:red;float:left;opacity:.5;">a&lt;/a>&lt;select>&lt;option>text&lt;/option>&lt;/select>&lt;object>&lt;param/>&lt;/object>';var H=K.getElementsByTagName("*"),E=K.getElementsByTagName("a")[0];if(!H||!H.length||!E){return}o.support={leadingWhitespace:K.firstChild.nodeType==3,tbody:!K.getElementsByTagName("tbody").length,objectAll:!!K.getElementsByTagName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!K.getElementsByTagName("link").length,style:/red/.test(E.getAttribute("style")),hrefNormalized:E.getAttribute("href")==="/a",opacity:E.style.opacity==="0.5",cssFloat:!!E.style.cssFloat,scriptEval:false,noCloneEvent:true,boxModel:null};G.type="text/javascript";try{G.appendChild(document.createTextNode("window."+J+"=1;"))}catch(I){}F.insertBefore(G,F.firstChild);if(l[J]){o.support.scriptEval=true;delete l[J]}F.removeChild(G);if(K.attachEvent&&K.fireEvent){K.attachEvent("onclick",function(){o.support.noCloneEvent=false;K.detachEvent("onclick",arguments.callee)});K.cloneNode(true).fireEvent("onclick")}o(function(){var L=document.createElement("div");L.style.width=L.style.paddingLeft="1px";document.body.appendChild(L);o.boxModel=o.support.boxModel=L.offsetWidth===2;document.body.removeChild(L).style.display="none"})})();var w=o.support.cssFloat?"cssFloat":"styleFloat";o.props={"for":"htmlFor","class":"className","float":w,cssFloat:w,styleFloat:w,readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};o.fn.extend({_load:o.fn.load,load:function(G,J,K){if(typeof G!=="string"){return this._load(G)}var I=G.indexOf(" ");if(I>=0){var E=G.slice(I,G.length);G=G.slice(0,I)}var H="GET";if(J){if(o.isFunction(J)){K=J;J=null}else{if(typeof J==="object"){J=o.param(J);H="POST"}}}var F=this;o.ajax({url:G,type:H,dataType:"html",data:J,complete:function(M,L){if(L=="success"||L=="notmodified"){F.html(E?o("&lt;div/>").append(M.responseText.replace(/&lt;script(.|\s)*?\/script>/g,"")).find(E):M.responseText)}if(K){F.each(K,[M.responseText,L,M])}}});return this},serialize:function(){return o.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?o.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password|search/i.test(this.type))}).map(function(E,F){var G=o(this).val();return G==null?null:o.isArray(G)?o.map(G,function(I,H){return{name:F.name,value:I}}):{name:F.name,value:G}}).get()}});o.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","),function(E,F){o.fn[F]=function(G){return this.bind(F,G)}});var r=e();o.extend({get:function(E,G,H,F){if(o.isFunction(G)){H=G;G=null}return o.ajax({type:"GET",url:E,data:G,success:H,dataType:F})},getScript:function(E,F){return o.get(E,null,F,"script")},getJSON:function(E,F,G){return o.get(E,F,G,"json")},post:function(E,G,H,F){if(o.isFunction(G)){H=G;G={}}return o.ajax({type:"POST",url:E,data:G,success:H,dataType:F})},ajaxSetup:function(E){o.extend(o.ajaxSettings,E)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:function(){return l.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest()},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:function(M){M=o.extend(true,M,o.extend(true,{},o.ajaxSettings,M));var W,F=/=\?(&|$)/g,R,V,G=M.type.toUpperCase();if(M.data&&M.processData&&typeof M.data!=="string"){M.data=o.param(M.data)}if(M.dataType=="jsonp"){if(G=="GET"){if(!M.url.match(F)){M.url+=(M.url.match(/\?/)?"&":"?")+(M.jsonp||"callback")+"=?"}}else{if(!M.data||!M.data.match(F)){M.data=(M.data?M.data+"&":"")+(M.jsonp||"callback")+"=?"}}M.dataType="json"}if(M.dataType=="json"&&(M.data&&M.data.match(F)||M.url.match(F))){W="jsonp"+r++;if(M.data){M.data=(M.data+"").replace(F,"="+W+"$1")}M.url=M.url.replace(F,"="+W+"$1");M.dataType="script";l[W]=function(X){V=X;I();L();l[W]=g;try{delete l[W]}catch(Y){}if(H){H.removeChild(T)}}}if(M.dataType=="script"&&M.cache==null){M.cache=false}if(M.cache===false&&G=="GET"){var E=e();var U=M.url.replace(/(\?|&)_=.*?(&|$)/,"$1_="+E+"$2");M.url=U+((U==M.url)?(M.url.match(/\?/)?"&":"?")+"_="+E:"")}if(M.data&&G=="GET"){M.url+=(M.url.match(/\?/)?"&":"?")+M.data;M.data=null}if(M.global&&!o.active++){o.event.trigger("ajaxStart")}var Q=/^(\w+:)?\/\/([^\/?#]+)/.exec(M.url);if(M.dataType=="script"&&G=="GET"&&Q&&(Q[1]&&Q[1]!=location.protocol||Q[2]!=location.host)){var H=document.getElementsByTagName("head")[0];var T=document.createElement("script");T.src=M.url;if(M.scriptCharset){T.charset=M.scriptCharset}if(!W){var O=false;T.onload=T.onreadystatechange=function(){if(!O&&(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")){O=true;I();L();T.onload=T.onreadystatechange=null;H.removeChild(T)}}}H.appendChild(T);return g}var K=false;var J=M.xhr();if(M.username){J.open(G,M.url,M.async,M.username,M.password)}else{J.open(G,M.url,M.async)}try{if(M.data){J.setRequestHeader("Content-Type",M.contentType)}if(M.ifModified){J.setRequestHeader("If-Modified-Since",o.lastModified[M.url]||"Thu, 01 Jan 1970 00:00:00 GMT")}J.setRequestHeader("X-Requested-With","XMLHttpRequest");J.setRequestHeader("Accept",M.dataType&&M.accepts[M.dataType]?M.accepts[M.dataType]+", */*":M.accepts._default)}catch(S){}if(M.beforeSend&&M.beforeSend(J,M)===false){if(M.global&&!--o.active){o.event.trigger("ajaxStop")}J.abort();return false}if(M.global){o.event.trigger("ajaxSend",[J,M])}var N=function(X){if(J.readyState==0){if(P){clearInterval(P);P=null;if(M.global&&!--o.active){o.event.trigger("ajaxStop")}}}else{if(!K&&J&&(J.readyState==4||X=="timeout")){K=true;if(P){clearInterval(P);P=null}R=X=="timeout"?"timeout":!o.httpSuccess(J)?"error":M.ifModified&&o.httpNotModified(J,M.url)?"notmodified":"success";if(R=="success"){try{V=o.httpData(J,M.dataType,M)}catch(Z){R="parsererror"}}if(R=="success"){var Y;try{Y=J.getResponseHeader("Last-Modified")}catch(Z){}if(M.ifModified&&Y){o.lastModified[M.url]=Y}if(!W){I()}}else{o.handleError(M,J,R)}L();if(X){J.abort()}if(M.async){J=null}}}};if(M.async){var P=setInterval(N,13);if(M.timeout>0){setTimeout(function(){if(J&&!K){N("timeout")}},M.timeout)}}try{J.send(M.data)}catch(S){o.handleError(M,J,null,S)}if(!M.async){N()}function I(){if(M.success){M.success(V,R)}if(M.global){o.event.trigger("ajaxSuccess",[J,M])}}function L(){if(M.complete){M.complete(J,R)}if(M.global){o.event.trigger("ajaxComplete",[J,M])}if(M.global&&!--o.active){o.event.trigger("ajaxStop")}}return J},handleError:function(F,H,E,G){if(F.error){F.error(H,E,G)}if(F.global){o.event.trigger("ajaxError",[H,F,G])}},active:0,httpSuccess:function(F){try{return !F.status&&location.protocol=="file:"||(F.status>=200&&F.status&lt;300)||F.status==304||F.status==1223}catch(E){}return false},httpNotModified:function(G,E){try{var H=G.getResponseHeader("Last-Modified");return G.status==304||H==o.lastModified[E]}catch(F){}return false},httpData:function(J,H,G){var F=J.getResponseHeader("content-type"),E=H=="xml"||!H&&F&&F.indexOf("xml")>=0,I=E?J.responseXML:J.responseText;if(E&&I.documentElement.tagName=="parsererror"){throw"parsererror"}if(G&&G.dataFilter){I=G.dataFilter(I,H)}if(typeof I==="string"){if(H=="script"){o.globalEval(I)}if(H=="json"){I=l["eval"]("("+I+")")}}return I},param:function(E){var G=[];function H(I,J){G[G.length]=encodeURIComponent(I)+"="+encodeURIComponent(J)}if(o.isArray(E)||E.jquery){o.each(E,function(){H(this.name,this.value)})}else{for(var F in E){if(o.isArray(E[F])){o.each(E[F],function(){H(F,this)})}else{H(F,o.isFunction(E[F])?E[F]():E[F])}}}return G.join("&").replace(/%20/g,"+")}});var m={},n,d=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];function t(F,E){var G={};o.each(d.concat.apply([],d.slice(0,E)),function(){G[this]=F});return G}o.fn.extend({show:function(J,L){if(J){return this.animate(t("show",3),J,L)}else{for(var H=0,F=this.length;H&lt;F;H++){var E=o.data(this[H],"olddisplay");this[H].style.display=E||"";if(o.css(this[H],"display")==="none"){var G=this[H].tagName,K;if(m[G]){K=m[G]}else{var I=o("&lt;"+G+" />").appendTo("body");K=I.css("display");if(K==="none"){K="block"}I.remove();m[G]=K}o.data(this[H],"olddisplay",K)}}for(var H=0,F=this.length;H&lt;F;H++){this[H].style.display=o.data(this[H],"olddisplay")||""}return this}},hide:function(H,I){if(H){return this.animate(t("hide",3),H,I)}else{for(var G=0,F=this.length;G&lt;F;G++){var E=o.data(this[G],"olddisplay");if(!E&&E!=="none"){o.data(this[G],"olddisplay",o.css(this[G],"display"))}}for(var G=0,F=this.length;G&lt;F;G++){this[G].style.display="none"}return this}},_toggle:o.fn.toggle,toggle:function(G,F){var E=typeof G==="boolean";return o.isFunction(G)&&o.isFunction(F)?this._toggle.apply(this,arguments):G==null||E?this.each(function(){var H=E?G:o(this).is(":hidden");o(this)[H?"show":"hide"]()}):this.animate(t("toggle",3),G,F)},fadeTo:function(E,G,F){return this.animate({opacity:G},E,F)},animate:function(I,F,H,G){var E=o.speed(F,H,G);return this[E.queue===false?"each":"queue"](function(){var K=o.extend({},E),M,L=this.nodeType==1&&o(this).is(":hidden"),J=this;for(M in I){if(I[M]=="hide"&&L||I[M]=="show"&&!L){return K.complete.call(this)}if((M=="height"||M=="width")&&this.style){K.display=o.css(this,"display");K.overflow=this.style.overflow}}if(K.overflow!=null){this.style.overflow="hidden"}K.curAnim=o.extend({},I);o.each(I,function(O,S){var R=new o.fx(J,K,O);if(/toggle|show|hide/.test(S)){R[S=="toggle"?L?"show":"hide":S](I)}else{var Q=S.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),T=R.cur(true)||0;if(Q){var N=parseFloat(Q[2]),P=Q[3]||"px";if(P!="px"){J.style[O]=(N||1)+P;T=((N||1)/R.cur(true))*T;J.style[O]=T+P}if(Q[1]){N=((Q[1]=="-="?-1:1)*N)+T}R.custom(T,N,P)}else{R.custom(T,S,"")}}});return true})},stop:function(F,E){var G=o.timers;if(F){this.queue([])}this.each(function(){for(var H=G.length-1;H>=0;H--){if(G[H].elem==this){if(E){G[H](true)}G.splice(H,1)}}});if(!E){this.dequeue()}return this}});o.each({slideDown:t("show",1),slideUp:t("hide",1),slideToggle:t("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(E,F){o.fn[E]=function(G,H){return this.animate(F,G,H)}});o.extend({speed:function(G,H,F){var E=typeof G==="object"?G:{complete:F||!F&&H||o.isFunction(G)&&G,duration:G,easing:F&&H||H&&!o.isFunction(H)&&H};E.duration=o.fx.off?0:typeof E.duration==="number"?E.duration:o.fx.speeds[E.duration]||o.fx.speeds._default;E.old=E.complete;E.complete=function(){if(E.queue!==false){o(this).dequeue()}if(o.isFunction(E.old)){E.old.call(this)}};return E},easing:{linear:function(G,H,E,F){return E+F*G},swing:function(G,H,E,F){return((-Math.cos(G*Math.PI)/2)+0.5)*F+E}},timers:[],fx:function(F,E,G){this.options=E;this.elem=F;this.prop=G;if(!E.orig){E.orig={}}}});o.fx.prototype={update:function(){if(this.options.step){this.options.step.call(this.elem,this.now,this)}(o.fx.step[this.prop]||o.fx.step._default)(this);if((this.prop=="height"||this.prop=="width")&&this.elem.style){this.elem.style.display="block"}},cur:function(F){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null)){return this.elem[this.prop]}var E=parseFloat(o.css(this.elem,this.prop,F));return E&&E>-10000?E:parseFloat(o.curCSS(this.elem,this.prop))||0},custom:function(I,H,G){this.startTime=e();this.start=I;this.end=H;this.unit=G||this.unit||"px";this.now=this.start;this.pos=this.state=0;var E=this;function F(J){return E.step(J)}F.elem=this.elem;if(F()&&o.timers.push(F)&&!n){n=setInterval(function(){var K=o.timers;for(var J=0;J&lt;K.length;J++){if(!K[J]()){K.splice(J--,1)}}if(!K.length){clearInterval(n);n=g}},13)}},show:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.show=true;this.custom(this.prop=="width"||this.prop=="height"?1:0,this.cur());o(this.elem).show()},hide:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(H){var G=e();if(H||G>=this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var E=true;for(var F in this.options.curAnim){if(this.options.curAnim[F]!==true){E=false}}if(E){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(o.css(this.elem,"display")=="none"){this.elem.style.display="block"}}if(this.options.hide){o(this.elem).hide()}if(this.options.hide||this.options.show){for(var I in this.options.curAnim){o.attr(this.elem.style,I,this.options.orig[I])}}this.options.complete.call(this.elem)}return false}else{var J=G-this.startTime;this.state=J/this.options.duration;this.pos=o.easing[this.options.easing||(o.easing.swing?"swing":"linear")](this.state,J,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update()}return true}};o.extend(o.fx,{speeds:{slow:600,fast:200,_default:400},step:{opacity:function(E){o.attr(E.elem.style,"opacity",E.now)},_default:function(E){if(E.elem.style&&E.elem.style[E.prop]!=null){E.elem.style[E.prop]=E.now+E.unit}else{E.elem[E.prop]=E.now}}}});if(document.documentElement.getBoundingClientRect){o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}var G=this[0].getBoundingClientRect(),J=this[0].ownerDocument,F=J.body,E=J.documentElement,L=E.clientTop||F.clientTop||0,K=E.clientLeft||F.clientLeft||0,I=G.top+(self.pageYOffset||o.boxModel&&E.scrollTop||F.scrollTop)-L,H=G.left+(self.pageXOffset||o.boxModel&&E.scrollLeft||F.scrollLeft)-K;return{top:I,left:H}}}else{o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}o.offset.initialized||o.offset.initialize();var J=this[0],G=J.offsetParent,F=J,O=J.ownerDocument,M,H=O.documentElement,K=O.body,L=O.defaultView,E=L.getComputedStyle(J,null),N=J.offsetTop,I=J.offsetLeft;while((J=J.parentNode)&&J!==K&&J!==H){M=L.getComputedStyle(J,null);N-=J.scrollTop,I-=J.scrollLeft;if(J===G){N+=J.offsetTop,I+=J.offsetLeft;if(o.offset.doesNotAddBorder&&!(o.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(J.tagName))){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}F=G,G=J.offsetParent}if(o.offset.subtractsBorderForOverflowNotVisible&&M.overflow!=="visible"){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}E=M}if(E.position==="relative"||E.position==="static"){N+=K.offsetTop,I+=K.offsetLeft}if(E.position==="fixed"){N+=Math.max(H.scrollTop,K.scrollTop),I+=Math.max(H.scrollLeft,K.scrollLeft)}return{top:N,left:I}}}o.offset={initialize:function(){if(this.initialized){return}var L=document.body,F=document.createElement("div"),H,G,N,I,M,E,J=L.style.marginTop,K='&lt;div style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;">&lt;div>&lt;/div>&lt;/div>&lt;table style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;" cellpadding="0" cellspacing="0">&lt;tr>&lt;td>&lt;/td>&lt;/tr>&lt;/table>';M={position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"};for(E in M){F.style[E]=M[E]}F.innerHTML=K;L.insertBefore(F,L.firstChild);H=F.firstChild,G=H.firstChild,I=H.nextSibling.firstChild.firstChild;this.doesNotAddBorder=(G.offsetTop!==5);this.doesAddBorderForTableAndCells=(I.offsetTop===5);H.style.overflow="hidden",H.style.position="relative";this.subtractsBorderForOverflowNotVisible=(G.offsetTop===-5);L.style.marginTop="1px";this.doesNotIncludeMarginInBodyOffset=(L.offsetTop===0);L.style.marginTop=J;L.removeChild(F);this.initialized=true},bodyOffset:function(E){o.offset.initialized||o.offset.initialize();var G=E.offsetTop,F=E.offsetLeft;if(o.offset.doesNotIncludeMarginInBodyOffset){G+=parseInt(o.curCSS(E,"marginTop",true),10)||0,F+=parseInt(o.curCSS(E,"marginLeft",true),10)||0}return{top:G,left:F}}};o.fn.extend({position:function(){var I=0,H=0,F;if(this[0]){var G=this.offsetParent(),J=this.offset(),E=/^body|html$/i.test(G[0].tagName)?{top:0,left:0}:G.offset();J.top-=j(this,"marginTop");J.left-=j(this,"marginLeft");E.top+=j(G,"borderTopWidth");E.left+=j(G,"borderLeftWidth");F={top:J.top-E.top,left:J.left-E.left}}return F},offsetParent:function(){var E=this[0].offsetParent||document.body;while(E&&(!/^body|html$/i.test(E.tagName)&&o.css(E,"position")=="static")){E=E.offsetParent}return o(E)}});o.each(["Left","Top"],function(F,E){var G="scroll"+E;o.fn[G]=function(H){if(!this[0]){return null}return H!==g?this.each(function(){this==l||this==document?l.scrollTo(!F?H:o(l).scrollLeft(),F?H:o(l).scrollTop()):this[G]=H}):this[0]==l||this[0]==document?self[F?"pageYOffset":"pageXOffset"]||o.boxModel&&document.documentElement[G]||document.body[G]:this[0][G]}});o.each(["Height","Width"],function(I,G){var E=I?"Left":"Top",H=I?"Right":"Bottom",F=G.toLowerCase();o.fn["inner"+G]=function(){return this[0]?o.css(this[0],F,false,"padding"):null};o.fn["outer"+G]=function(K){return this[0]?o.css(this[0],F,false,K?"margin":"border"):null};var J=G.toLowerCase();o.fn[J]=function(K){return this[0]==l?document.compatMode=="CSS1Compat"&&document.documentElement["client"+G]||document.body["client"+G]:this[0]==document?Math.max(document.documentElement["client"+G],document.body["scroll"+G],document.documentElement["scroll"+G],document.body["offset"+G],document.documentElement["offset"+G]):K===g?(this.length?o.css(this[0],J):null):this.css(J,typeof K==="string"?K:K+"px")}})})();
\ No newline at end of file
diff --git a/diff/content/template.html b/diff/content/template.html
deleted file mode 100644
index a863760..0000000
--- a/diff/content/template.html
+++ /dev/null
@@ -1,20 +0,0 @@
-&lt;html>
-&lt;head>
-	&lt;link rel="stylesheet" href="content/diff.css" type="text/css" media="screen" charset="utf-8">
-	&lt;script src="content/jquery.js" type="text/javascript" charset="utf-8">&lt;/script>
-	&lt;script src="content/gity.js" type="text/javascript" charset="utf-8">&lt;/script>
-	&lt;script type="text/javascript" charset="utf-8">
-		$(document).ready(startDiff);
-	&lt;/script>
-&lt;/head>
-&lt;body>
-	&lt;textarea id="diff" class="difftextarea">
-{content}
-	&lt;/textarea>
-	&lt;pre>&lt;code id='updateddiff'>&lt;/code>&lt;/pre>
-&lt;/body>
-&lt;!--
-/**
-modified on nov 16 2009.
-**/
--->
diff --git a/diff/stagevshead.html b/diff/stagevshead.html
deleted file mode 100644
index e69de29..0000000
diff --git a/diffs/__test.html b/diffs/__test.html
deleted file mode 100644
index f366b39..0000000
--- a/diffs/__test.html
+++ /dev/null
@@ -1,45 +0,0 @@
-&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
-&lt;head>
-	&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
-	&lt;title>untitled&lt;/title>
-	&lt;link rel="stylesheet" href="styles.css" type="text/css" media="screen" title="no title" charset="utf-8">
-&lt;/head>
-&lt;body>
-
-	&lt;div class="highlight">&lt;pre>&lt;span class="n">diff&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span>
-	&lt;span class="n">index&lt;/span> &lt;span class="n">b27216b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">.2f&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="mi">884&lt;/span> &lt;span class="mi">100644&lt;/span>
-	&lt;span class="o">---&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span>
-	&lt;span class="o">+++&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span>
-	&lt;span class="err">@@&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">740&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">740&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="err">@@&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">GTModalController&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">modals&lt;/span>&lt;span class="p">;&lt;/span>
-
-	 &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nl">runSubmoduleSyncForSubmodule:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">_submodule&lt;/span> &lt;span class="p">{&lt;/span>
-	 	&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allCanceled&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">networkOpsCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
-	&lt;span class="o">-&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Syncing submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-	&lt;span class="o">+&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Synchronizing submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="n">GTOpSubmoduleSync&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[[&lt;/span>&lt;span class="n">GTOpSubmoduleSync&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithGD:&lt;/span>&lt;span class="n">gd&lt;/span> &lt;span class="nl">andSubmodule:&lt;/span>&lt;span class="n">_submodule&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">autorelease&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="nl">createCancelableQueueWithNetworkOperation:&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="p">[&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="nl">setCompletionBlock:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
-	&lt;span class="err">@@&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">773&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">773&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="err">@@&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">GTModalController&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">modals&lt;/span>&lt;span class="p">;&lt;/span>
-
-	 &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">runSubmoduleUpdateAll&lt;/span> &lt;span class="p">{&lt;/span>
-	 	&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allCanceled&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">networkOpsCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
-	&lt;span class="o">-&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Pulling submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-	&lt;span class="o">+&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Updating all submodules, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="n">GTOpUpdateSubs&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[[&lt;/span>&lt;span class="n">GTOpUpdateSubs&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithGD:&lt;/span>&lt;span class="n">gd&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">autorelease&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="nl">createCancelableQueueWithNetworkOperation:&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="p">[&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="nl">setCompletionBlock:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
-	&lt;span class="err">@@&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">784&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">784&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="err">@@&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">GTModalController&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">modals&lt;/span>&lt;span class="p">;&lt;/span>
-
-	 &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">runSubmoduleInitAll&lt;/span> &lt;span class="p">{&lt;/span>
-	 	&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allCanceled&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">networkOpsCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
-	&lt;span class="o">-&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Pulling submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-	&lt;span class="o">+&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Initializing all submodules, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="n">GTOpInitializeSubs&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[[&lt;/span>&lt;span class="n">GTOpInitializeSubs&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithGD:&lt;/span>&lt;span class="n">gd&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">autorelease&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="nl">createCancelableQueueWithNetworkOperation:&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">];&lt;/span>
-	 	&lt;span class="p">[&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="nl">setCompletionBlock:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
-	&lt;/pre>&lt;/div>
-
-
-&lt;/body>
-&lt;/html>
diff --git a/diffs/__test2.html b/diffs/__test2.html
deleted file mode 100644
index f34fff1..0000000
--- a/diffs/__test2.html
+++ /dev/null
@@ -1,47 +0,0 @@
-&lt;html>
-&lt;head>
-	&lt;style>
-	body{
-		margin:0;
-		padding:0;
-		font:11px monoco;
-		anti-alias:none;
-	}
-	&lt;/style>
-&lt;/head>
-&lt;body>
-&lt;pre>
-diff --git a/src/GTOperationsController.m b/src/GTOperationsController.m
-index b27216b..2f07884 100644
---- a/src/GTOperationsController.m
-+++ b/src/GTOperationsController.m
-@@ -740,7 +740,7 @@ static GTModalController * modals;
- 
- - (void) runSubmoduleSyncForSubmodule:(NSString *) _submodule {
- 	if(allCanceled || networkOpsCancelled) return;
--	[status showStatusIndicatorWithLabel:@"Syncing submodule, please wait"];
-+	[status showStatusIndicatorWithLabel:@"Synchronizing submodule, please wait"];
- 	GTOpSubmoduleSync * o = [[[GTOpSubmoduleSync alloc] initWithGD:gd andSubmodule:_submodule] autorelease];
- 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
- 	[o setCompletionBlock:^{
-@@ -773,7 +773,7 @@ static GTModalController * modals;
- 
- - (void) runSubmoduleUpdateAll {
- 	if(allCanceled || networkOpsCancelled) return;
--	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-+	[status showStatusIndicatorWithLabel:@"Updating all submodules, please wait"];
- 	GTOpUpdateSubs * o = [[[GTOpUpdateSubs alloc] initWithGD:gd] autorelease];
- 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
- 	[o setCompletionBlock:^{
-@@ -784,7 +784,7 @@ static GTModalController * modals;
- 
- - (void) runSubmoduleInitAll {
- 	if(allCanceled || networkOpsCancelled) return;
--	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-+	[status showStatusIndicatorWithLabel:@"Initializing all submodules, please wait"];
- 	GTOpInitializeSubs * o = [[[GTOpInitializeSubs alloc] initWithGD:gd] autorelease];
- 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
- 	[o setCompletionBlock:^{
-&lt;/pre>
-&lt;/body>
-&lt;/html>
\ No newline at end of file
diff --git a/diffs/gtdiff1 b/diffs/gtdiff1
deleted file mode 100644
index 64aa00e..0000000
--- a/diffs/gtdiff1
+++ /dev/null
@@ -1,31 +0,0 @@
-diff --git a/src/GTOperationsController.m b/src/GTOperationsController.m
-index b27216b..2f07884 100644
---- a/src/GTOperationsController.m
-+++ b/src/GTOperationsController.m
-@@ -740,7 +740,7 @@ static GTModalController * modals;
- 
- - (void) runSubmoduleSyncForSubmodule:(NSString *) _submodule {
- 	if(allCanceled || networkOpsCancelled) return;
--	[status showStatusIndicatorWithLabel:@"Syncing submodule, please wait"];
-+	[status showStatusIndicatorWithLabel:@"Synchronizing submodule, please wait"];
- 	GTOpSubmoduleSync * o = [[[GTOpSubmoduleSync alloc] initWithGD:gd andSubmodule:_submodule] autorelease];
- 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
- 	[o setCompletionBlock:^{
-@@ -773,7 +773,7 @@ static GTModalController * modals;
- 
- - (void) runSubmoduleUpdateAll {
- 	if(allCanceled || networkOpsCancelled) return;
--	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-+	[status showStatusIndicatorWithLabel:@"Updating all submodules, please wait"];
- 	GTOpUpdateSubs * o = [[[GTOpUpdateSubs alloc] initWithGD:gd] autorelease];
- 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
- 	[o setCompletionBlock:^{
-@@ -784,7 +784,7 @@ static GTModalController * modals;
- 
- - (void) runSubmoduleInitAll {
- 	if(allCanceled || networkOpsCancelled) return;
--	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-+	[status showStatusIndicatorWithLabel:@"Initializing all submodules, please wait"];
- 	GTOpInitializeSubs * o = [[[GTOpInitializeSubs alloc] initWithGD:gd] autorelease];
- 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
- 	[o setCompletionBlock:^{
diff --git a/diffs/gtdiff1.html b/diffs/gtdiff1.html
deleted file mode 100644
index c580072..0000000
--- a/diffs/gtdiff1.html
+++ /dev/null
@@ -1,32 +0,0 @@
-&lt;div class="highlight">&lt;pre>&lt;span class="n">diff&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">git&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span>
-&lt;span class="n">index&lt;/span> &lt;span class="n">b27216b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">.2f&lt;/span>&lt;span class="mo">07&lt;/span>&lt;span class="mi">884&lt;/span> &lt;span class="mi">100644&lt;/span>
-&lt;span class="o">---&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span>
-&lt;span class="o">+++&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">GTOperationsController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m&lt;/span>
-&lt;span class="err">@@&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">740&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">740&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="err">@@&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">GTModalController&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">modals&lt;/span>&lt;span class="p">;&lt;/span>
- 
- &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nl">runSubmoduleSyncForSubmodule:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">_submodule&lt;/span> &lt;span class="p">{&lt;/span>
- 	&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allCanceled&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">networkOpsCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
-&lt;span class="o">-&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Syncing submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-&lt;span class="o">+&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Synchronizing submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="n">GTOpSubmoduleSync&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[[&lt;/span>&lt;span class="n">GTOpSubmoduleSync&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithGD:&lt;/span>&lt;span class="n">gd&lt;/span> &lt;span class="nl">andSubmodule:&lt;/span>&lt;span class="n">_submodule&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">autorelease&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="nl">createCancelableQueueWithNetworkOperation:&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="p">[&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="nl">setCompletionBlock:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
-&lt;span class="err">@@&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">773&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">773&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="err">@@&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">GTModalController&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">modals&lt;/span>&lt;span class="p">;&lt;/span>
- 
- &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">runSubmoduleUpdateAll&lt;/span> &lt;span class="p">{&lt;/span>
- 	&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allCanceled&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">networkOpsCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
-&lt;span class="o">-&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Pulling submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-&lt;span class="o">+&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Updating all submodules, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="n">GTOpUpdateSubs&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[[&lt;/span>&lt;span class="n">GTOpUpdateSubs&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithGD:&lt;/span>&lt;span class="n">gd&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">autorelease&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="nl">createCancelableQueueWithNetworkOperation:&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="p">[&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="nl">setCompletionBlock:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
-&lt;span class="err">@@&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">784&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">784&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span> &lt;span class="err">@@&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">GTModalController&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">modals&lt;/span>&lt;span class="p">;&lt;/span>
- 
- &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">runSubmoduleInitAll&lt;/span> &lt;span class="p">{&lt;/span>
- 	&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allCanceled&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">networkOpsCancelled&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
-&lt;span class="o">-&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Pulling submodule, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
-&lt;span class="o">+&lt;/span>	&lt;span class="p">[&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="nl">showStatusIndicatorWithLabel:&lt;/span>&lt;span class="s">@&quot;Initializing all submodules, please wait&quot;&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="n">GTOpInitializeSubs&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[[&lt;/span>&lt;span class="n">GTOpInitializeSubs&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithGD:&lt;/span>&lt;span class="n">gd&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">autorelease&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="n">NSOperationQueue&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">q&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="nl">createCancelableQueueWithNetworkOperation:&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">];&lt;/span>
- 	&lt;span class="p">[&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="nl">setCompletionBlock:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
-&lt;/pre>&lt;/div>
diff --git a/diffs/styles.css b/diffs/styles.css
deleted file mode 100644
index b0bdc4d..0000000
--- a/diffs/styles.css
+++ /dev/null
@@ -1,61 +0,0 @@
-.hll { background-color: #ffffcc }
-.c { color: #808080 } /* Comment */
-.err { color: #F00000; background-color: #F0A0A0 } /* Error */
-.k { color: #008000; font-weight: bold } /* Keyword */
-.o { color: #303030 } /* Operator */
-.cm { color: #808080 } /* Comment.Multiline */
-.cp { color: #507090 } /* Comment.Preproc */
-.c1 { color: #808080 } /* Comment.Single */
-.cs { color: #cc0000; font-weight: bold } /* Comment.Special */
-.gd { color: #A00000 } /* Generic.Deleted */
-.ge { font-style: italic } /* Generic.Emph */
-.gr { color: #FF0000 } /* Generic.Error */
-.gh { color: #000080; font-weight: bold } /* Generic.Heading */
-.gi { color: #00A000 } /* Generic.Inserted */
-.go { color: #808080 } /* Generic.Output */
-.gp { color: #c65d09; font-weight: bold } /* Generic.Prompt */
-.gs { font-weight: bold } /* Generic.Strong */
-.gu { color: #800080; font-weight: bold } /* Generic.Subheading */
-.gt { color: #0040D0 } /* Generic.Traceback */
-.kc { color: #008000; font-weight: bold } /* Keyword.Constant */
-.kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
-.kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
-.kp { color: #003080; font-weight: bold } /* Keyword.Pseudo */
-.kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
-.kt { color: #303090; font-weight: bold } /* Keyword.Type */
-.m { color: #6000E0; font-weight: bold } /* Literal.Number */
-.s { background-color: #fff0f0 } /* Literal.String */
-.na { color: #0000C0 } /* Name.Attribute */
-.nb { color: #007020 } /* Name.Builtin */
-.nc { color: #B00060; font-weight: bold } /* Name.Class */
-.no { color: #003060; font-weight: bold } /* Name.Constant */
-.nd { color: #505050; font-weight: bold } /* Name.Decorator */
-.ni { color: #800000; font-weight: bold } /* Name.Entity */
-.ne { color: #F00000; font-weight: bold } /* Name.Exception */
-.nf { color: #0060B0; font-weight: bold } /* Name.Function */
-.nl { color: #907000; font-weight: bold } /* Name.Label */
-.nn { color: #0e84b5; font-weight: bold } /* Name.Namespace */
-.nt { color: #007000 } /* Name.Tag */
-.nv { color: #906030 } /* Name.Variable */
-.ow { color: #000000; font-weight: bold } /* Operator.Word */
-.w { color: #bbbbbb } /* Text.Whitespace */
-.mf { color: #6000E0; font-weight: bold } /* Literal.Number.Float */
-.mh { color: #005080; font-weight: bold } /* Literal.Number.Hex */
-.mi { color: #0000D0; font-weight: bold } /* Literal.Number.Integer */
-.mo { color: #4000E0; font-weight: bold } /* Literal.Number.Oct */
-.sb { background-color: #fff0f0 } /* Literal.String.Backtick */
-.sc { color: #0040D0 } /* Literal.String.Char */
-.sd { color: #D04020 } /* Literal.String.Doc */
-.s2 { background-color: #fff0f0 } /* Literal.String.Double */
-.se { color: #606060; font-weight: bold; background-color: #fff0f0 } /* Literal.String.Escape */
-.sh { background-color: #fff0f0 } /* Literal.String.Heredoc */
-.si { background-color: #e0e0e0 } /* Literal.String.Interpol */
-.sx { color: #D02000; background-color: #fff0f0 } /* Literal.String.Other */
-.sr { color: #000000; background-color: #fff0ff } /* Literal.String.Regex */
-.s1 { background-color: #fff0f0 } /* Literal.String.Single */
-.ss { color: #A06000 } /* Literal.String.Symbol */
-.bp { color: #007020 } /* Name.Builtin.Pseudo */
-.vc { color: #306090 } /* Name.Variable.Class */
-.vg { color: #d07000; font-weight: bold } /* Name.Variable.Global */
-.vi { color: #3030B0 } /* Name.Variable.Instance */
-.il { color: #0000D0; font-weight: bold } /* Literal.Number.Integer.Long */
diff --git a/diffs/test1 b/diffs/test1
deleted file mode 100644
index 8335eb1..0000000
--- a/diffs/test1
+++ /dev/null
@@ -1,15903 +0,0 @@
-diff --git a/Info.plist b/Info.plist
-index 1b9c694..be545f3 100644
---- a/Info.plist
-+++ b/Info.plist
-@@ -42,7 +42,7 @@
- 	&lt;key>CFBundleSignature&lt;/key>
- 	&lt;string>????&lt;/string>
- 	&lt;key>CFBundleVersion&lt;/key>
--	&lt;string>2345&lt;/string>
-+	&lt;string>2347&lt;/string>
- 	&lt;key>LSMinimumSystemVersion&lt;/key>
- 	&lt;string>${MACOSX_DEPLOYMENT_TARGET}&lt;/string>
- 	&lt;key>NSMainNibFile&lt;/key>
-diff --git a/assets/gitui.psd b/assets/gitui.psd
-index a779764..6f75636 100644
-Binary files a/assets/gitui.psd and b/assets/gitui.psd differ
-diff --git a/diff/__others/v1/css/GitX.css b/diff/__others/v1/css/GitX.css
-new file mode 100755
-index 0000000..c8a03f3
---- /dev/null
-+++ b/diff/__others/v1/css/GitX.css
-@@ -0,0 +1,9 @@
-+@import url("diff.css");
-+@import url("notification.css");
-+
-+body {
-+	margin: 0;
-+	margin-top: 5px;
-+	width: 100%;
-+	font-family: 'Lucida Grande', Arial;
-+}
-diff --git a/diff/__others/v1/css/diff.css b/diff/__others/v1/css/diff.css
-new file mode 100755
-index 0000000..ca46216
---- /dev/null
-+++ b/diff/__others/v1/css/diff.css
-@@ -0,0 +1,56 @@
-+.diff .file {
-+	margin: 10px;
-+	padding: 10px;
-+	-webkit-border-radius: 10px;
-+	border: 1px solid #CCC;
-+	-webkit-box-shadow: 1px 1px 2px #DDD;
-+}
-+
-+.diff .file .fileHeader {
-+	margin-top: -5px;
-+	padding-bottom: 1px;
-+	font-weight: bold;
-+}
-+
-+.diff .file .diffContent {
-+	white-space: pre;
-+	font-family: Monaco;
-+}
-+
-+.diff .file .diffcontent .lineno {
-+	float: left;
-+	padding-left: 2px;
-+	padding-right: 2px;
-+	background-color: #ECECEC;
-+	color: #A9A9A9;
-+	border: 1px solid #DDDDDD;
-+	text-align: right;
-+}
-+
-+.diff .file .diffContent .lines {
-+	overflow: auto;
-+}
-+
-+.diff .file .diffContent .lines .hunkheader {
-+  background-color: #f7f7f7;
-+  color: #bbb;
-+}
-+
-+
-+.diff .file .diffcontent .lines .delline {
-+  background-color: #FEE;
-+  color: #B00;
-+}
-+
-+.diff .file .diffcontent .lines .addline {
-+  background-color: #DFD;
-+  color: #080;
-+}
-+
-+.diff .file .diffcontent .lines .whitespace {
-+	background-color: rgba(255,0,0,0.5);
-+}
-+
-+#CurrentHunk {
-+	border-left: 5px solid black;
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v1/css/notification.css b/diff/__others/v1/css/notification.css
-new file mode 100755
-index 0000000..3d9c660
---- /dev/null
-+++ b/diff/__others/v1/css/notification.css
-@@ -0,0 +1,23 @@
-+#notification {
-+	margin: 5px;
-+	padding: 3px;
-+	clear: both;
-+
-+	border: 1px solid black;
-+	background-color: #f3f3f3;
-+
-+	text-align: center;
-+	font-size: 80%;
-+
-+	-webkit-border-radius: 2px;
-+}
-+
-+#notification.success {
-+	background-color: #CCFF99;
-+	border: 1px solid #99CC66;
-+}
-+
-+#notification.fail {
-+	background-color: #ff9999;
-+	border: 1px solid #cc6666;
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v1/dragtest.html b/diff/__others/v1/dragtest.html
-new file mode 100755
-index 0000000..d64faf6
---- /dev/null
-+++ b/diff/__others/v1/dragtest.html
-@@ -0,0 +1,195 @@
-+&lt;html>
-+	&lt;head>
-+		
-+		&lt;link rel="stylesheet" href="css/GitX.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+		&lt;link rel="stylesheet" href="css/diff.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+		&lt;script src="lib/GitX.js" type="text/javascript" charset="utf-8">&lt;/script>
-+		&lt;script src="lib/diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+		
-+		&lt;style type="text/css" media="screen">
-+			#lijstmetdingen {
-+				font-size: 50%;
-+			}
-+			.line {
-+			}
-+			#selected {
-+				background-color: #B5D5FE !important;
-+				-webkit-border-radius: 3px;
-+				-webkit-box-sizing: border-box;
-+				width: 100%;
-+/*				border: 1px solid red;*/
-+				padding-left: 3px !important;
-+				padding-right: 3px !important;
-+/*				margin-left: -3px !important;
-+				margin-right: -3px !important;
-+*/			}
-+			
-+			#selected div {
-+				background-color: #B5D5FE;
-+			}
-+
-+			#stageButton {
-+				float: right;
-+
-+				display: block;
-+				height: 12px;
-+				padding: 4px;
-+				-webkit-border-radius: 4px;
-+				background-color: white !important;
-+				border: 1px solid blue;
-+				margin-top: 4px;
-+				z-index: -100;
-+			}
-+			
-+		&lt;/style>
-+
-+		&lt;script type="text/javascript" charset="utf-8">
-+			var nodeIndex = function(list, element)
-+			{
-+				for (i = 0; i &lt; list.childNodes.length; ++i)
-+					if (list.childNodes[i] == element)
-+						return i;
-+				return -1
-+			}
-+
-+			var deselect = function()
-+			{
-+				var selection = document.getElementById("selected");
-+				if (selection) {
-+					while (selection.childNodes[1])
-+						selection.parentNode.insertBefore(selection.childNodes[1], selection);
-+					selection.parentNode.removeChild(selection);
-+				}
-+			}
-+
-+			var showSelection = function(list, from, to)
-+			{
-+				deselect();
-+				var startIndex = nodeIndex(list, from);
-+				var endIndex = nodeIndex(list, to);
-+				
-+				if (startIndex == -1 || endIndex == -1)
-+					return;
-+
-+				if (startIndex > endIndex)
-+				{
-+					var tmp = endIndex;
-+					endIndex = startIndex;
-+					startIndex = tmp;
-+					tmp = to;
-+					to = from;
-+					from = tmp;
-+				}
-+
-+				// new Array().slice() doesn't work with elementnodes :(
-+				// So we create an array ourselves
-+				var elementList = [];
-+				for (i = startIndex; i &lt;= endIndex; ++i)
-+					elementList.push(from.parentNode.childNodes[i]);
-+
-+				var selection = document.createElement("div");
-+				selection.setAttribute("id", "selected");
-+				var button = document.createElement("div");
-+				button.setAttribute("id", "stageButton");
-+				button.appendChild(document.createTextNode("Stage lines"));
-+				button.onmousedown = function() {
-+					while (selection.firstChild)
-+						selection.removeChild(selection.firstChild);
-+					return false;
-+				}
-+				selection.appendChild(button);
-+				list.insertBefore(selection, from);
-+
-+				var element;
-+				for (i = 0; i &lt; elementList.length; i++)
-+					selection.appendChild(elementList[i]);
-+			}
-+
-+			var load = function()
-+			{
-+				/*document.onmousedown = function(event) {
-+					var cur = event.target;
-+					while (cur) {
-+						if (cur.getAttribute && cur.getAttribute("class") && cur.getAttribute("class").indexOf("lines") != -1)
-+							return;
-+						cur = cur.parentNode;
-+					}
-+					deselect();
-+				}*/
-+
-+				highlightDiff($("orig_diff").value,
-+					$("lijstmetdingen"),
-+					{ }
-+				);
-+
-+				var list = document.getElementsByClassName("lines");
-+				
-+				for (i = 0; i &lt; list.length; ++i) {
-+					file = list[i];
-+					file.onmousedown = function(event) {
-+						file.onmouseover = function(event2) {
-+							showSelection(file, event.srcElement, event2.target);
-+							return false;
-+						};
-+
-+						file.onmouseup = function(event2) {
-+							file.onmouseover = null;
-+							file.onmouseup = null;
-+						};
-+
-+						showSelection(file, event.srcElement, event.srcElement);
-+						return false;
-+					}
-+				}
-+			}
-+		&lt;/script>
-+	&lt;/head>
-+	&lt;body onload="load()">
-+			&lt;textarea style='display:none' id="orig_diff" rows="8" cols="40">
-+diff --git a/.gitignore b/.gitignore
-+index b89b7b7..3367a4e 100644
-+--- a/.gitignore
-++++ b/.gitignore
-+@@ -1,4 +1,5 @@
-+ build
-++build/revision
-+ *.xcodeproj/*.pbxuser
-+ *.xcodeproj/*.perspectivev3
-+ *.xcodeproj/*.mode1v3
-+diff --git a/ApplicationController.m b/ApplicationController.m
-+index 86252cd..3a86d38 100644
-+--- a/ApplicationController.m
-++++ b/ApplicationController.m
-+@@ -21,7 +21,7 @@ @implementation ApplicationController
-+
-+ - (ApplicationController*)init
-+ {
-+-#ifndef NDEBUG
-++#ifdef DEBUG_BUILD
-+ 	[NSApp activateIgnoringOtherApps:YES];
-+ #endif
-+
-+@@ -92,12 +92,16 @@ - (IBAction)openPreferencesWindow:(id)sender
-+ - (IBAction)installCliTool:(id)sender;
-+ {
-+ 	BOOL success               = NO;
-+-	NSString* installationPath = @"/usr/local/bin/gitx";
-++	NSString* installationPath = @"/usr/local/bin/";
-++	NSString* installationName = @"gitx";
-+ 	NSString* toolPath         = [[NSBundle mainBundle] pathForResource:@"gitx" ofType:@""];
-+ 	if (toolPath) {
-+ 		AuthorizationRef auth;
-+ 		if (AuthorizationCreate(NULL, kAuthorizationEmptyEnvironment, kAuthorizationFlagDefaults, &auth) == errAuthorizationSuccess) {
-+-			char const* arguments[] = { "-f", "-s", [toolPath UTF8String], [installationPath UTF8String], NULL };
-++			char const* mkdir_arg[] = { "-p", [installationPath UTF8String], NULL};
-++			char const* mkdir	= "/bin/mkdir";
-++			AuthorizationExecuteWithPrivileges(auth, mkdir, kAuthorizationFlagDefaults, (char**)mkdir_arg, NULL);
-++			char const* arguments[] = { "-f", "-s", [toolPath UTF8String], [[installationPath stringByAppendingString: installationName] UTF8String],  NULL };
-+ 			char const* helperTool  = "/bin/ln";
-+ 			if (AuthorizationExecuteWithPrivileges(auth, helperTool, kAuthorizationFlagDefaults, (char**)arguments, NULL) == errAuthorizationSuccess) {
-+ 				int status;
-+			&lt;/textarea>
-+			&lt;div id='lijstmetdingen'>&lt;/div>
-+		&lt;/body>
-+	&lt;/body>
-+&lt;/html>
-\ No newline at end of file
-diff --git a/diff/__others/v1/images/spinner.gif b/diff/__others/v1/images/spinner.gif
-new file mode 100755
-index 0000000..d84f653
-Binary files /dev/null and b/diff/__others/v1/images/spinner.gif differ
-diff --git a/diff/__others/v1/lib/GitX.js b/diff/__others/v1/lib/GitX.js
-new file mode 100755
-index 0000000..7a51f88
---- /dev/null
-+++ b/diff/__others/v1/lib/GitX.js
-@@ -0,0 +1,57 @@
-+/*
-+ * GitX Javascript library
-+ * This library contains functions that can be shared across all
-+ * webviews in GitX.
-+ * It is written only for Safari 3 and higher.
-+ */
-+
-+function $(element) {
-+	return document.getElementById(element);
-+}
-+
-+String.prototype.escapeHTML = function() {
-+  return this.replace(/&/g,'&amp;').replace(/&lt;/g,'&lt;').replace(/>/g,'&gt;');
-+};
-+
-+String.prototype.unEscapeHTML = function() {
-+  return this.replace(/&amp;/g,'&').replace(/&lt;/g,'&lt;').replace(/&gt;/g,'>');
-+};
-+
-+Element.prototype.toggleDisplay = function() {
-+	if (this.style.display != "")
-+		this.style.display = "";
-+	else
-+		this.style.display = "none";
-+}
-+
-+Array.prototype.indexOf = function(item, i) {
-+  i || (i = 0);
-+  var length = this.length;
-+  if (i &lt; 0) i = length + i;
-+  for (; i &lt; length; i++)
-+    if (this[i] === item) return i;
-+  return -1;
-+};
-+
-+var notify = function(text, state) {
-+	var n = $("notification");
-+	n.style.display = "";
-+	$("notification_message").innerHTML = text;
-+	
-+	// Change color
-+	if (!state) { // Busy
-+		$("spinner").style.display = "";
-+		n.setAttribute("class", "");
-+	}
-+	else if (state == 1) { // Success
-+		$("spinner").style.display = "none";
-+		n.setAttribute("class", "success");
-+	} else if (state == -1) {// Fail
-+		$("spinner").style.display = "none";
-+		n.setAttribute("class", "fail");
-+	}
-+}
-+
-+var hideNotification = function() {
-+	$("notification").style.display = "none";
-+}
-diff --git a/diff/__others/v1/lib/diffHighlighter.js b/diff/__others/v1/lib/diffHighlighter.js
-new file mode 100755
-index 0000000..cda95a8
---- /dev/null
-+++ b/diff/__others/v1/lib/diffHighlighter.js
-@@ -0,0 +1,231 @@
-+// If we run from a Safari instance, we don't
-+// have a Controller object. Instead, we fake it by
-+// using the console
-+if (typeof Controller == 'undefined') {
-+	Controller = console;
-+	Controller.log_ = console.log;
-+}
-+
-+var highlightDiff = function(diff, element, callbacks) {
-+	if (!diff || diff == "")
-+		return;
-+
-+	if (!callbacks)
-+		callbacks = {};
-+	var start = new Date().getTime();
-+	element.className = "diff"
-+	var content = diff.escapeHTML().replace(/\t/g, "    ");;
-+
-+	var file_index = 0;
-+
-+	var startname = "";
-+	var endname = "";
-+	var line1 = "";
-+	var line2 = "";
-+	var diffContent = "";
-+	var finalContent = "";
-+	var lines = content.split('\n');
-+	var binary = false;
-+	var mode_change = false;
-+	var old_mode = "";
-+	var new_mode = "";
-+
-+	var hunk_start_line_1 = -1;
-+	var hunk_start_line_2 = -1;
-+
-+	var header = false;
-+
-+	var finishContent = function()
-+	{
-+		if (!file_index)
-+		{
-+			file_index++;
-+			return;
-+		}
-+
-+		if (callbacks["newfile"])
-+			callbacks["newfile"](startname, endname, "file_index_" + (file_index - 1), mode_change, old_mode, new_mode);
-+
-+		var title = startname;
-+		var binaryname = endname;
-+		if (endname == "/dev/null") {
-+			binaryname = startname;
-+			title = startname;
-+		}
-+		else if (startname == "/dev/null")
-+			title = endname;
-+		else if (startname != endname)
-+			title = startname + " renamed to " + endname;
-+		
-+		if (binary && endname == "/dev/null") {	// in cases of a deleted binary file, there is no diff/file to display
-+			line1 = "";
-+			line2 = "";
-+			diffContent = "";
-+			file_index++;
-+			startname = "";
-+			endname = "";
-+			return;				// so printing the filename in the file-list is enough
-+		}
-+
-+		if (diffContent != "" || binary) {
-+			finalContent += '&lt;div class="file" id="file_index_' + (file_index - 1) + '">' +
-+				'&lt;div class="fileHeader">' + title + '&lt;/div>';
-+		}
-+
-+		if (!binary && (diffContent != ""))  {
-+			finalContent +=		'&lt;div class="diffContent">' +
-+								'&lt;div class="lineno">' + line1 + "&lt;/div>" +
-+								'&lt;div class="lineno">' + line2 + "&lt;/div>" +
-+								'&lt;div class="lines">' + diffContent + "&lt;/div>" +
-+							'&lt;/div>';
-+		}
-+		else {
-+			if (binary) {
-+				if (callbacks["binaryFile"])
-+					finalContent += callbacks["binaryFile"](binaryname);
-+				else
-+					finalContent += "&lt;div>Binary file differs&lt;/div>";
-+			}
-+		}
-+
-+		if (diffContent != "" || binary)
-+			finalContent += '&lt;/div>';
-+
-+		line1 = "";
-+		line2 = "";
-+		diffContent = "";
-+		file_index++;
-+		startname = "";
-+		endname = "";
-+	}
-+	for (var lineno = 0, lindex = 0; lineno &lt; lines.length; lineno++) {
-+		var l = lines[lineno];
-+
-+		var firstChar = l.charAt(0);
-+
-+		if (firstChar == "d" && l.charAt(1) == "i") {			// "diff", i.e. new file, we have to reset everything
-+			header = true;						// diff always starts with a header
-+
-+			finishContent(); // Finish last file
-+
-+			binary = false;
-+			mode_change = false;
-+
-+			if(match = l.match(/^diff --git (a\/)+(.*) (b\/)+(.*)$/)) {	// there are cases when we need to capture filenames from
-+				startname = match[2];					// the diff line, like with mode-changes.
-+				endname = match[4];					// this can get overwritten later if there is a diff or if
-+			}								// the file is binary
-+
-+			continue;
-+		}
-+
-+		if (header) {
-+			if (firstChar == "n") {
-+				if (l.match(/^new file mode .*$/))
-+					startname = "/dev/null";
-+
-+				if (match = l.match(/^new mode (.*)$/)) {
-+					mode_change = true;
-+					new_mode = match[1];
-+				}
-+				continue;
-+			}
-+			if (firstChar == "o") {
-+				if (match = l.match(/^old mode (.*)$/)) {
-+					mode_change = true;
-+					old_mode = match[1];
-+				}
-+				continue;
-+			}
-+
-+			if (firstChar == "d") {
-+				if (l.match(/^deleted file mode .*$/))
-+					endname = "/dev/null";
-+				continue;
-+			}
-+			if (firstChar == "-") {
-+				if (match = l.match(/^--- (a\/)?(.*)$/))
-+					startname = match[2];
-+				continue;
-+			}
-+			if (firstChar == "+") {
-+				if (match = l.match(/^\+\+\+ (b\/)?(.*)$/))
-+					endname = match[2];
-+				continue;
-+			}
-+			// If it is a complete rename, we don't know the name yet
-+			// We can figure this out from the 'rename from.. rename to.. thing
-+			if (firstChar == 'r')
-+			{
-+				if (match = l.match(/^rename (from|to) (.*)$/))
-+				{
-+					if (match[1] == "from")
-+						startname = match[2];
-+					else
-+						endname = match[2];
-+				}
-+				continue;
-+			}
-+			if (firstChar == "B") // "Binary files .. and .. differ"
-+			{
-+				binary = true;
-+				// We might not have a diff from the binary file if it's new.
-+				// So, we use a regex to figure that out
-+
-+				if (match = l.match(/^Binary files (a\/)?(.*) and (b\/)?(.*) differ$/))
-+				{
-+					startname = match[2];
-+					endname = match[4];
-+				}
-+			}
-+
-+			// Finish the header
-+			if (firstChar == "@")
-+				header = false;
-+			else
-+				continue;
-+		}
-+
-+		sindex = "index=" + lindex.toString() + " ";
-+		if (firstChar == "+") {
-+			// Highlight trailing whitespace
-+			if (m = l.match(/\s+$/))
-+				l = l.replace(/\s+$/, "&lt;span class='whitespace'>" + m + "&lt;/span>");
-+
-+			line1 += "\n";
-+			line2 += ++hunk_start_line_2 + "\n";
-+			diffContent += "&lt;div " + sindex + "class='addline'>" + l + "&lt;/div>";
-+		} else if (firstChar == "-") {
-+			line1 += ++hunk_start_line_1 + "\n";
-+			line2 += "\n";
-+			diffContent += "&lt;div " + sindex + "class='delline'>" + l + "&lt;/div>";
-+		} else if (firstChar == "@") {
-+			if (header) {
-+				header = false;
-+			}
-+
-+			if (m = l.match(/@@ \-([0-9]+),?\d* \+(\d+),?\d* @@/))
-+			{
-+				hunk_start_line_1 = parseInt(m[1]) - 1;
-+				hunk_start_line_2 = parseInt(m[2]) - 1;
-+			}
-+			line1 += "...\n";
-+			line2 += "...\n";
-+			diffContent += "&lt;div " + sindex + "class='hunkheader'>" + l + "&lt;/div>";
-+		} else if (firstChar == " ") {
-+			line1 += ++hunk_start_line_1 + "\n";
-+			line2 += ++hunk_start_line_2 + "\n";
-+			diffContent += "&lt;div " + sindex + "class='noopline'>" + l + "&lt;/div>";
-+		}
-+		lindex++;
-+	}
-+
-+	finishContent();
-+
-+	// This takes about 7ms
-+	element.innerHTML = finalContent;
-+
-+	// TODO: Replace this with a performance pref call
-+	if (false)
-+		Controller.log_("Total time:" + (new Date().getTime() - start));
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v1/lib/keyboardNavigation.js b/diff/__others/v1/lib/keyboardNavigation.js
-new file mode 100755
-index 0000000..28a57ac
---- /dev/null
-+++ b/diff/__others/v1/lib/keyboardNavigation.js
-@@ -0,0 +1,106 @@
-+var scrollToCenter = function(element) {
-+    window.scrollTo(0, element.offsetTop);
-+}
-+
-+var scrollToTop = function(element) {
-+	element.scrollIntoView(true);
-+}
-+
-+var handleKeys = function(event) {
-+	if (event.altKey || event.metaKey || event.shiftKey)
-+		return;
-+	if (event.keyCode == 74)
-+		return changeHunk(true);
-+	else if (event.keyCode == 75)
-+		return changeHunk(false);
-+	else if (event.keyCode == 40 && event.ctrlKey == true) // ctrl-down_arrow
-+		return changeFile(true);
-+	else if (event.keyCode == 38 && event.ctrlKey == true) // ctrl-up_arrow
-+		return changeFile(false);
-+	else if (event.keyCode == 86) // 'v'
-+		showDiff();
-+	else if (event.keyCode == 67) // 'c'
-+		Controller.copySource();
-+	return true;
-+}
-+
-+var handleKeyFromCocoa = function(key) {
-+	if (key == 'j')
-+		changeHunk(true);
-+	else if (key == 'k')
-+		changeHunk(false);
-+	else if (key == 'v')
-+		showDiff();
-+	else if (key == 'c')
-+		Controller.copySource();
-+}
-+
-+var changeHunk = function(next) {
-+	var hunks = document.getElementsByClassName("hunkheader");
-+
-+	if (hunks.length == 0)
-+		return;
-+
-+	var currentHunk = document.getElementById("CurrentHunk");
-+	var newHunk;
-+
-+	var index = -1;
-+	for (; index &lt; hunks.length; ++index) {
-+		if (hunks[index] == currentHunk)
-+			break;
-+	}
-+
-+	if (currentHunk && index >= 0) {
-+		currentHunk.id = null;
-+		if (next)
-+			newHunk = hunks[index + 1];
-+		else
-+			newHunk = hunks[index - 1];
-+	}
-+	if (!newHunk)
-+		newHunk = hunks[0];
-+
-+	newHunk.id = 'CurrentHunk';
-+	scrollToCenter(newHunk);
-+	return false;
-+}
-+
-+var changeFile = function(next) {
-+	var files = document.getElementsByClassName("fileHeader");
-+	
-+	if (files.length == 0)
-+		return;
-+	
-+	var currentFile = document.getElementById("CurrentFile");
-+	var newFile;
-+	
-+	var index = -1;
-+	for (; index &lt; files.length; ++index) {
-+		if (files[index] == currentFile)
-+			break;
-+	}
-+	
-+	if (currentFile && index >= 0) {
-+		currentFile.id = null;
-+		
-+		if (next) {
-+			if (index &lt;= files.length-1)
-+				newFile = files[index + 1];			
-+		}
-+		else {
-+			newFile = files[index - 1];
-+			if (!newFile)
-+				newFile = files[files.length-1];
-+		}
-+	}
-+	if (!newFile)
-+		newFile = files[0];
-+	
-+	newFile.id = 'CurrentFile';
-+	scrollToTop(newFile);
-+	return false;
-+}
-+
-+document.onkeydown = function(event) {
-+	return handleKeys(event);
-+};
-\ No newline at end of file
-diff --git a/diff/__others/v1/lib/md5.js b/diff/__others/v1/lib/md5.js
-new file mode 100755
-index 0000000..36fc1c2
---- /dev/null
-+++ b/diff/__others/v1/lib/md5.js
-@@ -0,0 +1,256 @@
-+/*
-+ * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
-+ * Digest Algorithm, as defined in RFC 1321.
-+ * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
-+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
-+ * Distributed under the BSD License
-+ * See http://pajhome.org.uk/crypt/md5 for more info.
-+ */
-+
-+/*
-+ * Configurable variables. You may need to tweak these to be compatible with
-+ * the server-side, but the defaults work in most cases.
-+ */
-+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */
-+var b64pad  = ""; /* base-64 pad character. "=" for strict RFC compliance   */
-+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */
-+
-+/*
-+ * These are the functions you'll usually want to call
-+ * They take string arguments and return either hex or base-64 encoded strings
-+ */
-+function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}
-+function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}
-+function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}
-+function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }
-+function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }
-+function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }
-+
-+/*
-+ * Perform a simple self-test to see if the VM is working
-+ */
-+function md5_vm_test()
-+{
-+  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
-+}
-+
-+/*
-+ * Calculate the MD5 of an array of little-endian words, and a bit length
-+ */
-+function core_md5(x, len)
-+{
-+  /* append padding */
-+  x[len >> 5] |= 0x80 &lt;&lt; ((len) % 32);
-+  x[(((len + 64) >>> 9) &lt;&lt; 4) + 14] = len;
-+
-+  var a =  1732584193;
-+  var b = -271733879;
-+  var c = -1732584194;
-+  var d =  271733878;
-+
-+  for(var i = 0; i &lt; x.length; i += 16)
-+  {
-+    var olda = a;
-+    var oldb = b;
-+    var oldc = c;
-+    var oldd = d;
-+
-+    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
-+    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
-+    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
-+    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
-+    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
-+    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
-+    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
-+    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
-+    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
-+    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
-+    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
-+    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
-+    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
-+    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
-+    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
-+    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);
-+
-+    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
-+    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
-+    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
-+    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
-+    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
-+    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
-+    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
-+    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
-+    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
-+    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
-+    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
-+    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
-+    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
-+    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
-+    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
-+    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);
-+
-+    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
-+    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
-+    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
-+    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
-+    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
-+    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
-+    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
-+    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
-+    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
-+    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
-+    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
-+    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
-+    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
-+    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
-+    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
-+    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);
-+
-+    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
-+    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
-+    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
-+    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
-+    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
-+    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
-+    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
-+    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
-+    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
-+    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
-+    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
-+    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
-+    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
-+    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
-+    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
-+    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);
-+
-+    a = safe_add(a, olda);
-+    b = safe_add(b, oldb);
-+    c = safe_add(c, oldc);
-+    d = safe_add(d, oldd);
-+  }
-+  return Array(a, b, c, d);
-+
-+}
-+
-+/*
-+ * These functions implement the four basic operations the algorithm uses.
-+ */
-+function md5_cmn(q, a, b, x, s, t)
-+{
-+  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
-+}
-+function md5_ff(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
-+}
-+function md5_gg(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
-+}
-+function md5_hh(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
-+}
-+function md5_ii(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
-+}
-+
-+/*
-+ * Calculate the HMAC-MD5, of a key and some data
-+ */
-+function core_hmac_md5(key, data)
-+{
-+  var bkey = str2binl(key);
-+  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
-+
-+  var ipad = Array(16), opad = Array(16);
-+  for(var i = 0; i &lt; 16; i++)
-+  {
-+    ipad[i] = bkey[i] ^ 0x36363636;
-+    opad[i] = bkey[i] ^ 0x5C5C5C5C;
-+  }
-+
-+  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
-+  return core_md5(opad.concat(hash), 512 + 128);
-+}
-+
-+/*
-+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally
-+ * to work around bugs in some JS interpreters.
-+ */
-+function safe_add(x, y)
-+{
-+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
-+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
-+  return (msw &lt;&lt; 16) | (lsw & 0xFFFF);
-+}
-+
-+/*
-+ * Bitwise rotate a 32-bit number to the left.
-+ */
-+function bit_rol(num, cnt)
-+{
-+  return (num &lt;&lt; cnt) | (num >>> (32 - cnt));
-+}
-+
-+/*
-+ * Convert a string to an array of little-endian words
-+ * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
-+ */
-+function str2binl(str)
-+{
-+  var bin = Array();
-+  var mask = (1 &lt;&lt; chrsz) - 1;
-+  for(var i = 0; i &lt; str.length * chrsz; i += chrsz)
-+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) &lt;&lt; (i%32);
-+  return bin;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a string
-+ */
-+function binl2str(bin)
-+{
-+  var str = "";
-+  var mask = (1 &lt;&lt; chrsz) - 1;
-+  for(var i = 0; i &lt; bin.length * 32; i += chrsz)
-+    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);
-+  return str;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a hex string.
-+ */
-+function binl2hex(binarray)
-+{
-+  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
-+  var str = "";
-+  for(var i = 0; i &lt; binarray.length * 4; i++)
-+  {
-+    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +
-+           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);
-+  }
-+  return str;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a base-64 string
-+ */
-+function binl2b64(binarray)
-+{
-+  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
-+  var str = "";
-+  for(var i = 0; i &lt; binarray.length * 4; i += 3)
-+  {
-+    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) &lt;&lt; 16)
-+                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) &lt;&lt; 8 )
-+                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);
-+    for(var j = 0; j &lt; 4; j++)
-+    {
-+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;
-+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);
-+    }
-+  }
-+  return str;
-+}
-diff --git a/diff/__others/v1/views/commit/commit.css b/diff/__others/v1/views/commit/commit.css
-new file mode 100755
-index 0000000..931cfd2
---- /dev/null
-+++ b/diff/__others/v1/views/commit/commit.css
-@@ -0,0 +1,119 @@
-+body {
-+	padding: 0px;
-+	margin: 0px;
-+	margin-top: 20px;
-+}
-+
-+#title {
-+	padding: 2px;
-+	padding-left: 5px;
-+	border-bottom: 1px solid black;
-+	margin: 0px;
-+	font-weight: 500;
-+	background-color: #ECF3FD;
-+	font-size: 100%;
-+	position: fixed;
-+	z-index: 2;
-+	top: 0px;
-+	width: 100%;
-+}
-+
-+#state {
-+	margin-left: 20px;
-+	margin-right: 20px;
-+	margin-top: 40px;
-+	text-align: center;
-+	font-size: 200%;
-+	padding: 20px;
-+	width: auto;
-+
-+	background-color: #B4D7FF;
-+	border: 2px solid #45A1FE;
-+
-+	-webkit-border-radius: 10px;
-+}
-+
-+.floatright {
-+	float: right;
-+}
-+
-+pre {
-+	margin-top: 0;
-+}
-+
-+table.diff {
-+	margin-top: 0;
-+}
-+
-+#notification {
-+	margin-top: 30px;
-+}
-+
-+#contextSize {
-+	width: 80px;
-+	margin-top: -0.5px;
-+	float: right;
-+	margin-right: 20px;
-+}
-+
-+#contextTitle {
-+	margin-right: 3px;
-+	float: right;
-+}
-+
-+.diff .hunkbutton {
-+	width: 40px;
-+	padding: 0 2px 0 2px;
-+	margin-bottom: 4px;
-+	margin-right: 1px;
-+	float: right;
-+	position: relative;
-+	z-index: 1;
-+
-+	border: 1px solid #3465a4;
-+	background-color: #cce5ff;
-+	color: #204a87;
-+
-+	font-family: 'Lucida Grande';
-+	font-size: 80%;
-+	text-decoration: none;
-+	text-align: center;
-+
-+	-webkit-border-radius: 2px;
-+}
-+#selected {
-+    background-color: #B5D5FE !important;
-+}
-+#selected div {
-+    background-color: #B5D5FE;
-+}
-+
-+#selected #stagelines {
-+    padding-left: 2px;
-+    width: auto;
-+    padding-right: 2px;
-+    margin-right: 2px;
-+    margin-top: 1px;
-+    clear: right;
-+    background-color: #FFF;
-+}
-+
-+.disabled {
-+    display: none;
-+}
-+
-+#multiselect {
-+	margin-left: 50px;
-+	margin-right: 100px;
-+	padding: 5px;
-+	-webkit-border-radius: 5px;
-+	border: 1px solid #EEE;
-+}
-+
-+#multiselect div.title {
-+	background-color: #EEE;
-+	font-weight: bold;
-+	border: 5px solid #EEE;
-+	margin: -5px;
-+	padding-left: 20px;
-+}
-diff --git a/diff/__others/v1/views/commit/commit.js b/diff/__others/v1/views/commit/commit.js
-new file mode 100755
-index 0000000..cdec998
---- /dev/null
-+++ b/diff/__others/v1/views/commit/commit.js
-@@ -0,0 +1,453 @@
-+/* Commit: Interface for selecting, staging, discarding, and unstaging
-+   hunks, individual lines, or ranges of lines.  */
-+
-+var contextLines = 5;
-+
-+var showNewFile = function(file)
-+{
-+	setTitle("New file: " + file.path);
-+
-+	var contents = Index.diffForFile_staged_contextLines_(file, false, contextLines);
-+	if (!contents) {
-+		notify("Can not display changes (Binary file?)", -1);
-+		diff.innerHTML = "";
-+		return;
-+	}
-+
-+	diff.innerHTML = "&lt;pre>" + contents.escapeHTML() + "&lt;/pre>";
-+	diff.style.display = '';
-+}
-+
-+var hideState = function() {
-+	$("state").style.display = "none";
-+}
-+
-+var setState = function(state) {
-+	setTitle(state);
-+	hideNotification();
-+	$("state").style.display = "";
-+	$("diff").style.display = "none";
-+	$("state").innerHTML = state.escapeHTML();
-+}
-+
-+var setTitle = function(status) {
-+	$("status").innerHTML = status;
-+	$("contextSize").style.display = "none";
-+	$("contextTitle").style.display = "none";
-+}
-+
-+var displayContext = function() {
-+	$("contextSize").style.display = "";
-+	$("contextTitle").style.display = "";
-+}
-+
-+var showFileChanges = function(file, cached) {
-+	if (!file) {
-+		setState("No file selected");
-+		return;
-+	}
-+
-+	hideNotification();
-+	hideState();
-+
-+	$("contextSize").oninput = function(element) {
-+		contextSize = $("contextSize").value;
-+	}
-+
-+	if (file.status == 0) // New file?
-+		return showNewFile(file);
-+
-+	setTitle((cached ? "Staged": "Unstaged") + " changes for" + file.path);
-+	displayContext();
-+	var changes = Index.diffForFile_staged_contextLines_(file, cached, contextLines);
-+	
-+
-+	if (changes == "") {
-+		notify("This file has no more changes", 1);
-+		return;
-+	}
-+
-+	displayDiff(changes, cached);
-+}
-+
-+/* Set the event handlers for mouse clicks/drags */
-+var setSelectHandlers = function()
-+{
-+	document.onmousedown = function(event) {
-+		if(event.which != 1) return false;
-+		deselect();
-+		currentSelection = false;
-+	}
-+	document.onselectstart = function () {return false;}; /* prevent normal text selection */
-+
-+	var list = document.getElementsByClassName("lines");
-+
-+	document.onmouseup = function(event) {
-+		// Handle button releases outside of lines list
-+		for (i = 0; i &lt; list.length; ++i) {
-+			file = list[i];
-+			file.onmouseover = null;
-+			file.onmouseup = null;
-+		}
-+	}
-+
-+	for (i = 0; i &lt; list.length; ++i) {
-+		var file = list[i];
-+		file.ondblclick = function (event) {
-+			var file = event.target.parentNode;
-+			if (file.id = "selected")
-+				file = file.parentNode;
-+			var start = event.target;
-+			var elem_class = start.getAttribute("class");
-+			if(!elem_class || !(elem_class == "addline" | elem_class == "delline")) 
-+				return false;
-+			deselect();
-+			var bounds = findsubhunk(start);
-+			showSelection(file,bounds[0],bounds[1],true);
-+			return false;
-+		};
-+
-+		file.onmousedown = function(event) {
-+			if (event.which != 1) 
-+				return false;
-+			var elem_class = event.target.getAttribute("class")
-+			event.stopPropagation();
-+			if (elem_class == "hunkheader" || elem_class == "hunkbutton")
-+				return false;
-+
-+			var file = event.target.parentNode;
-+			if (file.id && file.id == "selected")
-+				file = file.parentNode;
-+
-+			file.onmouseup = function(event) {
-+				file.onmouseover = null;
-+				file.onmouseup = null;
-+				event.stopPropagation();
-+				return false;
-+			};
-+
-+			if (event.shiftKey && currentSelection) { // Extend selection
-+				var index = parseInt(event.target.getAttribute("index"));
-+				var min = parseInt(currentSelection.bounds[0].getAttribute("index"));
-+				var max = parseInt(currentSelection.bounds[1].getAttribute("index"));
-+				var ender = 1;
-+				if(min > max) {
-+					var tmp = min; min = max; max = tmp;
-+					ender = 0;
-+				}
-+
-+				if (index &lt; min)
-+					showSelection(file,currentSelection.bounds[ender],
-+						      event.target);
-+				else if (index > max)
-+					showSelection(file,currentSelection.bounds[1-ender],
-+						      event.target);
-+				else showSelection(file,currentSelection.bounds[0],event.target);
-+				return false;
-+			}
-+
-+
-+			file.onmouseover = function(event2) {
-+				showSelection(file, event.srcElement, event2.target);
-+				return false;
-+			};
-+			showSelection(file, event.srcElement, event.srcElement);
-+			return false;
-+		}
-+	}
-+}
-+
-+var diffHeader;
-+var originalDiff;
-+var originalCached;
-+
-+var displayDiff = function(diff, cached)
-+{
-+	diffHeader = diff.split("\n").slice(0,4).join("\n");
-+	originalDiff = diff;
-+	originalCached = cached;
-+
-+	$("diff").style.display = "";
-+	highlightDiff(diff, $("diff"));
-+	hunkHeaders = $("diff").getElementsByClassName("hunkheader");
-+
-+	for (i = 0; i &lt; hunkHeaders.length; ++i) {
-+		var header = hunkHeaders[i];
-+		if (cached)
-+			header.innerHTML = "&lt;a href='#' class='hunkbutton' onclick='addHunk(this, true); return false'>Unstage&lt;/a>" + header.innerHTML;
-+		else {
-+			header.innerHTML = "&lt;a href='#' class='hunkbutton' onclick='addHunk(this, false); return false'>Stage&lt;/a>" + header.innerHTML;
-+			header.innerHTML = "&lt;a href='#' class='hunkbutton' onclick='discardHunk(this, event); return false'>Discard&lt;/a>" + header.innerHTML;
-+		}
-+	}
-+	setSelectHandlers();
-+}
-+
-+var getNextText = function(element)
-+{
-+	// gets the next DOM sibling which has type "text" (e.g. our hunk-header)
-+	next = element;
-+	while (next.nodeType != 3) {
-+		next = next.nextSibling;
-+	}
-+	return next;
-+}
-+
-+
-+/* Get the original hunk lines attached to the given hunk header */
-+var getLines = function (hunkHeader)
-+{
-+	var start = originalDiff.indexOf(hunkHeader);
-+	var end = originalDiff.indexOf("\n@@", start + 1);
-+	var end2 = originalDiff.indexOf("\ndiff", start + 1);
-+	if (end2 &lt; end && end2 > 0)
-+		end = end2;
-+	if (end == -1)
-+		end = originalDiff.length;
-+	return originalDiff.substring(start, end)+'\n';
-+}
-+
-+/* Get the full hunk test, including diff top header */
-+var getFullHunk = function(hunk)
-+{
-+	hunk = getNextText(hunk);
-+	var hunkHeader = hunk.data.split("\n")[0];
-+	var m;
-+	if (m = hunkHeader.match(/@@.*@@/))
-+		hunkHeader = m;
-+	return diffHeader + "\n" + getLines(hunkHeader);
-+}
-+
-+var addHunkText = function(hunkText, reverse)
-+{
-+	//window.console.log((reverse?"Removing":"Adding")+" hunk: \n\t"+hunkText);
-+	if (Controller.stageHunk_reverse_)
-+		Controller.stageHunk_reverse_(hunkText, reverse);
-+	else
-+		alert(hunkText);
-+}
-+
-+/* Add the hunk located below the current element */
-+var addHunk = function(hunk, reverse)
-+{
-+	addHunkText(getFullHunk(hunk),reverse);
-+}
-+
-+var discardHunk = function(hunk, event)
-+{
-+	var hunkText = getFullHunk(hunk);
-+
-+	if (Controller.discardHunk_altKey_) {
-+		Controller.discardHunk_altKey_(hunkText, event.altKey == true);
-+	} else {
-+		alert(hunkText);
-+	}
-+}
-+
-+/* Find all contiguous add/del lines. A quick way to select "just this
-+ * chunk". */
-+var findsubhunk = function(start) { 
-+        var findBound = function(direction) { 
-+		var element=start;
-+                for (var next = element[direction]; next; next = next[direction]) { 
-+                        var elem_class = next.getAttribute("class"); 
-+                        if (elem_class == "hunkheader" || elem_class == "noopline") 
-+                                break; 
-+			element=next;
-+		}
-+		return element; 
-+        }
-+        return [findBound("previousSibling"), findBound("nextSibling")]; 
-+} 
-+
-+/* Remove existing selection */
-+var deselect = function() {
-+	var selection = document.getElementById("selected");
-+	if (selection) {
-+		while (selection.childNodes[1])
-+			selection.parentNode.insertBefore(selection.childNodes[1], selection);
-+		selection.parentNode.removeChild(selection);
-+	}
-+}
-+
-+/* Stage individual selected lines.  Note that for staging, unselected
-+ * delete lines are context, and v.v. for unstaging. */
-+var stageLines = function(reverse) {
-+	var selection = document.getElementById("selected");
-+	if(!selection) return false;
-+	currentSelection = false;
-+	var hunkHeader = false;
-+	var preselect = 0,elem_class;
-+
-+	for(var next = selection.previousSibling; next; next = next.previousSibling) {
-+		elem_class = next.getAttribute("class");
-+		if(elem_class == "hunkheader") {
-+			hunkHeader = next.lastChild.data;
-+			break;
-+		}
-+		preselect++;
-+	}
-+
-+	if (!hunkHeader) return false;
-+
-+	var sel_len = selection.children.length-1;
-+	var subhunkText = getLines(hunkHeader);
-+	var lines = subhunkText.split('\n');
-+	lines.shift();  // Trim old hunk header (we'll compute our own)
-+	if (lines[lines.length-1] == "") lines.pop(); // Omit final newline
-+
-+	var m;
-+	if (m = hunkHeader.match(/@@ \-(\d+)(,\d+)? \+(\d+)(,\d+)? @@/)) {
-+		var start_old = parseInt(m[1]);
-+		var start_new = parseInt(m[3]);
-+	} else return false;
-+
-+	var patch = "", count = [0,0];
-+	for (var i = 0; i &lt; lines.length; i++) {
-+		var l = lines[i];
-+		var firstChar = l.charAt(0);
-+		if (i &lt; preselect || i >= preselect+sel_len) {    // Before/after select
-+			if(firstChar == (reverse?'+':"-"))   // It's context now, make it so!
-+				l = ' '+l.substr(1);
-+			if(firstChar != (reverse?'-':"+")) { // Skip unincluded changes
-+				patch += l+"\n";
-+				count[0]++; count[1]++;
-+			}
-+		} else {                                      // In the selection
-+			if (firstChar == '-') {
-+				count[0]++;
-+			} else if (firstChar == '+') {
-+				count[1]++;
-+			} else {
-+				count[0]++; count[1]++;
-+			}
-+			patch += l+"\n";
-+		}
-+	}
-+	patch = diffHeader + '\n' + "@@ -" + start_old.toString() + "," + count[0].toString() +
-+		" +" + start_new.toString() + "," + count[1].toString() + " @@\n"+patch;
-+
-+	addHunkText(patch,reverse);
-+}
-+
-+/* Compute the selection before actually making it.  Return as object
-+ * with 2-element array "bounds", and "good", which indicates if the
-+ * selection contains add/del lines. */
-+var computeSelection = function(list, from,to)
-+{
-+	var startIndex = parseInt(from.getAttribute("index"));
-+	var endIndex = parseInt(to.getAttribute("index"));
-+	if (startIndex == -1 || endIndex == -1)
-+		return false;
-+
-+	var up = (startIndex &lt; endIndex);
-+	var nextelem = up?"nextSibling":"previousSibling";
-+
-+	var insel = from.parentNode && from.parentNode.id == "selected";
-+	var good = false;
-+	for(var elem = last = from;;elem = elem[nextelem]) {
-+		if(!insel && elem.id && elem.id == "selected") {
-+			// Descend into selection div
-+			elem = up?elem.childNodes[1]:elem.lastChild;
-+			insel = true;
-+		}
-+
-+		var elem_class = elem.getAttribute("class");
-+		if(elem_class) {
-+			if(elem_class == "hunkheader") {
-+				elem = last;
-+				break; // Stay inside this hunk
-+			}
-+			if(!good && (elem_class == "addline" || elem_class == "delline"))
-+				good = true; // A good selection
-+		}
-+		if (elem == to) break;
-+
-+		if (insel) {
-+			if (up?
-+			    elem == elem.parentNode.lastChild:
-+			    elem == elem.parentNode.childNodes[1]) {
-+				// Come up out of selection div
-+				last = elem;
-+				insel = false;
-+				elem = elem.parentNode;
-+				continue;
-+			}
-+		}
-+		last = elem;
-+	}
-+	to = elem;
-+	return {bounds:[from,to],good:good};
-+}
-+
-+
-+var currentSelection = false;
-+
-+/* Highlight the selection (if it is new) 
-+
-+   If trust is set, it is assumed that the selection is pre-computed,
-+   and it is not recomputed.  Trust also assumes deselection has
-+   already occurred
-+*/
-+var showSelection = function(file, from, to, trust)
-+{
-+	if(trust)  // No need to compute bounds.
-+		var sel = {bounds:[from,to],good:true};
-+	else 
-+		var sel = computeSelection(file,from,to);
-+        
-+	if (!sel) {
-+		currentSelection = false;
-+		return;
-+	}
-+
-+	if(currentSelection &&
-+	   currentSelection.bounds[0] == sel.bounds[0] &&
-+	   currentSelection.bounds[1] == sel.bounds[1] &&
-+	   currentSelection.good == sel.good) {
-+		return; // Same selection
-+	} else {
-+		currentSelection = sel;
-+	}
-+
-+	if(!trust) deselect();
-+
-+	var beg = parseInt(sel.bounds[0].getAttribute("index"));
-+	var end = parseInt(sel.bounds[1].getAttribute("index"));
-+
-+	if (beg > end) { 
-+		var tmp = beg; 
-+		beg = end; 
-+		end = tmp; 
-+	} 
-+
-+	var elementList = [];
-+	for (var i = beg; i &lt;= end; ++i) 
-+		elementList.push(from.parentNode.childNodes[i]); 
-+	
-+	var selection = document.createElement("div");
-+	selection.setAttribute("id", "selected");
-+
-+	var button = document.createElement('a');
-+	button.setAttribute("href","#");
-+	button.appendChild(document.createTextNode(
-+				   (originalCached?"Uns":"S")+"tage line"+
-+				   (elementList.length > 1?"s":"")));
-+	button.setAttribute("class","hunkbutton");
-+	button.setAttribute("id","stagelines");
-+
-+	if (sel.good) {
-+		button.setAttribute('onclick','stageLines('+
-+				    (originalCached?'true':'false')+
-+				    '); return false;');
-+	} else {
-+		button.setAttribute("class","disabled");
-+	}
-+	selection.appendChild(button);
-+
-+	file.insertBefore(selection, from);
-+	for (i = 0; i &lt; elementList.length; i++)
-+		selection.appendChild(elementList[i]);
-+}
-+
-+
-diff --git a/diff/__others/v1/views/commit/index.html b/diff/__others/v1/views/commit/index.html
-new file mode 100755
-index 0000000..ef889de
---- /dev/null
-+++ b/diff/__others/v1/views/commit/index.html
-@@ -0,0 +1,35 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Diff for file&lt;/title>
-+	&lt;link rel="stylesheet" href="../../css/GitX.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="../../lib/GitX.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/md5.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	
-+	&lt;link rel="stylesheet" href="commit.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="commit.js" type="text/javascript" chahrset="utf-8">&lt;/script>
-+	&lt;script src="multipleSelection.js" type="text/javascript" chahrset="utf-8">&lt;/script>
-+&lt;/head>
-+
-+&lt;body>
-+	&lt;h1 id='title'>
-+		&lt;input type="range" min="1" max="8" value="3" id="contextSize">
-+		&lt;span id="contextTitle">Context:&lt;/span>
-+		&lt;span id="status">Nothing to commit&lt;/span>
-+
-+	&lt;/h1>
-+
-+	&lt;div id="notification" style="display:none">
-+		&lt;img src="../../images/spinner.gif" alt="Spinner" id="spinner">&lt;/img>
-+		&lt;div id="notification_message">&lt;/div>
-+	&lt;/div>
-+
-+	&lt;!-- we use "state" for the current status (as opposed to something in the diff
-+		 and we use the notification for short notifications, which can occur together
-+		 with a diff display -->
-+	&lt;div id="state">
-+		Nothing to commit (working directory clean)
-+	&lt;/div>
-+	&lt;div id='diff'>&lt;/div>
-+&lt;/body>
-diff --git a/diff/__others/v1/views/commit/multipleSelection.js b/diff/__others/v1/views/commit/multipleSelection.js
-new file mode 100755
-index 0000000..55a83f2
---- /dev/null
-+++ b/diff/__others/v1/views/commit/multipleSelection.js
-@@ -0,0 +1,22 @@
-+var showMultipleFilesSelection = function(files)
-+{
-+	hideNotification();
-+	setTitle("");
-+
-+	var div = $("diff");
-+
-+	var contents = '&lt;div id="multiselect">' +
-+		'&lt;div class="title">Multiple Selection&lt;/div>';
-+
-+	contents += "&lt;ul>";
-+
-+	for (var i = 0; i &lt; files.length; ++i)
-+	{
-+		var file = files[i];
-+		contents += "&lt;li>" + file.path + "&lt;/li>";
-+	}
-+	contents += "&lt;/ul>&lt;/div>";
-+
-+	div.innerHTML = contents;
-+	div.style.display = "";
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v1/views/diff/index.html b/diff/__others/v1/views/diff/index.html
-new file mode 100755
-index 0000000..f437056
---- /dev/null
-+++ b/diff/__others/v1/views/diff/index.html
-@@ -0,0 +1,19 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Details for commit&lt;/title>
-+	&lt;link rel="stylesheet" href="../../css/GitX.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="../../lib/GitX.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/md5.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+
-+	&lt;script type="text/javascript" charset="utf-8">
-+		var showDiff = function(diff) {
-+			highlightDiff(diff, $("diff"));
-+		}
-+	&lt;/script>
-+&lt;/head>
-+
-+&lt;body>
-+	&lt;div id='diff'>&lt;/div>
-+&lt;/body>
-diff --git a/diff/__others/v1/views/history/history.css b/diff/__others/v1/views/history/history.css
-new file mode 100755
-index 0000000..1bd9629
---- /dev/null
-+++ b/diff/__others/v1/views/history/history.css
-@@ -0,0 +1,182 @@
-+body {
-+	font-family: 'Lucida Grande';
-+}
-+
-+#commit_header {
-+	width: 100%;
-+	font-size: 12px;
-+}
-+
-+#commit_header td {
-+  padding-left: 5px;
-+}
-+
-+#rightcontent {
-+	float: right;
-+	margin: 5px;
-+}
-+
-+#buttons {
-+	float: left;
-+}
-+
-+a.servicebutton{
-+	display: block;
-+	width: 80px;
-+	padding: 2px;
-+	margin-bottom: 4px;
-+
-+	border: 1px solid #3465a4;
-+	background-color: #cce5ff;
-+	color: #204a87;
-+
-+	font-size: 65%;
-+	text-decoration: none;
-+	text-align: center;
-+
-+	-webkit-border-radius: 2px;
-+}
-+
-+#gravatar {
-+	margin-left: 5px;
-+	padding: 2px;
-+	width: 60px;
-+	height: 60px;
-+
-+	border: solid gray 1px;
-+	-webkit-border-radius: 2px;
-+}
-+
-+.property_name {
-+	width: 6em;
-+	color:#7F7F7F;
-+	text-align: right;
-+	font-weight: bold;
-+}
-+
-+
-+#message_files {
-+	margin: 5px;
-+	padding-left: 1em;
-+	width: auto;
-+}
-+
-+#message {
-+	font-family: Monaco;
-+	font-size: 10px;
-+}
-+
-+#files {
-+	margin-top: 1em;
-+}
-+
-+#files a {
-+	color: #666666;
-+}
-+
-+#files p {
-+	margin: 4px;
-+}
-+#files a:hover {
-+	color: #4444ff;
-+}
-+
-+.clear_both {
-+	clear:both;
-+	display:block;
-+	height:1px;
-+	line-height:0;
-+	margin:1em;
-+	visibility:hidden;
-+}
-+
-+#details {
-+	font-family: Monaco;
-+	font-size: 10px;
-+	overflow: hidden;
-+	width: 600px;
-+}
-+hr {
-+	border: 0;
-+	height: 1px;
-+	margin: 0 8px;
-+	background-color: #DEDEDE;
-+	clear: both;
-+}
-+
-+a {
-+	color: rgb(20, 79, 174);
-+}
-+
-+a.showdiff {
-+	text-decoration: none;
-+	font-size: 1.3em;
-+}
-+
-+.refs {
-+	font-size: 9px;
-+	font-family: Helvetica;
-+	border: 1px solid black;
-+	margin-right: 5px;
-+	padding: 1px 3px 1px 3px;
-+	-webkit-border-radius: 2px;
-+}
-+
-+.refs.head {
-+	background-color: #aaf254;
-+}
-+
-+.refs.remote {
-+	background-color: #b2dfff;
-+}
-+
-+.refs.tag {
-+	background-color: #fced4f;
-+}
-+
-+.refs.currentBranch {
-+	background-color: #fca64f;
-+}
-+
-+div.button
-+{
-+	color: #666666;
-+
-+	font-size: 60%;
-+	text-align: center;
-+
-+	width: 70px;
-+
-+	margin-right: 10px;
-+
-+	padding: 2px;
-+
-+	float: left;
-+	clear: both;
-+
-+	border: 1px solid;
-+	-webkit-border-radius: 3px;
-+}
-+
-+div.created
-+{
-+	background-color: #ccffcc;
-+	border-color: #66ff66;
-+}
-+
-+div.changed
-+{
-+	background-color: #ffcc99;
-+	border-color: #ff9933;
-+}
-+
-+div.deleted
-+{
-+	background-color: #ffcccc;
-+	border-color: #ff6666;
-+}
-+
-+div.renamed
-+{
-+	/*No colour needed right now.*/
-+}
-diff --git a/diff/__others/v1/views/history/history.js b/diff/__others/v1/views/history/history.js
-new file mode 100755
-index 0000000..6cd7540
---- /dev/null
-+++ b/diff/__others/v1/views/history/history.js
-@@ -0,0 +1,326 @@
-+var commit;
-+
-+// Create a new Commit object
-+// obj: PBGitCommit object
-+var Commit = function(obj) {
-+	this.object = obj;
-+
-+	this.refs = obj.refs();
-+	this.author_name = obj.author;
-+	this.sha = obj.realSha();
-+	this.parents = obj.parents;
-+	this.subject = obj.subject;
-+	this.notificationID = null;
-+
-+	// TODO:
-+	// this.author_date instant
-+
-+	// This can be called later with the output of
-+	// 'git show' to fill in missing commit details (such as a diff)
-+	this.parseDetails = function(details) {
-+		this.raw = details;
-+
-+		var diffStart = this.raw.indexOf("\ndiff ");
-+		var messageStart = this.raw.indexOf("\n\n") + 2;
-+
-+		if (diffStart > 0) {
-+			this.message = this.raw.substring(messageStart, diffStart).replace(/^    /gm, "").escapeHTML();
-+			this.diff = this.raw.substring(diffStart);
-+		} else {
-+			this.message = this.raw.substring(messageStart).replace(/^    /gm, "").escapeHTML();
-+			this.diff = "";
-+		}
-+		this.header = this.raw.substring(0, messageStart);
-+
-+		var match = this.header.match(/\nauthor (.*) &lt;(.*@.*|.*)> ([0-9].*)/);
-+		if (!(match[2].match(/@[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/)))
-+			this.author_email = match[2];
-+
-+		this.author_date = new Date(parseInt(match[3]) * 1000);
-+
-+		match = this.header.match(/\ncommitter (.*) &lt;(.*@.*|.*)> ([0-9].*)/);
-+		this.committer_name = match[1];
-+		this.committer_email = match[2];
-+		this.committer_date = new Date(parseInt(match[3]) * 1000);		
-+	}
-+
-+	this.reloadRefs = function() {
-+		this.refs = this.object.refs();
-+	}
-+
-+};
-+
-+
-+var confirm_gist = function(confirmation_message) {
-+	if (!Controller.isFeatureEnabled_("confirmGist")) {
-+		gistie();
-+		return;
-+	}
-+
-+	// Set optional confirmation_message
-+	confirmation_message = confirmation_message || "Yes. Paste this commit.";
-+	var deleteMessage = Controller.getConfig_("github.token") ? " " : "You might not be able to delete it after posting.&lt;br>";
-+	var publicMessage = Controller.isFeatureEnabled_("publicGist") ? "&lt;b>public&lt;/b>" : "private";
-+	// Insert the verification links into div#notification_message
-+	var notification_text = 'This will create a ' + publicMessage + ' paste of your commit to &lt;a href="http://gist.github.com/">http://gist.github.com/&lt;/a>&lt;br>' +
-+	deleteMessage +
-+	'Are you sure you want to continue?&lt;br/>&lt;br/>' +
-+	'&lt;a href="#" onClick="hideNotification();return false;" style="color: red;">No. Cancel.&lt;/a> | ' +
-+	'&lt;a href="#" onClick="gistie();return false;" style="color: green;">' + confirmation_message + '&lt;/a>';
-+
-+	notify(notification_text, 0);
-+	// Hide img#spinner, since it?s visible by default
-+	$("spinner").style.display = "none";
-+}
-+
-+var gistie = function() {
-+	notify("Uploading code to Gistie..", 0);
-+
-+	parameters = {
-+		"file_ext[gistfile1]":      "patch",
-+		"file_name[gistfile1]":     commit.object.subject.replace(/[^a-zA-Z0-9]/g, "-") + ".patch",
-+		"file_contents[gistfile1]": commit.object.patch(),
-+	};
-+
-+	// TODO: Replace true with private preference
-+	token = Controller.getConfig_("github.token");
-+	login = Controller.getConfig_("github.user");
-+	if (token && login) {
-+		parameters.login = login;
-+		parameters.token = token;
-+	}
-+	if (!Controller.isFeatureEnabled_("publicGist"))
-+		parameters.private = true;
-+
-+	var params = [];
-+	for (var name in parameters)
-+		params.push(encodeURIComponent(name) + "=" + encodeURIComponent(parameters[name]));
-+	params = params.join("&");
-+
-+	var t = new XMLHttpRequest();
-+	t.onreadystatechange = function() {
-+		if (t.readyState == 4 && t.status >= 200 && t.status &lt; 300) {
-+			if (m = t.responseText.match(/gist: ([a-f0-9]+)/))
-+				notify("Code uploaded to gistie &lt;a target='_new' href='http://gist.github.com/" + m[1] + "'>#" + m[1] + "&lt;/a>", 1);
-+			else {
-+				notify("Pasting to Gistie failed :(.", -1);
-+				Controller.log_(t.responseText);
-+			}
-+		}
-+	}
-+
-+	t.open('POST', "http://gist.github.com/gists");
-+	t.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
-+	t.setRequestHeader('Accept', 'text/javascript, text/html, application/xml, text/xml, */*');
-+	t.setRequestHeader('Content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
-+
-+	try {
-+		t.send(params);
-+	} catch(e) {
-+		notify("Pasting to Gistie failed: " + e, -1);
-+	}
-+}
-+
-+var setGravatar = function(email, image) {
-+	if (Controller && !Controller.isReachable_("www.gravatar.com"))
-+		return;
-+
-+	if(Controller && !Controller.isFeatureEnabled_("gravatar")) {
-+		image.src = "";
-+		return;
-+	}
-+
-+	if (!email) {
-+		image.src = "http://www.gravatar.com/avatar/?d=wavatar&s=60";
-+		return;
-+	}
-+
-+	image.src = "http://www.gravatar.com/avatar/" +
-+		hex_md5(commit.author_email.toLowerCase().replace(/ /g, "")) + "?d=wavatar&s=60";
-+}
-+
-+var selectCommit = function(a) {
-+	Controller.selectCommit_(a);
-+}
-+
-+// Relead only refs
-+var reload = function() {
-+	$("notification").style.display = "none";
-+	commit.reloadRefs();
-+	showRefs();
-+}
-+
-+var showRefs = function() {
-+	var refs = $("refs");
-+	if (commit.refs) {
-+		refs.parentNode.style.display = "";
-+		refs.innerHTML = "";
-+		for (var i = 0; i &lt; commit.refs.length; i++) {
-+			var ref = commit.refs[i];
-+			refs.innerHTML += '&lt;span class="refs ' + ref.type() + (commit.currentRef == ref.ref ? ' currentBranch' : '') + '">' + ref.shortName() + '&lt;/span>';
-+		}
-+	} else
-+		refs.parentNode.style.display = "none";
-+}
-+
-+var loadCommit = function(commitObject, currentRef) {
-+	// These are only the things we can do instantly.
-+	// Other information will be loaded later by loadCommitDetails,
-+	// Which will be called from the controller once
-+	// the commit details are in.
-+
-+	if (commit && commit.notificationID)
-+		clearTimeout(commit.notificationID);
-+
-+	commit = new Commit(commitObject);
-+	commit.currentRef = currentRef;
-+
-+	$("commitID").innerHTML = commit.sha;
-+	$("authorID").innerHTML = commit.author_name;
-+	$("subjectID").innerHTML = commit.subject.escapeHTML();
-+	$("diff").innerHTML = ""
-+	$("message").innerHTML = ""
-+	$("files").innerHTML = ""
-+	$("date").innerHTML = ""
-+	showRefs();
-+
-+	for (var i = 0; i &lt; $("commit_header").rows.length; ++i) {
-+		var row = $("commit_header").rows[i];
-+		if (row.innerHTML.match(/Parent:/)) {
-+			row.parentNode.removeChild(row);
-+			--i;
-+		}
-+	}
-+
-+	// Scroll to top
-+	scroll(0, 0);
-+
-+	if (!commit.parents)
-+		return;
-+
-+	for (var i = 0; i &lt; commit.parents.length; i++) {
-+		var newRow = $("commit_header").insertRow(-1);
-+		newRow.innerHTML = "&lt;td class='property_name'>Parent:&lt;/td>&lt;td>" +
-+			"&lt;a href='' onclick='selectCommit(this.innerHTML); return false;'>" +
-+			commit.parents[i] + "&lt;/a>&lt;/td>";
-+	}
-+
-+	commit.notificationID = setTimeout(function() { 
-+		if (!commit.fullyLoaded)
-+			notify("Loading commit…", 0);
-+		commit.notificationID = null;
-+	}, 500);
-+
-+}
-+
-+var showDiff = function() {
-+
-+	// Callback for the diff highlighter. Used to generate a filelist
-+	var newfile = function(name1, name2, id, mode_change, old_mode, new_mode) {
-+		var button = document.createElement("div");
-+		var p = document.createElement("p");
-+		var link = document.createElement("a");
-+		link.setAttribute("href", "#" + id);
-+		p.appendChild(link);
-+		var buttonType = "";
-+		var finalFile = "";
-+		if (name1 == name2) {
-+			buttonType = "changed"
-+			finalFile = name1;
-+			if (mode_change)
-+				p.appendChild(document.createTextNode(" mode " + old_mode + " -> " + new_mode));
-+		}
-+		else if (name1 == "/dev/null") {
-+			buttonType = "created";
-+			finalFile = name2;
-+		}
-+		else if (name2 == "/dev/null") {
-+			buttonType = "deleted";
-+			finalFile = name1;
-+		}
-+		else {
-+			buttonType = "renamed";
-+			finalFile = name2;
-+			p.insertBefore(document.createTextNode(name1 + " -> "), link);
-+		}
-+
-+		link.appendChild(document.createTextNode(finalFile));
-+		button.setAttribute("representedFile", finalFile);
-+		link.setAttribute("representedFile", finalFile);
-+
-+		button.setAttribute("class", "button " + buttonType);
-+		button.appendChild(document.createTextNode(buttonType));
-+		$("files").appendChild(button);
-+		$("files").appendChild(p);
-+	}
-+
-+	var binaryDiff = function(filename) {
-+		if (filename.match(/\.(png|jpg|icns|psd)$/i))
-+			return '&lt;a href="#" onclick="return showImage(this, \'' + filename + '\')">Display image&lt;/a>';
-+		else
-+			return "Binary file differs";
-+	}
-+	
-+	highlightDiff(commit.diff, $("diff"), { "newfile" : newfile, "binaryFile" : binaryDiff });
-+}
-+
-+var showImage = function(element, filename)
-+{
-+	element.outerHTML = '&lt;img src="GitX://' + commit.sha + '/' + filename + '">';
-+	return false;
-+}
-+
-+var enableFeature = function(feature, element)
-+{
-+	if(!Controller || Controller.isFeatureEnabled_(feature)) {
-+		element.style.display = "";
-+	} else {
-+		element.style.display = "none";
-+	}
-+}
-+
-+var enableFeatures = function()
-+{
-+	enableFeature("gist", $("gist"))
-+	if(commit)
-+		setGravatar(commit.author_email, $("gravatar"));
-+	enableFeature("gravatar", $("gravatar"))
-+}
-+
-+var loadCommitDetails = function(data)
-+{
-+	commit.parseDetails(data);
-+
-+	if (commit.notificationID)
-+		clearTimeout(commit.notificationID)
-+	else
-+		$("notification").style.display = "none";
-+
-+	var formatEmail = function(name, email) {
-+		return email ? name + " &lt;&lt;a href='mailto:" + email + "'>" + email + "&lt;/a>&gt;" : name;
-+	}
-+
-+	$("authorID").innerHTML = formatEmail(commit.author_name, commit.author_email);
-+
-+	if (commit.committer_name != commit.author_name) {
-+		$("committerID").parentNode.style.display = "";
-+		$("committerID").innerHTML = formatEmail(commit.committer_name, commit.committer_email);
-+
-+		$("committerDate").parentNode.style.display = "";
-+		$("committerDate").innerHTML = commit.committer_date;
-+	} else {
-+		$("committerID").parentNode.style.display = "none";
-+		$("committerDate").parentNode.style.display = "none";
-+	}
-+
-+	$("date").innerHTML = commit.author_date;
-+	$("message").innerHTML = commit.message.replace(/\n/g,"&lt;br>");
-+
-+	if (commit.diff.length &lt; 200000)
-+		showDiff();
-+	else
-+		$("diff").innerHTML = "&lt;a class='showdiff' href='' onclick='showDiff(); return false;'>This is a large commit. Click here or press 'v' to view.&lt;/a>";
-+
-+	hideNotification();
-+	enableFeatures();
-+}
-diff --git a/diff/__others/v1/views/history/index.html b/diff/__others/v1/views/history/index.html
-new file mode 100755
-index 0000000..65117c3
---- /dev/null
-+++ b/diff/__others/v1/views/history/index.html
-@@ -0,0 +1,64 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Details for commit&lt;/title>
-+	&lt;link rel="stylesheet" href="../../css/GitX.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="../../lib/GitX.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/md5.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../../lib/keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+
-+	&lt;link rel="stylesheet" href="history.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="history.js" type="text/javascript" charset="utf-8">&lt;/script>
-+&lt;/head>
-+
-+&lt;body style="padding: 0px; border: 0px">
-+	&lt;div id="rightcontent">
-+		&lt;div id="buttons">
-+			&lt;a class="servicebutton" id="gist" onClick="confirm_gist();return false" href='#'>
-+				Gist&nbsp;it
-+			&lt;/a>
-+		&lt;/div>
-+		&lt;img id="gravatar" src="">
-+	&lt;/div>
-+	&lt;table id="commit_header">
-+	&lt;tr>
-+		&lt;td class="property_name">SHA:&lt;/td>
-+		&lt;td id="commitID">&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Author:&lt;/td>
-+		&lt;td id="authorID">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Date:&lt;/td>
-+		&lt;td id="date">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr style="display:none">
-+		&lt;td class="property_name">Committer:&lt;/td>
-+		&lt;td id="committerID">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr style="display:none">
-+		&lt;td class="property_name">Commit Date:&lt;/td>
-+		&lt;td id="committerDate">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Subject:&lt;/td>
-+		&lt;td id="subjectID" style="font-weight:bold">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr style="display:none">
-+		&lt;td class="property_name">Refs:&lt;/td>
-+		&lt;td id="refs">&lt;/td>
-+	&lt;/tr>
-+	&lt;/table>
-+	&lt;div id="notification" style="display:none;">
-+		&lt;img src="../../images/spinner.gif" alt="Spinner" id="spinner">&lt;/img>
-+		&lt;div id="notification_message">&lt;/div>
-+	&lt;/div>
-+	&lt;hr>
-+	&lt;div id="message_files">
-+		&lt;pre id="message">&lt;/pre>
-+		&lt;div id="files">&lt;/div>
-+	&lt;/div>
-+
-+	&lt;div id="diff">&lt;/div>
-+&lt;/body>
-diff --git a/diff/__others/v2/commit.html b/diff/__others/v2/commit.html
-new file mode 100755
-index 0000000..c0e66c0
---- /dev/null
-+++ b/diff/__others/v2/commit.html
-@@ -0,0 +1,51 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Details for commit&lt;/title>
-+	&lt;link rel="stylesheet" href="commits.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;link rel="stylesheet" href="diff_style.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="prototype.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="md5.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="commit.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+&lt;/head>
-+
-+&lt;body style="padding: 0px; border: 0px">
-+	&lt;div id="rightcontent">
-+		&lt;div id="buttons">
-+			&lt;a class="servicebutton" onClick="gistie();return false" href='#'>
-+				Gist&nbsp;it
-+			&lt;/a>
-+		&lt;/div>
-+		&lt;img id="gravatar" src="">
-+	&lt;/div>
-+	&lt;table id="commit_header">
-+	&lt;tr>
-+		&lt;td class="property_name">SHA:&lt;/td>
-+		&lt;td id="commitID">&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Author:&lt;/td>
-+		&lt;td id="authorID">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Date:&lt;/td>
-+		&lt;td id="date">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Subject:&lt;/td>
-+		&lt;td id="subjectID" style="font-weight:bold">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr style="display:none">
-+		&lt;td class="property_name">Refs:&lt;/td>
-+		&lt;td id="refs">&lt;/td>
-+	&lt;/tr>
-+	&lt;/table>
-+	&lt;div id="notification" style="display:none;">
-+		&lt;img src="spinner.gif" alt="Spinner" id="spinner">&lt;/img>
-+		&lt;div id="notification_message">&lt;/div>
-+	&lt;/div>
-+	&lt;hr>
-+	&lt;pre id="message">&lt;/pre>
-+	&lt;pre>&lt;code class="diffcode" id='details'>&lt;/code>&lt;/pre>
-+&lt;/body>
-diff --git a/diff/__others/v2/commit.js b/diff/__others/v2/commit.js
-new file mode 100755
-index 0000000..8288f8a
---- /dev/null
-+++ b/diff/__others/v2/commit.js
-@@ -0,0 +1,183 @@
-+var commit;
-+var Commit = Class.create({
-+	initialize: function(obj) {
-+		this.raw = obj.details;
-+		this.refs = obj.refs;
-+		this.object = obj;
-+
-+		var diffStart = this.raw.indexOf("\ndiff ");
-+		var messageStart = this.raw.indexOf("\n\n") + 2;
-+
-+		if (diffStart > 0) {
-+			this.message = this.raw.substring(messageStart, diffStart).gsub(/^    /m, "").escapeHTML();
-+			this.diff = this.raw.substring(diffStart);
-+		} else {
-+			this.message = this.raw.substring(messageStart).gsub(/^    /m, "").escapeHTML();
-+			this.diff = "";
-+		}
-+		this.header = this.raw.substring(0, messageStart);
-+
-+		this.sha = this.header.match(/^commit ([0-9a-f]{40,40})/)[1];
-+
-+		var match = this.header.match(/\nauthor (.*) &lt;(.*@.*)> ([0-9].*)/);
-+		this.author_name = match[1];
-+		if (!(match[2].match(/@[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/)))
-+			this.author_email = match[2];
-+
-+		this.author_date = new Date(parseInt(match[3]) * 1000);
-+
-+		match = this.header.match(/\ncommitter (.*) &lt;(.*@.*)> ([0-9].*)/);
-+		this.committer_name = match[1];
-+		this.committer_email = match[2];
-+		this.committer_date = new Date(parseInt(match[3]) * 1000);
-+
-+		this.parents = obj.parents;
-+	},
-+	reloadRefs: function() {
-+		this.refs = CommitObject.refs;
-+	}
-+});
-+
-+var notify = function(text, state) {
-+	var n = $("notification");
-+	n.style.display = "";
-+	$("notification_message").innerHTML = text;
-+
-+	// Change color
-+	if (!state) { // Busy
-+		$("spinner").style.display = "";
-+		n.setAttribute("class", "");
-+	}
-+	else if (state == 1) { // Success
-+		$("spinner").style.display = "none";
-+		n.setAttribute("class", "success");
-+	} else if (state == -1) {// Fail
-+		$("spinner").style.display = "none";
-+		n.setAttribute("class", "fail");
-+	}
-+}
-+
-+var gistie = function() {
-+	notify("Uploading code to Gistie..", 0);
-+
-+	parameters = {
-+		"file_ext[gistfile1]":      "patch",
-+		"file_name[gistfile1]":     commit.object.subject.replace(/[^a-zA-Z0-9]/g, "-") + ".patch",
-+		"file_contents[gistfile1]": commit.object.patch(),
-+	};
-+
-+	// TODO: Replace true with private preference
-+	token = Controller.getConfig_("github.token");
-+	login = Controller.getConfig_("github.user");
-+	if (token && login)
-+	{
-+		parameters.login = login;
-+		parameters.token = token;
-+	} else {
-+		parameters.private = true;
-+	}
-+
-+	new Ajax.Request("http://gist.github.com/gists", {
-+		method: 'post',
-+		parameters: parameters,
-+
-+		onSuccess: function(t) {
-+			if (m = t.responseText.match(/gist: ([a-f0-9]+)/))
-+				notify("Code uploaded to gistie &lt;a target='_new' href='http://gist.github.com/" + m[1] + "'>#" + m[1] + "&lt;/a>", 1);
-+			else
-+				notify("Pasting to Gistie failed.", -1);
-+		},
-+		onFailure: function(t) {
-+			notify("Pasting to Gistie failed.", -1);
-+		},
-+		onException: function(t) {
-+			notify("Pasting to Gistie failed.", -1);
-+		},
-+		
-+	});
-+	
-+}
-+
-+var setGravatar = function(email, image) {
-+	if (Controller && !Controller.isReachable_("www.gravatar.com"))
-+		return;
-+
-+	if (!email) {
-+		$("gravatar").src = "http://www.gravatar.com/avatar/?d=wavatar&s=60";
-+		return;
-+	}
-+
-+	$("gravatar").src = "http://www.gravatar.com/avatar/" +
-+		hex_md5(commit.author_email) + "?d=wavatar&s=60";
-+}
-+
-+var selectCommit = function(a) {
-+	Controller.selectCommit_(a);
-+}
-+
-+var showDiffs = function() {
-+	$("details").hide();
-+
-+	$("details").innerHTML = commit.diff.escapeHTML();
-+
-+	highlightDiffs();
-+	$("details").show();
-+}
-+
-+var reload = function() {
-+	$("notification").style.display = "none";
-+	commit.refs = null;
-+	showRefs();
-+	commit.reloadRefs();
-+	showRefs();
-+}
-+
-+var showRefs = function() {
-+	if (commit.refs){
-+		$('refs').parentNode.style.display = "";
-+		$('refs').innerHTML = "";
-+		$A(commit.refs).each(function(ref) {
-+							 curBranch = "";
-+							 $('refs').innerHTML += '&lt;span class="refs ' + ref.type()  + (CurrentBranch == ref.ref ? ' currentBranch' : '') + '">' + ref.shortName() + '&lt;/span>';
-+							 });
-+	} else
-+		$('refs').parentNode.style.display = "none";
-+}
-+
-+var loadCommit = function() {
-+	commit = new Commit(CommitObject);
-+	$("notification").style.display = "none";
-+
-+	$("commitID").innerHTML = commit.sha;
-+
-+	if (commit.author_email)
-+		$("authorID").innerHTML = commit.author_name + " &lt;&lt;a href='mailto:" + commit.author_email + "'>" + commit.author_email + "&lt;/a>&gt;";
-+	else
-+		$("authorID").innerHTML = commit.author_name;
-+
-+	$("date").innerHTML = commit.author_date;
-+	$("subjectID").innerHTML =CommitObject.subject.escapeHTML();
-+	
-+	$A($("commit_header").rows).each(function(row) {
-+		if (row.innerHTML.match(/Parent:/))
-+			row.remove();
-+	});
-+	commit.parents.each(function(parent) {
-+		var new_row = $("commit_header").insertRow(-1);
-+		new_row.innerHTML = "&lt;td class='property_name'>Parent:&lt;/td>&lt;td>&lt;a href='' onclick=\"selectCommit(this.innerHTML); return false;\">" + parent + "&lt;/a>&lt;/td>";
-+	});
-+
-+	showRefs();
-+
-+	$("message").innerHTML = commit.message.replace(/\n/g,"&lt;br>");
-+
-+	if (commit.diff.length &lt; 200000) {
-+		showDiffs();
-+	} else {
-+		$("details").innerHTML = "&lt;a class='showdiff' href='' onclick='showDiffs(); return false;'>This is a large commit. Click here or press 'v' to view.&lt;/a>";
-+	}
-+
-+	setGravatar(commit.author_email, $("gravatar"));
-+
-+	scroll(0, 0);
-+}
-diff --git a/diff/__others/v2/commits.css b/diff/__others/v2/commits.css
-new file mode 100755
-index 0000000..3eb801f
---- /dev/null
-+++ b/diff/__others/v2/commits.css
-@@ -0,0 +1,133 @@
-+body {
-+	font-family: 'Lucida Grande';
-+}
-+
-+#commit_header {
-+	width: 100%;
-+	font-size: 12px;
-+}
-+
-+#commit_header td {
-+  padding-left: 5px;
-+}
-+
-+#notification {
-+	margin: 5px;
-+	padding: 3px;
-+	clear: both;
-+
-+	border: 1px solid black;
-+	background-color: #f3f3f3;
-+
-+	text-align: center;
-+	font-size: 80%;
-+
-+	-webkit-border-radius: 2px;
-+}
-+
-+#notification.success {
-+	background-color: #CCFF99;
-+	border: 1px solid #99CC66;
-+}
-+
-+#notification.fail {
-+	background-color: #ff9999;
-+	border: 1px solid #cc6666;
-+}
-+
-+#rightcontent {
-+	float: right;
-+}
-+
-+#buttons {
-+	float: left;
-+	margin-top: 5px;
-+}
-+
-+a.servicebutton{
-+	display: block;
-+	width: 80px;
-+	padding: 2px;
-+	margin-bottom: 4px;
-+
-+	border: 1px solid #3465a4;
-+	background-color: #cce5ff;
-+	color: #204a87;
-+
-+	font-size: 65%;
-+	text-decoration: none;
-+	text-align: center;
-+
-+	-webkit-border-radius: 2px;
-+}
-+
-+#gravatar {
-+	margin: 5px;
-+	padding: 2px;
-+	width: 60px;
-+	height: 60px;
-+
-+	border: solid gray 1px;
-+	-webkit-border-radius: 2px;
-+}
-+
-+.property_name {
-+	width: 50px;
-+	color:#7F7F7F;
-+	text-align: right;
-+	font-weight: bold;
-+}
-+
-+#message {
-+	font-family: Helvetica;
-+	margin-left: 0px;
-+	font-size: 12px;
-+}
-+
-+#details {
-+	font-family: Monaco;
-+	font-size: 10px;
-+	overflow: hidden;
-+	width: 600px;
-+}
-+hr {
-+	border: 0;
-+	height: 1px;
-+	margin: 0 8px;
-+	background-color: #DEDEDE;
-+	clear: both;
-+}
-+
-+a {
-+	color: rgb(20, 79, 174);
-+}
-+
-+a.showdiff {
-+	text-decoration: none;
-+	font-size: 1.3em;
-+}
-+
-+.refs {
-+	font-size: 9px;
-+	font-family: Helvetica;
-+	border: 1px solid black;
-+	margin-right: 5px;
-+	padding: 1px 3px 1px 3px;
-+	-webkit-border-radius: 2px;
-+}
-+
-+.refs.head {
-+	background-color: #aaf254;
-+}
-+
-+.refs.remote {
-+	background-color: #b2dfff;
-+}
-+
-+.refs.tag {
-+	background-color: #fced4f;
-+}
-+
-+.refs.currentBranch {
-+	font-weight: bold;
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v2/diff.html b/diff/__others/v2/diff.html
-new file mode 100755
-index 0000000..56f0767
---- /dev/null
-+++ b/diff/__others/v2/diff.html
-@@ -0,0 +1,61 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Diff for file&lt;/title>
-+	&lt;link rel="stylesheet" href="commits.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;link rel="stylesheet" href="diff_style.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+		&lt;script src="prototype.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="commit.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="diff.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script>
-+		var showFileChanges = function(file, cached) {
-+			// New file?
-+			if (file.status == 0)
-+			{
-+				var contents = file.unstagedChanges();
-+				if (contents)
-+					$("diff").innerHTML = contents.escapeHTML();
-+				else
-+					$("diff").innerHTML = "Could not display changes";
-+
-+				$("diff").show();
-+				$('title').innerHTML = "New file: " + file.path;
-+			}  else {
-+				$("diff").hide();
-+				if (cached)
-+					$("diff").innerHTML = file.cachedChangesAmend_(Controller.amend()).escapeHTML();
-+				else
-+					$("diff").innerHTML = file.unstagedChanges().escapeHTML();
-+				highlightDiffs();
-+				$("diff").show();
-+				$("title").innerHTML = "Changes for " + file.path;
-+			}
-+		}
-+	&lt;/script>
-+	&lt;style type="text/css" media="screen">
-+		body {
-+			padding: 0px;
-+			margin: 0px;
-+			margin-top: 20px;
-+		}
-+		#title {
-+			padding: 0px;
-+			padding-left: 5px;
-+			border-bottom: 1px solid black;
-+			margin: 0px;
-+			font-weight: 500;
-+			background-color: #ECF3FD;
-+			font-size: 100%;
-+			position: fixed;
-+			font-family: Helvetica;
-+			top: 0px;
-+			width: 100%;
-+		}
-+	&lt;/style>
-+	&lt;script src="diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+
-+&lt;/head>
-+&lt;h1 id='title'>Nothing to commit&lt;/h1>
-+&lt;body style="padding: 0px; border: 0px" onLoad="">
-+	&lt;pre>&lt;code class="diffcode" id='diff'>Nothing to commit (working directory clean)&lt;/code>&lt;/pre>
-+&lt;/body>
-diff --git a/diff/__others/v2/diff.js b/diff/__others/v2/diff.js
-new file mode 100755
-index 0000000..e69de29
-diff --git a/diff/__others/v2/diffHighlighter.js b/diff/__others/v2/diffHighlighter.js
-new file mode 100755
-index 0000000..c74bea4
---- /dev/null
-+++ b/diff/__others/v2/diffHighlighter.js
-@@ -0,0 +1,90 @@
-+
-+// If we run from a Safari instance, we don't
-+// have a Controller object. Instead, we fake it by
-+// using the console
-+if (typeof Controller == 'undefined')
-+{
-+	Controller = console;
-+	Controller.log_ = console.log;
-+}
-+
-+var highlightDiffs = function() {
-+	var start = new Date().getTime();
-+	var diffs = document.getElementsByClassName("diffcode");
-+	for (var diffn = 0; diffn &lt; diffs.length; diffn++) {
-+		var diff = diffs[diffn];
-+
-+		var content = diff.innerHTML.replace(/\t/g, "    ");;
-+
-+		var line1 = "";
-+		var line2 = "";
-+		var diffContent = "";
-+		var lines = content.split('\n');
-+
-+		var hunk_start_line_1 = -1;
-+		var hunk_start_line_2 = -1;
-+
-+		var header = false;
-+
-+		for (var lineno = 0; lineno &lt; lines.length; lineno++) {
-+			var l = lines[lineno];
-+
-+			var firstChar = l.charAt(0);
-+
-+			if (header) {
-+				if (firstChar == "+" || firstChar == "-")
-+					continue;
-+			} else if (firstChar == "d") {
-+				header = true;
-+				line1 += '\n';
-+				line2 += '\n';
-+				diffContent += '&lt;div class="fileHeader">&lt;span class="fileline">' + l + '&lt;/span>&lt;/div>';
-+				continue;
-+			}
-+
-+
-+			if (firstChar == "+") {
-+				// Highlight trailing whitespace
-+				if (m = l.match(/\s+$/))
-+				  l = l.replace(/\s+$/, "&lt;span class='whitespace'>" + m + "&lt;/span>");
-+
-+				line1 += "\n";
-+				line2 += ++hunk_start_line_2 + "\n";
-+				diffContent += "&lt;div class='addline'>" + l + "&lt;/div>";
-+			}
-+			else if (firstChar == "-") {
-+				line1 += ++hunk_start_line_1 + "\n";
-+				line2 += "\n";
-+				diffContent += "&lt;div class='delline'>" + l + "&lt;/div>";
-+			}
-+			else if (firstChar == "@")
-+			{
-+				header = false;
-+				if (m = l.match(/@@ \-([0-9]+),\d+ \+(\d+),\d+ @@/))
-+				{
-+					hunk_start_line_1 = parseInt(m[1]) - 1;
-+					hunk_start_line_2 = parseInt(m[2]) - 1;
-+				}
-+				line1 += "...\n";
-+				line2 += "...\n";
-+				diffContent += "&lt;div class='hunkheader'>" + l + "&lt;/div>";
-+			}
-+			else if (firstChar == " ")
-+			{
-+				line1 += ++hunk_start_line_1 + "\n";
-+				line2 += ++hunk_start_line_2 + "\n";
-+				diffContent += l + "\n";
-+			}
-+		}
-+
-+
-+		// This takes about 7ms
-+		diff.innerHTML = "&lt;table class='diff'>&lt;tr>&lt;td class='lineno'l>&lt;pre>" + line1 + "&lt;/pre>&lt;/td>" +
-+		                  "&lt;td class='lineno'l>&lt;pre>" + line2 + "&lt;/pre>&lt;/td>" +
-+		                  "&lt;td width='100%'>&lt;pre width='100%'>" + diffContent + "&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>";
-+
-+	}
-+	// TODO: Replace this with a performance pref call
-+	if (false)
-+		Controller.log_("Total time:" + (new Date().getTime() - start));
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v2/diff_style.css b/diff/__others/v2/diff_style.css
-new file mode 100755
-index 0000000..2298ac1
---- /dev/null
-+++ b/diff/__others/v2/diff_style.css
-@@ -0,0 +1,61 @@
-+body {
-+	margin: 0;
-+	margin-top: 5px;
-+	width: 100%;
-+}
-+code .delline, code .oldfile {
-+  background-color: #FEE;
-+  color: #B00;
-+}
-+
-+code .addline, code .newfile {
-+  background-color: #DFD;
-+  color: #080;
-+}
-+code .fileline {
-+  font-weight: bold;
-+}
-+
-+code .hunkheader {
-+  background-color: #f7f7f7;
-+  color: #bbb;
-+}
-+
-+pre {
-+  width: 100%;
-+}
-+
-+pre code {
-+  width: 100%;
-+}
-+
-+#message {
-+	margin: 5px;
-+	margin-left: 20px;
-+	font-family: Monaco;
-+	width: auto;
-+}
-+
-+#CurrentHunk {
-+	border-left: 5px solid black;
-+}
-+
-+.whitespace {
-+	background-color: rgba(255,0,0,0.5);
-+}
-+
-+
-+table.diff {
-+	margin-top: 15px;
-+	margin-left: 5px;
-+	margin-right: 5px;
-+	border-spacing: 0;
-+}
-+.lineno {
-+	padding-left: 2px;
-+	padding-right: 2px;
-+	background-color: #ECECEC;
-+	color: #A9A9A9;
-+	border: 1px solid #DDDDDD;
-+	text-align: right;
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v2/keyboardNavigation.js b/diff/__others/v2/keyboardNavigation.js
-new file mode 100755
-index 0000000..7ed1f44
---- /dev/null
-+++ b/diff/__others/v2/keyboardNavigation.js
-@@ -0,0 +1,56 @@
-+var scrollToCenter = function(element) {
-+	var pos = element.cumulativeOffset();
-+    window.scrollTo(pos[0], pos[1] - 100);
-+}
-+
-+var handleKeys = function(event) {
-+	if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey)
-+		return;
-+	if (event.keyCode == 74)
-+		return changeHunk(true);
-+	else if (event.keyCode == 75)
-+		return changeHunk(false);
-+	else if (event.keyCode == 86) {// 'v'
-+		showDiffs();
-+		return false;
-+	}
-+	return true;
-+}
-+
-+var handleKeyFromCocoa = function(key) {
-+	if (key == 'j')
-+		changeHunk(true);
-+	else if (key == 'k')
-+		changeHunk(false);
-+	else if (key == 'v')
-+		showDiffs();
-+	else if (key == 'c')
-+		Controller.copySource();
-+}
-+
-+var changeHunk = function(next) {
-+	var hunks = $A(document.getElementsByClassName("hunkheader"));
-+	if (hunks.length == 0)
-+		return;
-+
-+	var currentHunk = document.getElementById("CurrentHunk");
-+	var newHunk;
-+
-+	if (currentHunk && hunks.indexOf(currentHunk) >= 0) {
-+		currentHunk.id = null;
-+		if (next)
-+			newHunk = hunks[hunks.indexOf(currentHunk) + 1];
-+		else
-+			newHunk = hunks[hunks.indexOf(currentHunk) - 1];
-+	}
-+	if (!newHunk)
-+		newHunk = hunks[0];
-+
-+	newHunk.id = 'CurrentHunk';
-+	scrollToCenter(newHunk);
-+	return false;
-+}
-+
-+document.onkeydown = function(event) {
-+	return handleKeys(event);
-+};
-\ No newline at end of file
-diff --git a/diff/__others/v2/md5.js b/diff/__others/v2/md5.js
-new file mode 100755
-index 0000000..36fc1c2
---- /dev/null
-+++ b/diff/__others/v2/md5.js
-@@ -0,0 +1,256 @@
-+/*
-+ * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
-+ * Digest Algorithm, as defined in RFC 1321.
-+ * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
-+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
-+ * Distributed under the BSD License
-+ * See http://pajhome.org.uk/crypt/md5 for more info.
-+ */
-+
-+/*
-+ * Configurable variables. You may need to tweak these to be compatible with
-+ * the server-side, but the defaults work in most cases.
-+ */
-+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */
-+var b64pad  = ""; /* base-64 pad character. "=" for strict RFC compliance   */
-+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */
-+
-+/*
-+ * These are the functions you'll usually want to call
-+ * They take string arguments and return either hex or base-64 encoded strings
-+ */
-+function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}
-+function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}
-+function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}
-+function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }
-+function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }
-+function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }
-+
-+/*
-+ * Perform a simple self-test to see if the VM is working
-+ */
-+function md5_vm_test()
-+{
-+  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
-+}
-+
-+/*
-+ * Calculate the MD5 of an array of little-endian words, and a bit length
-+ */
-+function core_md5(x, len)
-+{
-+  /* append padding */
-+  x[len >> 5] |= 0x80 &lt;&lt; ((len) % 32);
-+  x[(((len + 64) >>> 9) &lt;&lt; 4) + 14] = len;
-+
-+  var a =  1732584193;
-+  var b = -271733879;
-+  var c = -1732584194;
-+  var d =  271733878;
-+
-+  for(var i = 0; i &lt; x.length; i += 16)
-+  {
-+    var olda = a;
-+    var oldb = b;
-+    var oldc = c;
-+    var oldd = d;
-+
-+    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
-+    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
-+    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
-+    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
-+    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
-+    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
-+    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
-+    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
-+    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
-+    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
-+    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
-+    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
-+    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
-+    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
-+    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
-+    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);
-+
-+    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
-+    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
-+    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
-+    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
-+    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
-+    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
-+    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
-+    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
-+    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
-+    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
-+    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
-+    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
-+    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
-+    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
-+    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
-+    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);
-+
-+    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
-+    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
-+    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
-+    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
-+    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
-+    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
-+    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
-+    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
-+    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
-+    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
-+    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
-+    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
-+    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
-+    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
-+    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
-+    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);
-+
-+    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
-+    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
-+    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
-+    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
-+    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
-+    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
-+    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
-+    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
-+    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
-+    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
-+    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
-+    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
-+    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
-+    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
-+    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
-+    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);
-+
-+    a = safe_add(a, olda);
-+    b = safe_add(b, oldb);
-+    c = safe_add(c, oldc);
-+    d = safe_add(d, oldd);
-+  }
-+  return Array(a, b, c, d);
-+
-+}
-+
-+/*
-+ * These functions implement the four basic operations the algorithm uses.
-+ */
-+function md5_cmn(q, a, b, x, s, t)
-+{
-+  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
-+}
-+function md5_ff(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
-+}
-+function md5_gg(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
-+}
-+function md5_hh(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
-+}
-+function md5_ii(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
-+}
-+
-+/*
-+ * Calculate the HMAC-MD5, of a key and some data
-+ */
-+function core_hmac_md5(key, data)
-+{
-+  var bkey = str2binl(key);
-+  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
-+
-+  var ipad = Array(16), opad = Array(16);
-+  for(var i = 0; i &lt; 16; i++)
-+  {
-+    ipad[i] = bkey[i] ^ 0x36363636;
-+    opad[i] = bkey[i] ^ 0x5C5C5C5C;
-+  }
-+
-+  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
-+  return core_md5(opad.concat(hash), 512 + 128);
-+}
-+
-+/*
-+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally
-+ * to work around bugs in some JS interpreters.
-+ */
-+function safe_add(x, y)
-+{
-+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
-+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
-+  return (msw &lt;&lt; 16) | (lsw & 0xFFFF);
-+}
-+
-+/*
-+ * Bitwise rotate a 32-bit number to the left.
-+ */
-+function bit_rol(num, cnt)
-+{
-+  return (num &lt;&lt; cnt) | (num >>> (32 - cnt));
-+}
-+
-+/*
-+ * Convert a string to an array of little-endian words
-+ * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
-+ */
-+function str2binl(str)
-+{
-+  var bin = Array();
-+  var mask = (1 &lt;&lt; chrsz) - 1;
-+  for(var i = 0; i &lt; str.length * chrsz; i += chrsz)
-+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) &lt;&lt; (i%32);
-+  return bin;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a string
-+ */
-+function binl2str(bin)
-+{
-+  var str = "";
-+  var mask = (1 &lt;&lt; chrsz) - 1;
-+  for(var i = 0; i &lt; bin.length * 32; i += chrsz)
-+    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);
-+  return str;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a hex string.
-+ */
-+function binl2hex(binarray)
-+{
-+  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
-+  var str = "";
-+  for(var i = 0; i &lt; binarray.length * 4; i++)
-+  {
-+    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +
-+           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);
-+  }
-+  return str;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a base-64 string
-+ */
-+function binl2b64(binarray)
-+{
-+  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
-+  var str = "";
-+  for(var i = 0; i &lt; binarray.length * 4; i += 3)
-+  {
-+    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) &lt;&lt; 16)
-+                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) &lt;&lt; 8 )
-+                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);
-+    for(var j = 0; j &lt; 4; j++)
-+    {
-+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;
-+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);
-+    }
-+  }
-+  return str;
-+}
-diff --git a/diff/__others/v2/prototype.js b/diff/__others/v2/prototype.js
-new file mode 100755
-index 0000000..6385503
---- /dev/null
-+++ b/diff/__others/v2/prototype.js
-@@ -0,0 +1,4221 @@
-+/*  Prototype JavaScript framework, version 1.6.0.2
-+ *  (c) 2005-2008 Sam Stephenson
-+ *
-+ *  Prototype is freely distributable under the terms of an MIT-style license.
-+ *  For details, see the Prototype web site: http://www.prototypejs.org/
-+ *
-+ *--------------------------------------------------------------------------*/
-+
-+var Prototype = {
-+  Version: '1.6.0.2',
-+
-+  Browser: {
-+    IE:     !!(window.attachEvent && !window.opera),
-+    Opera:  !!window.opera,
-+    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,
-+    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 && navigator.userAgent.indexOf('KHTML') == -1,
-+    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)
-+  },
-+
-+  BrowserFeatures: {
-+    XPath: !!document.evaluate,
-+    ElementExtensions: !!window.HTMLElement,
-+    SpecificElementExtensions:
-+      document.createElement('div').__proto__ &&
-+      document.createElement('div').__proto__ !==
-+        document.createElement('form').__proto__
-+  },
-+
-+  ScriptFragment: '&lt;script[^>]*>([\\S\\s]*?)&lt;\/script>',
-+  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,
-+
-+  emptyFunction: function() { },
-+  K: function(x) { return x }
-+};
-+
-+if (Prototype.Browser.MobileSafari)
-+  Prototype.BrowserFeatures.SpecificElementExtensions = false;
-+
-+
-+/* Based on Alex Arnell's inheritance implementation. */
-+var Class = {
-+  create: function() {
-+    var parent = null, properties = $A(arguments);
-+    if (Object.isFunction(properties[0]))
-+      parent = properties.shift();
-+
-+    function klass() {
-+      this.initialize.apply(this, arguments);
-+    }
-+
-+    Object.extend(klass, Class.Methods);
-+    klass.superclass = parent;
-+    klass.subclasses = [];
-+
-+    if (parent) {
-+      var subclass = function() { };
-+      subclass.prototype = parent.prototype;
-+      klass.prototype = new subclass;
-+      parent.subclasses.push(klass);
-+    }
-+
-+    for (var i = 0; i &lt; properties.length; i++)
-+      klass.addMethods(properties[i]);
-+
-+    if (!klass.prototype.initialize)
-+      klass.prototype.initialize = Prototype.emptyFunction;
-+
-+    klass.prototype.constructor = klass;
-+
-+    return klass;
-+  }
-+};
-+
-+Class.Methods = {
-+  addMethods: function(source) {
-+    var ancestor   = this.superclass && this.superclass.prototype;
-+    var properties = Object.keys(source);
-+
-+    if (!Object.keys({ toString: true }).length)
-+      properties.push("toString", "valueOf");
-+
-+    for (var i = 0, length = properties.length; i &lt; length; i++) {
-+      var property = properties[i], value = source[property];
-+      if (ancestor && Object.isFunction(value) &&
-+          value.argumentNames().first() == "$super") {
-+        var method = value, value = Object.extend((function(m) {
-+          return function() { return ancestor[m].apply(this, arguments) };
-+        })(property).wrap(method), {
-+          valueOf:  function() { return method },
-+          toString: function() { return method.toString() }
-+        });
-+      }
-+      this.prototype[property] = value;
-+    }
-+
-+    return this;
-+  }
-+};
-+
-+var Abstract = { };
-+
-+Object.extend = function(destination, source) {
-+  for (var property in source)
-+    destination[property] = source[property];
-+  return destination;
-+};
-+
-+Object.extend(Object, {
-+  inspect: function(object) {
-+    try {
-+      if (Object.isUndefined(object)) return 'undefined';
-+      if (object === null) return 'null';
-+      return object.inspect ? object.inspect() : String(object);
-+    } catch (e) {
-+      if (e instanceof RangeError) return '...';
-+      throw e;
-+    }
-+  },
-+
-+  toJSON: function(object) {
-+    var type = typeof object;
-+    switch (type) {
-+      case 'undefined':
-+      case 'function':
-+      case 'unknown': return;
-+      case 'boolean': return object.toString();
-+    }
-+
-+    if (object === null) return 'null';
-+    if (object.toJSON) return object.toJSON();
-+    if (Object.isElement(object)) return;
-+
-+    var results = [];
-+    for (var property in object) {
-+      var value = Object.toJSON(object[property]);
-+      if (!Object.isUndefined(value))
-+        results.push(property.toJSON() + ': ' + value);
-+    }
-+
-+    return '{' + results.join(', ') + '}';
-+  },
-+
-+  toQueryString: function(object) {
-+    return $H(object).toQueryString();
-+  },
-+
-+  toHTML: function(object) {
-+    return object && object.toHTML ? object.toHTML() : String.interpret(object);
-+  },
-+
-+  keys: function(object) {
-+    var keys = [];
-+    for (var property in object)
-+      keys.push(property);
-+    return keys;
-+  },
-+
-+  values: function(object) {
-+    var values = [];
-+    for (var property in object)
-+      values.push(object[property]);
-+    return values;
-+  },
-+
-+  clone: function(object) {
-+    return Object.extend({ }, object);
-+  },
-+
-+  isElement: function(object) {
-+    return object && object.nodeType == 1;
-+  },
-+
-+  isArray: function(object) {
-+    return object != null && typeof object == "object" &&
-+      'splice' in object && 'join' in object;
-+  },
-+
-+  isHash: function(object) {
-+    return object instanceof Hash;
-+  },
-+
-+  isFunction: function(object) {
-+    return typeof object == "function";
-+  },
-+
-+  isString: function(object) {
-+    return typeof object == "string";
-+  },
-+
-+  isNumber: function(object) {
-+    return typeof object == "number";
-+  },
-+
-+  isUndefined: function(object) {
-+    return typeof object == "undefined";
-+  }
-+});
-+
-+Object.extend(Function.prototype, {
-+  argumentNames: function() {
-+    var names = this.toString().match(/^[\s\(]*function[^(]*\((.*?)\)/)[1].split(",").invoke("strip");
-+    return names.length == 1 && !names[0] ? [] : names;
-+  },
-+
-+  bind: function() {
-+    if (arguments.length &lt; 2 && Object.isUndefined(arguments[0])) return this;
-+    var __method = this, args = $A(arguments), object = args.shift();
-+    return function() {
-+      return __method.apply(object, args.concat($A(arguments)));
-+    }
-+  },
-+
-+  bindAsEventListener: function() {
-+    var __method = this, args = $A(arguments), object = args.shift();
-+    return function(event) {
-+      return __method.apply(object, [event || window.event].concat(args));
-+    }
-+  },
-+
-+  curry: function() {
-+    if (!arguments.length) return this;
-+    var __method = this, args = $A(arguments);
-+    return function() {
-+      return __method.apply(this, args.concat($A(arguments)));
-+    }
-+  },
-+
-+  delay: function() {
-+    var __method = this, args = $A(arguments), timeout = args.shift() * 1000;
-+    return window.setTimeout(function() {
-+      return __method.apply(__method, args);
-+    }, timeout);
-+  },
-+
-+  wrap: function(wrapper) {
-+    var __method = this;
-+    return function() {
-+      return wrapper.apply(this, [__method.bind(this)].concat($A(arguments)));
-+    }
-+  },
-+
-+  methodize: function() {
-+    if (this._methodized) return this._methodized;
-+    var __method = this;
-+    return this._methodized = function() {
-+      return __method.apply(null, [this].concat($A(arguments)));
-+    };
-+  }
-+});
-+
-+Function.prototype.defer = Function.prototype.delay.curry(0.01);
-+
-+Date.prototype.toJSON = function() {
-+  return '"' + this.getUTCFullYear() + '-' +
-+    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +
-+    this.getUTCDate().toPaddedString(2) + 'T' +
-+    this.getUTCHours().toPaddedString(2) + ':' +
-+    this.getUTCMinutes().toPaddedString(2) + ':' +
-+    this.getUTCSeconds().toPaddedString(2) + 'Z"';
-+};
-+
-+var Try = {
-+  these: function() {
-+    var returnValue;
-+
-+    for (var i = 0, length = arguments.length; i &lt; length; i++) {
-+      var lambda = arguments[i];
-+      try {
-+        returnValue = lambda();
-+        break;
-+      } catch (e) { }
-+    }
-+
-+    return returnValue;
-+  }
-+};
-+
-+RegExp.prototype.match = RegExp.prototype.test;
-+
-+RegExp.escape = function(str) {
-+  return String(str).replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+var PeriodicalExecuter = Class.create({
-+  initialize: function(callback, frequency) {
-+    this.callback = callback;
-+    this.frequency = frequency;
-+    this.currentlyExecuting = false;
-+
-+    this.registerCallback();
-+  },
-+
-+  registerCallback: function() {
-+    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
-+  },
-+
-+  execute: function() {
-+    this.callback(this);
-+  },
-+
-+  stop: function() {
-+    if (!this.timer) return;
-+    clearInterval(this.timer);
-+    this.timer = null;
-+  },
-+
-+  onTimerEvent: function() {
-+    if (!this.currentlyExecuting) {
-+      try {
-+        this.currentlyExecuting = true;
-+        this.execute();
-+      } finally {
-+        this.currentlyExecuting = false;
-+      }
-+    }
-+  }
-+});
-+Object.extend(String, {
-+  interpret: function(value) {
-+    return value == null ? '' : String(value);
-+  },
-+  specialChar: {
-+    '\b': '\\b',
-+    '\t': '\\t',
-+    '\n': '\\n',
-+    '\f': '\\f',
-+    '\r': '\\r',
-+    '\\': '\\\\'
-+  }
-+});
-+
-+Object.extend(String.prototype, {
-+  gsub: function(pattern, replacement) {
-+    var result = '', source = this, match;
-+    replacement = arguments.callee.prepareReplacement(replacement);
-+
-+    while (source.length > 0) {
-+      if (match = source.match(pattern)) {
-+        result += source.slice(0, match.index);
-+        result += String.interpret(replacement(match));
-+        source  = source.slice(match.index + match[0].length);
-+      } else {
-+        result += source, source = '';
-+      }
-+    }
-+    return result;
-+  },
-+
-+  sub: function(pattern, replacement, count) {
-+    replacement = this.gsub.prepareReplacement(replacement);
-+    count = Object.isUndefined(count) ? 1 : count;
-+
-+    return this.gsub(pattern, function(match) {
-+      if (--count &lt; 0) return match[0];
-+      return replacement(match);
-+    });
-+  },
-+
-+  scan: function(pattern, iterator) {
-+    this.gsub(pattern, iterator);
-+    return String(this);
-+  },
-+
-+  truncate: function(length, truncation) {
-+    length = length || 30;
-+    truncation = Object.isUndefined(truncation) ? '...' : truncation;
-+    return this.length > length ?
-+      this.slice(0, length - truncation.length) + truncation : String(this);
-+  },
-+
-+  strip: function() {
-+    return this.replace(/^\s+/, '').replace(/\s+$/, '');
-+  },
-+
-+  stripTags: function() {
-+    return this.replace(/&lt;\/?[^>]+>/gi, '');
-+  },
-+
-+  stripScripts: function() {
-+    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
-+  },
-+
-+  extractScripts: function() {
-+    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');
-+    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');
-+    return (this.match(matchAll) || []).map(function(scriptTag) {
-+      return (scriptTag.match(matchOne) || ['', ''])[1];
-+    });
-+  },
-+
-+  evalScripts: function() {
-+    return this.extractScripts().map(function(script) { return eval(script) });
-+  },
-+
-+  escapeHTML: function() {
-+    var self = arguments.callee;
-+    self.text.data = this;
-+    return self.div.innerHTML;
-+  },
-+
-+  unescapeHTML: function() {
-+    var div = new Element('div');
-+    div.innerHTML = this.stripTags();
-+    return div.childNodes[0] ? (div.childNodes.length > 1 ?
-+      $A(div.childNodes).inject('', function(memo, node) { return memo+node.nodeValue }) :
-+      div.childNodes[0].nodeValue) : '';
-+  },
-+
-+  toQueryParams: function(separator) {
-+    var match = this.strip().match(/([^?#]*)(#.*)?$/);
-+    if (!match) return { };
-+
-+    return match[1].split(separator || '&').inject({ }, function(hash, pair) {
-+      if ((pair = pair.split('='))[0]) {
-+        var key = decodeURIComponent(pair.shift());
-+        var value = pair.length > 1 ? pair.join('=') : pair[0];
-+        if (value != undefined) value = decodeURIComponent(value);
-+
-+        if (key in hash) {
-+          if (!Object.isArray(hash[key])) hash[key] = [hash[key]];
-+          hash[key].push(value);
-+        }
-+        else hash[key] = value;
-+      }
-+      return hash;
-+    });
-+  },
-+
-+  toArray: function() {
-+    return this.split('');
-+  },
-+
-+  succ: function() {
-+    return this.slice(0, this.length - 1) +
-+      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
-+  },
-+
-+  times: function(count) {
-+    return count &lt; 1 ? '' : new Array(count + 1).join(this);
-+  },
-+
-+  camelize: function() {
-+    var parts = this.split('-'), len = parts.length;
-+    if (len == 1) return parts[0];
-+
-+    var camelized = this.charAt(0) == '-'
-+      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)
-+      : parts[0];
-+
-+    for (var i = 1; i &lt; len; i++)
-+      camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);
-+
-+    return camelized;
-+  },
-+
-+  capitalize: function() {
-+    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
-+  },
-+
-+  underscore: function() {
-+    return this.gsub(/::/, '/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{1}_#{2}').gsub(/-/,'_').toLowerCase();
-+  },
-+
-+  dasherize: function() {
-+    return this.gsub(/_/,'-');
-+  },
-+
-+  inspect: function(useDoubleQuotes) {
-+    var escapedString = this.gsub(/[\x00-\x1f\\]/, function(match) {
-+      var character = String.specialChar[match[0]];
-+      return character ? character : '\\u00' + match[0].charCodeAt().toPaddedString(2, 16);
-+    });
-+    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') + '"';
-+    return "'" + escapedString.replace(/'/g, '\\\'') + "'";
-+  },
-+
-+  toJSON: function() {
-+    return this.inspect(true);
-+  },
-+
-+  unfilterJSON: function(filter) {
-+    return this.sub(filter || Prototype.JSONFilter, '#{1}');
-+  },
-+
-+  isJSON: function() {
-+    var str = this;
-+    if (str.blank()) return false;
-+    str = this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');
-+    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);
-+  },
-+
-+  evalJSON: function(sanitize) {
-+    var json = this.unfilterJSON();
-+    try {
-+      if (!sanitize || json.isJSON()) return eval('(' + json + ')');
-+    } catch (e) { }
-+    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());
-+  },
-+
-+  include: function(pattern) {
-+    return this.indexOf(pattern) > -1;
-+  },
-+
-+  startsWith: function(pattern) {
-+    return this.indexOf(pattern) === 0;
-+  },
-+
-+  endsWith: function(pattern) {
-+    var d = this.length - pattern.length;
-+    return d >= 0 && this.lastIndexOf(pattern) === d;
-+  },
-+
-+  empty: function() {
-+    return this == '';
-+  },
-+
-+  blank: function() {
-+    return /^\s*$/.test(this);
-+  },
-+
-+  interpolate: function(object, pattern) {
-+    return new Template(this, pattern).evaluate(object);
-+  }
-+});
-+
-+if (Prototype.Browser.WebKit || Prototype.Browser.IE) Object.extend(String.prototype, {
-+  escapeHTML: function() {
-+    return this.replace(/&/g,'&amp;').replace(/&lt;/g,'&lt;').replace(/>/g,'&gt;');
-+  },
-+  unescapeHTML: function() {
-+    return this.replace(/&amp;/g,'&').replace(/&lt;/g,'&lt;').replace(/&gt;/g,'>');
-+  }
-+});
-+
-+String.prototype.gsub.prepareReplacement = function(replacement) {
-+  if (Object.isFunction(replacement)) return replacement;
-+  var template = new Template(replacement);
-+  return function(match) { return template.evaluate(match) };
-+};
-+
-+String.prototype.parseQuery = String.prototype.toQueryParams;
-+
-+Object.extend(String.prototype.escapeHTML, {
-+  div:  document.createElement('div'),
-+  text: document.createTextNode('')
-+});
-+
-+with (String.prototype.escapeHTML) div.appendChild(text);
-+
-+var Template = Class.create({
-+  initialize: function(template, pattern) {
-+    this.template = template.toString();
-+    this.pattern = pattern || Template.Pattern;
-+  },
-+
-+  evaluate: function(object) {
-+    if (Object.isFunction(object.toTemplateReplacements))
-+      object = object.toTemplateReplacements();
-+
-+    return this.template.gsub(this.pattern, function(match) {
-+      if (object == null) return '';
-+
-+      var before = match[1] || '';
-+      if (before == '\\') return match[2];
-+
-+      var ctx = object, expr = match[3];
-+      var pattern = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;
-+      match = pattern.exec(expr);
-+      if (match == null) return before;
-+
-+      while (match != null) {
-+        var comp = match[1].startsWith('[') ? match[2].gsub('\\\\]', ']') : match[1];
-+        ctx = ctx[comp];
-+        if (null == ctx || '' == match[3]) break;
-+        expr = expr.substring('[' == match[3] ? match[1].length : match[0].length);
-+        match = pattern.exec(expr);
-+      }
-+
-+      return before + String.interpret(ctx);
-+    });
-+  }
-+});
-+Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;
-+
-+var $break = { };
-+
-+var Enumerable = {
-+  each: function(iterator, context) {
-+    var index = 0;
-+    iterator = iterator.bind(context);
-+    try {
-+      this._each(function(value) {
-+        iterator(value, index++);
-+      });
-+    } catch (e) {
-+      if (e != $break) throw e;
-+    }
-+    return this;
-+  },
-+
-+  eachSlice: function(number, iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var index = -number, slices = [], array = this.toArray();
-+    while ((index += number) &lt; array.length)
-+      slices.push(array.slice(index, index+number));
-+    return slices.collect(iterator, context);
-+  },
-+
-+  all: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result = true;
-+    this.each(function(value, index) {
-+      result = result && !!iterator(value, index);
-+      if (!result) throw $break;
-+    });
-+    return result;
-+  },
-+
-+  any: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result = false;
-+    this.each(function(value, index) {
-+      if (result = !!iterator(value, index))
-+        throw $break;
-+    });
-+    return result;
-+  },
-+
-+  collect: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var results = [];
-+    this.each(function(value, index) {
-+      results.push(iterator(value, index));
-+    });
-+    return results;
-+  },
-+
-+  detect: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    var result;
-+    this.each(function(value, index) {
-+      if (iterator(value, index)) {
-+        result = value;
-+        throw $break;
-+      }
-+    });
-+    return result;
-+  },
-+
-+  findAll: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    var results = [];
-+    this.each(function(value, index) {
-+      if (iterator(value, index))
-+        results.push(value);
-+    });
-+    return results;
-+  },
-+
-+  grep: function(filter, iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var results = [];
-+
-+    if (Object.isString(filter))
-+      filter = new RegExp(filter);
-+
-+    this.each(function(value, index) {
-+      if (filter.match(value))
-+        results.push(iterator(value, index));
-+    });
-+    return results;
-+  },
-+
-+  include: function(object) {
-+    if (Object.isFunction(this.indexOf))
-+      if (this.indexOf(object) != -1) return true;
-+
-+    var found = false;
-+    this.each(function(value) {
-+      if (value == object) {
-+        found = true;
-+        throw $break;
-+      }
-+    });
-+    return found;
-+  },
-+
-+  inGroupsOf: function(number, fillWith) {
-+    fillWith = Object.isUndefined(fillWith) ? null : fillWith;
-+    return this.eachSlice(number, function(slice) {
-+      while(slice.length &lt; number) slice.push(fillWith);
-+      return slice;
-+    });
-+  },
-+
-+  inject: function(memo, iterator, context) {
-+    iterator = iterator.bind(context);
-+    this.each(function(value, index) {
-+      memo = iterator(memo, value, index);
-+    });
-+    return memo;
-+  },
-+
-+  invoke: function(method) {
-+    var args = $A(arguments).slice(1);
-+    return this.map(function(value) {
-+      return value[method].apply(value, args);
-+    });
-+  },
-+
-+  max: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result;
-+    this.each(function(value, index) {
-+      value = iterator(value, index);
-+      if (result == null || value >= result)
-+        result = value;
-+    });
-+    return result;
-+  },
-+
-+  min: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result;
-+    this.each(function(value, index) {
-+      value = iterator(value, index);
-+      if (result == null || value &lt; result)
-+        result = value;
-+    });
-+    return result;
-+  },
-+
-+  partition: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var trues = [], falses = [];
-+    this.each(function(value, index) {
-+      (iterator(value, index) ?
-+        trues : falses).push(value);
-+    });
-+    return [trues, falses];
-+  },
-+
-+  pluck: function(property) {
-+    var results = [];
-+    this.each(function(value) {
-+      results.push(value[property]);
-+    });
-+    return results;
-+  },
-+
-+  reject: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    var results = [];
-+    this.each(function(value, index) {
-+      if (!iterator(value, index))
-+        results.push(value);
-+    });
-+    return results;
-+  },
-+
-+  sortBy: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    return this.map(function(value, index) {
-+      return {value: value, criteria: iterator(value, index)};
-+    }).sort(function(left, right) {
-+      var a = left.criteria, b = right.criteria;
-+      return a &lt; b ? -1 : a > b ? 1 : 0;
-+    }).pluck('value');
-+  },
-+
-+  toArray: function() {
-+    return this.map();
-+  },
-+
-+  zip: function() {
-+    var iterator = Prototype.K, args = $A(arguments);
-+    if (Object.isFunction(args.last()))
-+      iterator = args.pop();
-+
-+    var collections = [this].concat(args).map($A);
-+    return this.map(function(value, index) {
-+      return iterator(collections.pluck(index));
-+    });
-+  },
-+
-+  size: function() {
-+    return this.toArray().length;
-+  },
-+
-+  inspect: function() {
-+    return '#&lt;Enumerable:' + this.toArray().inspect() + '>';
-+  }
-+};
-+
-+Object.extend(Enumerable, {
-+  map:     Enumerable.collect,
-+  find:    Enumerable.detect,
-+  select:  Enumerable.findAll,
-+  filter:  Enumerable.findAll,
-+  member:  Enumerable.include,
-+  entries: Enumerable.toArray,
-+  every:   Enumerable.all,
-+  some:    Enumerable.any
-+});
-+function $A(iterable) {
-+  if (!iterable) return [];
-+  if (iterable.toArray) return iterable.toArray();
-+  var length = iterable.length || 0, results = new Array(length);
-+  while (length--) results[length] = iterable[length];
-+  return results;
-+}
-+
-+if (Prototype.Browser.WebKit) {
-+  $A = function(iterable) {
-+    if (!iterable) return [];
-+    if (!(Object.isFunction(iterable) && iterable == '[object NodeList]') &&
-+        iterable.toArray) return iterable.toArray();
-+    var length = iterable.length || 0, results = new Array(length);
-+    while (length--) results[length] = iterable[length];
-+    return results;
-+  };
-+}
-+
-+Array.from = $A;
-+
-+Object.extend(Array.prototype, Enumerable);
-+
-+if (!Array.prototype._reverse) Array.prototype._reverse = Array.prototype.reverse;
-+
-+Object.extend(Array.prototype, {
-+  _each: function(iterator) {
-+    for (var i = 0, length = this.length; i &lt; length; i++)
-+      iterator(this[i]);
-+  },
-+
-+  clear: function() {
-+    this.length = 0;
-+    return this;
-+  },
-+
-+  first: function() {
-+    return this[0];
-+  },
-+
-+  last: function() {
-+    return this[this.length - 1];
-+  },
-+
-+  compact: function() {
-+    return this.select(function(value) {
-+      return value != null;
-+    });
-+  },
-+
-+  flatten: function() {
-+    return this.inject([], function(array, value) {
-+      return array.concat(Object.isArray(value) ?
-+        value.flatten() : [value]);
-+    });
-+  },
-+
-+  without: function() {
-+    var values = $A(arguments);
-+    return this.select(function(value) {
-+      return !values.include(value);
-+    });
-+  },
-+
-+  reverse: function(inline) {
-+    return (inline !== false ? this : this.toArray())._reverse();
-+  },
-+
-+  reduce: function() {
-+    return this.length > 1 ? this : this[0];
-+  },
-+
-+  uniq: function(sorted) {
-+    return this.inject([], function(array, value, index) {
-+      if (0 == index || (sorted ? array.last() != value : !array.include(value)))
-+        array.push(value);
-+      return array;
-+    });
-+  },
-+
-+  intersect: function(array) {
-+    return this.uniq().findAll(function(item) {
-+      return array.detect(function(value) { return item === value });
-+    });
-+  },
-+
-+  clone: function() {
-+    return [].concat(this);
-+  },
-+
-+  size: function() {
-+    return this.length;
-+  },
-+
-+  inspect: function() {
-+    return '[' + this.map(Object.inspect).join(', ') + ']';
-+  },
-+
-+  toJSON: function() {
-+    var results = [];
-+    this.each(function(object) {
-+      var value = Object.toJSON(object);
-+      if (!Object.isUndefined(value)) results.push(value);
-+    });
-+    return '[' + results.join(', ') + ']';
-+  }
-+});
-+
-+// use native browser JS 1.6 implementation if available
-+if (Object.isFunction(Array.prototype.forEach))
-+  Array.prototype._each = Array.prototype.forEach;
-+
-+if (!Array.prototype.indexOf) Array.prototype.indexOf = function(item, i) {
-+  i || (i = 0);
-+  var length = this.length;
-+  if (i &lt; 0) i = length + i;
-+  for (; i &lt; length; i++)
-+    if (this[i] === item) return i;
-+  return -1;
-+};
-+
-+if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf = function(item, i) {
-+  i = isNaN(i) ? this.length : (i &lt; 0 ? this.length + i : i) + 1;
-+  var n = this.slice(0, i).reverse().indexOf(item);
-+  return (n &lt; 0) ? n : i - n - 1;
-+};
-+
-+Array.prototype.toArray = Array.prototype.clone;
-+
-+function $w(string) {
-+  if (!Object.isString(string)) return [];
-+  string = string.strip();
-+  return string ? string.split(/\s+/) : [];
-+}
-+
-+if (Prototype.Browser.Opera){
-+  Array.prototype.concat = function() {
-+    var array = [];
-+    for (var i = 0, length = this.length; i &lt; length; i++) array.push(this[i]);
-+    for (var i = 0, length = arguments.length; i &lt; length; i++) {
-+      if (Object.isArray(arguments[i])) {
-+        for (var j = 0, arrayLength = arguments[i].length; j &lt; arrayLength; j++)
-+          array.push(arguments[i][j]);
-+      } else {
-+        array.push(arguments[i]);
-+      }
-+    }
-+    return array;
-+  };
-+}
-+Object.extend(Number.prototype, {
-+  toColorPart: function() {
-+    return this.toPaddedString(2, 16);
-+  },
-+
-+  succ: function() {
-+    return this + 1;
-+  },
-+
-+  times: function(iterator) {
-+    $R(0, this, true).each(iterator);
-+    return this;
-+  },
-+
-+  toPaddedString: function(length, radix) {
-+    var string = this.toString(radix || 10);
-+    return '0'.times(length - string.length) + string;
-+  },
-+
-+  toJSON: function() {
-+    return isFinite(this) ? this.toString() : 'null';
-+  }
-+});
-+
-+$w('abs round ceil floor').each(function(method){
-+  Number.prototype[method] = Math[method].methodize();
-+});
-+function $H(object) {
-+  return new Hash(object);
-+};
-+
-+var Hash = Class.create(Enumerable, (function() {
-+
-+  function toQueryPair(key, value) {
-+    if (Object.isUndefined(value)) return key;
-+    return key + '=' + encodeURIComponent(String.interpret(value));
-+  }
-+
-+  return {
-+    initialize: function(object) {
-+      this._object = Object.isHash(object) ? object.toObject() : Object.clone(object);
-+    },
-+
-+    _each: function(iterator) {
-+      for (var key in this._object) {
-+        var value = this._object[key], pair = [key, value];
-+        pair.key = key;
-+        pair.value = value;
-+        iterator(pair);
-+      }
-+    },
-+
-+    set: function(key, value) {
-+      return this._object[key] = value;
-+    },
-+
-+    get: function(key) {
-+      return this._object[key];
-+    },
-+
-+    unset: function(key) {
-+      var value = this._object[key];
-+      delete this._object[key];
-+      return value;
-+    },
-+
-+    toObject: function() {
-+      return Object.clone(this._object);
-+    },
-+
-+    keys: function() {
-+      return this.pluck('key');
-+    },
-+
-+    values: function() {
-+      return this.pluck('value');
-+    },
-+
-+    index: function(value) {
-+      var match = this.detect(function(pair) {
-+        return pair.value === value;
-+      });
-+      return match && match.key;
-+    },
-+
-+    merge: function(object) {
-+      return this.clone().update(object);
-+    },
-+
-+    update: function(object) {
-+      return new Hash(object).inject(this, function(result, pair) {
-+        result.set(pair.key, pair.value);
-+        return result;
-+      });
-+    },
-+
-+    toQueryString: function() {
-+      return this.map(function(pair) {
-+        var key = encodeURIComponent(pair.key), values = pair.value;
-+
-+        if (values && typeof values == 'object') {
-+          if (Object.isArray(values))
-+            return values.map(toQueryPair.curry(key)).join('&');
-+        }
-+        return toQueryPair(key, values);
-+      }).join('&');
-+    },
-+
-+    inspect: function() {
-+      return '#&lt;Hash:{' + this.map(function(pair) {
-+        return pair.map(Object.inspect).join(': ');
-+      }).join(', ') + '}>';
-+    },
-+
-+    toJSON: function() {
-+      return Object.toJSON(this.toObject());
-+    },
-+
-+    clone: function() {
-+      return new Hash(this);
-+    }
-+  }
-+})());
-+
-+Hash.prototype.toTemplateReplacements = Hash.prototype.toObject;
-+Hash.from = $H;
-+var ObjectRange = Class.create(Enumerable, {
-+  initialize: function(start, end, exclusive) {
-+    this.start = start;
-+    this.end = end;
-+    this.exclusive = exclusive;
-+  },
-+
-+  _each: function(iterator) {
-+    var value = this.start;
-+    while (this.include(value)) {
-+      iterator(value);
-+      value = value.succ();
-+    }
-+  },
-+
-+  include: function(value) {
-+    if (value &lt; this.start)
-+      return false;
-+    if (this.exclusive)
-+      return value &lt; this.end;
-+    return value &lt;= this.end;
-+  }
-+});
-+
-+var $R = function(start, end, exclusive) {
-+  return new ObjectRange(start, end, exclusive);
-+};
-+
-+var Ajax = {
-+  getTransport: function() {
-+    return Try.these(
-+      function() {return new XMLHttpRequest()},
-+      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
-+      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
-+    ) || false;
-+  },
-+
-+  activeRequestCount: 0
-+};
-+
-+Ajax.Responders = {
-+  responders: [],
-+
-+  _each: function(iterator) {
-+    this.responders._each(iterator);
-+  },
-+
-+  register: function(responder) {
-+    if (!this.include(responder))
-+      this.responders.push(responder);
-+  },
-+
-+  unregister: function(responder) {
-+    this.responders = this.responders.without(responder);
-+  },
-+
-+  dispatch: function(callback, request, transport, json) {
-+    this.each(function(responder) {
-+      if (Object.isFunction(responder[callback])) {
-+        try {
-+          responder[callback].apply(responder, [request, transport, json]);
-+        } catch (e) { }
-+      }
-+    });
-+  }
-+};
-+
-+Object.extend(Ajax.Responders, Enumerable);
-+
-+Ajax.Responders.register({
-+  onCreate:   function() { Ajax.activeRequestCount++ },
-+  onComplete: function() { Ajax.activeRequestCount-- }
-+});
-+
-+Ajax.Base = Class.create({
-+  initialize: function(options) {
-+    this.options = {
-+      method:       'post',
-+      asynchronous: true,
-+      contentType:  'application/x-www-form-urlencoded',
-+      encoding:     'UTF-8',
-+      parameters:   '',
-+      evalJSON:     true,
-+      evalJS:       true
-+    };
-+    Object.extend(this.options, options || { });
-+
-+    this.options.method = this.options.method.toLowerCase();
-+
-+    if (Object.isString(this.options.parameters))
-+      this.options.parameters = this.options.parameters.toQueryParams();
-+    else if (Object.isHash(this.options.parameters))
-+      this.options.parameters = this.options.parameters.toObject();
-+  }
-+});
-+
-+Ajax.Request = Class.create(Ajax.Base, {
-+  _complete: false,
-+
-+  initialize: function($super, url, options) {
-+    $super(options);
-+    this.transport = Ajax.getTransport();
-+    this.request(url);
-+  },
-+
-+  request: function(url) {
-+    this.url = url;
-+    this.method = this.options.method;
-+    var params = Object.clone(this.options.parameters);
-+
-+    if (!['get', 'post'].include(this.method)) {
-+      // simulate other verbs over post
-+      params['_method'] = this.method;
-+      this.method = 'post';
-+    }
-+
-+    this.parameters = params;
-+
-+    if (params = Object.toQueryString(params)) {
-+      // when GET, append parameters to URL
-+      if (this.method == 'get')
-+        this.url += (this.url.include('?') ? '&' : '?') + params;
-+      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))
-+        params += '&_=';
-+    }
-+
-+    try {
-+      var response = new Ajax.Response(this);
-+      if (this.options.onCreate) this.options.onCreate(response);
-+      Ajax.Responders.dispatch('onCreate', this, response);
-+
-+      this.transport.open(this.method.toUpperCase(), this.url,
-+        this.options.asynchronous);
-+
-+      if (this.options.asynchronous) this.respondToReadyState.bind(this).defer(1);
-+
-+      this.transport.onreadystatechange = this.onStateChange.bind(this);
-+      this.setRequestHeaders();
-+
-+      this.body = this.method == 'post' ? (this.options.postBody || params) : null;
-+      this.transport.send(this.body);
-+
-+      /* Force Firefox to handle ready state 4 for synchronous requests */
-+      if (!this.options.asynchronous && this.transport.overrideMimeType)
-+        this.onStateChange();
-+
-+    }
-+    catch (e) {
-+      this.dispatchException(e);
-+    }
-+  },
-+
-+  onStateChange: function() {
-+    var readyState = this.transport.readyState;
-+    if (readyState > 1 && !((readyState == 4) && this._complete))
-+      this.respondToReadyState(this.transport.readyState);
-+  },
-+
-+  setRequestHeaders: function() {
-+    var headers = {
-+      'X-Requested-With': 'XMLHttpRequest',
-+      'X-Prototype-Version': Prototype.Version,
-+      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
-+    };
-+
-+    if (this.method == 'post') {
-+      headers['Content-type'] = this.options.contentType +
-+        (this.options.encoding ? '; charset=' + this.options.encoding : '');
-+
-+      /* Force "Connection: close" for older Mozilla browsers to work
-+       * around a bug where XMLHttpRequest sends an incorrect
-+       * Content-length header. See Mozilla Bugzilla #246651.
-+       */
-+      if (this.transport.overrideMimeType &&
-+          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] &lt; 2005)
-+            headers['Connection'] = 'close';
-+    }
-+
-+    // user-defined headers
-+    if (typeof this.options.requestHeaders == 'object') {
-+      var extras = this.options.requestHeaders;
-+
-+      if (Object.isFunction(extras.push))
-+        for (var i = 0, length = extras.length; i &lt; length; i += 2)
-+          headers[extras[i]] = extras[i+1];
-+      else
-+        $H(extras).each(function(pair) { headers[pair.key] = pair.value });
-+    }
-+
-+    for (var name in headers)
-+      this.transport.setRequestHeader(name, headers[name]);
-+  },
-+
-+  success: function() {
-+    var status = this.getStatus();
-+    return !status || (status >= 200 && status &lt; 300);
-+  },
-+
-+  getStatus: function() {
-+    try {
-+      return this.transport.status || 0;
-+    } catch (e) { return 0 }
-+  },
-+
-+  respondToReadyState: function(readyState) {
-+    var state = Ajax.Request.Events[readyState], response = new Ajax.Response(this);
-+
-+    if (state == 'Complete') {
-+      try {
-+        this._complete = true;
-+        (this.options['on' + response.status]
-+         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
-+         || Prototype.emptyFunction)(response, response.headerJSON);
-+      } catch (e) {
-+        this.dispatchException(e);
-+      }
-+
-+      var contentType = response.getHeader('Content-type');
-+      if (this.options.evalJS == 'force'
-+          || (this.options.evalJS && this.isSameOrigin() && contentType
-+          && contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i)))
-+        this.evalResponse();
-+    }
-+
-+    try {
-+      (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);
-+      Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);
-+    } catch (e) {
-+      this.dispatchException(e);
-+    }
-+
-+    if (state == 'Complete') {
-+      // avoid memory leak in MSIE: clean up
-+      this.transport.onreadystatechange = Prototype.emptyFunction;
-+    }
-+  },
-+
-+  isSameOrigin: function() {
-+    var m = this.url.match(/^\s*https?:\/\/[^\/]*/);
-+    return !m || (m[0] == '#{protocol}//#{domain}#{port}'.interpolate({
-+      protocol: location.protocol,
-+      domain: document.domain,
-+      port: location.port ? ':' + location.port : ''
-+    }));
-+  },
-+
-+  getHeader: function(name) {
-+    try {
-+      return this.transport.getResponseHeader(name) || null;
-+    } catch (e) { return null }
-+  },
-+
-+  evalResponse: function() {
-+    try {
-+      return eval((this.transport.responseText || '').unfilterJSON());
-+    } catch (e) {
-+      this.dispatchException(e);
-+    }
-+  },
-+
-+  dispatchException: function(exception) {
-+    (this.options.onException || Prototype.emptyFunction)(this, exception);
-+    Ajax.Responders.dispatch('onException', this, exception);
-+  }
-+});
-+
-+Ajax.Request.Events =
-+  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];
-+
-+Ajax.Response = Class.create({
-+  initialize: function(request){
-+    this.request = request;
-+    var transport  = this.transport  = request.transport,
-+        readyState = this.readyState = transport.readyState;
-+
-+    if((readyState > 2 && !Prototype.Browser.IE) || readyState == 4) {
-+      this.status       = this.getStatus();
-+      this.statusText   = this.getStatusText();
-+      this.responseText = String.interpret(transport.responseText);
-+      this.headerJSON   = this._getHeaderJSON();
-+    }
-+
-+    if(readyState == 4) {
-+      var xml = transport.responseXML;
-+      this.responseXML  = Object.isUndefined(xml) ? null : xml;
-+      this.responseJSON = this._getResponseJSON();
-+    }
-+  },
-+
-+  status:      0,
-+  statusText: '',
-+
-+  getStatus: Ajax.Request.prototype.getStatus,
-+
-+  getStatusText: function() {
-+    try {
-+      return this.transport.statusText || '';
-+    } catch (e) { return '' }
-+  },
-+
-+  getHeader: Ajax.Request.prototype.getHeader,
-+
-+  getAllHeaders: function() {
-+    try {
-+      return this.getAllResponseHeaders();
-+    } catch (e) { return null }
-+  },
-+
-+  getResponseHeader: function(name) {
-+    return this.transport.getResponseHeader(name);
-+  },
-+
-+  getAllResponseHeaders: function() {
-+    return this.transport.getAllResponseHeaders();
-+  },
-+
-+  _getHeaderJSON: function() {
-+    var json = this.getHeader('X-JSON');
-+    if (!json) return null;
-+    json = decodeURIComponent(escape(json));
-+    try {
-+      return json.evalJSON(this.request.options.sanitizeJSON ||
-+        !this.request.isSameOrigin());
-+    } catch (e) {
-+      this.request.dispatchException(e);
-+    }
-+  },
-+
-+  _getResponseJSON: function() {
-+    var options = this.request.options;
-+    if (!options.evalJSON || (options.evalJSON != 'force' &&
-+      !(this.getHeader('Content-type') || '').include('application/json')) ||
-+        this.responseText.blank())
-+          return null;
-+    try {
-+      return this.responseText.evalJSON(options.sanitizeJSON ||
-+        !this.request.isSameOrigin());
-+    } catch (e) {
-+      this.request.dispatchException(e);
-+    }
-+  }
-+});
-+
-+Ajax.Updater = Class.create(Ajax.Request, {
-+  initialize: function($super, container, url, options) {
-+    this.container = {
-+      success: (container.success || container),
-+      failure: (container.failure || (container.success ? null : container))
-+    };
-+
-+    options = Object.clone(options);
-+    var onComplete = options.onComplete;
-+    options.onComplete = (function(response, json) {
-+      this.updateContent(response.responseText);
-+      if (Object.isFunction(onComplete)) onComplete(response, json);
-+    }).bind(this);
-+
-+    $super(url, options);
-+  },
-+
-+  updateContent: function(responseText) {
-+    var receiver = this.container[this.success() ? 'success' : 'failure'],
-+        options = this.options;
-+
-+    if (!options.evalScripts) responseText = responseText.stripScripts();
-+
-+    if (receiver = $(receiver)) {
-+      if (options.insertion) {
-+        if (Object.isString(options.insertion)) {
-+          var insertion = { }; insertion[options.insertion] = responseText;
-+          receiver.insert(insertion);
-+        }
-+        else options.insertion(receiver, responseText);
-+      }
-+      else receiver.update(responseText);
-+    }
-+  }
-+});
-+
-+Ajax.PeriodicalUpdater = Class.create(Ajax.Base, {
-+  initialize: function($super, container, url, options) {
-+    $super(options);
-+    this.onComplete = this.options.onComplete;
-+
-+    this.frequency = (this.options.frequency || 2);
-+    this.decay = (this.options.decay || 1);
-+
-+    this.updater = { };
-+    this.container = container;
-+    this.url = url;
-+
-+    this.start();
-+  },
-+
-+  start: function() {
-+    this.options.onComplete = this.updateComplete.bind(this);
-+    this.onTimerEvent();
-+  },
-+
-+  stop: function() {
-+    this.updater.options.onComplete = undefined;
-+    clearTimeout(this.timer);
-+    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
-+  },
-+
-+  updateComplete: function(response) {
-+    if (this.options.decay) {
-+      this.decay = (response.responseText == this.lastText ?
-+        this.decay * this.options.decay : 1);
-+
-+      this.lastText = response.responseText;
-+    }
-+    this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency);
-+  },
-+
-+  onTimerEvent: function() {
-+    this.updater = new Ajax.Updater(this.container, this.url, this.options);
-+  }
-+});
-+function $(element) {
-+  if (arguments.length > 1) {
-+    for (var i = 0, elements = [], length = arguments.length; i &lt; length; i++)
-+      elements.push($(arguments[i]));
-+    return elements;
-+  }
-+  if (Object.isString(element))
-+    element = document.getElementById(element);
-+  return Element.extend(element);
-+}
-+
-+if (Prototype.BrowserFeatures.XPath) {
-+  document._getElementsByXPath = function(expression, parentElement) {
-+    var results = [];
-+    var query = document.evaluate(expression, $(parentElement) || document,
-+      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
-+    for (var i = 0, length = query.snapshotLength; i &lt; length; i++)
-+      results.push(Element.extend(query.snapshotItem(i)));
-+    return results;
-+  };
-+}
-+
-+/*--------------------------------------------------------------------------*/
-+
-+if (!window.Node) var Node = { };
-+
-+if (!Node.ELEMENT_NODE) {
-+  // DOM level 2 ECMAScript Language Binding
-+  Object.extend(Node, {
-+    ELEMENT_NODE: 1,
-+    ATTRIBUTE_NODE: 2,
-+    TEXT_NODE: 3,
-+    CDATA_SECTION_NODE: 4,
-+    ENTITY_REFERENCE_NODE: 5,
-+    ENTITY_NODE: 6,
-+    PROCESSING_INSTRUCTION_NODE: 7,
-+    COMMENT_NODE: 8,
-+    DOCUMENT_NODE: 9,
-+    DOCUMENT_TYPE_NODE: 10,
-+    DOCUMENT_FRAGMENT_NODE: 11,
-+    NOTATION_NODE: 12
-+  });
-+}
-+
-+(function() {
-+  var element = this.Element;
-+  this.Element = function(tagName, attributes) {
-+    attributes = attributes || { };
-+    tagName = tagName.toLowerCase();
-+    var cache = Element.cache;
-+    if (Prototype.Browser.IE && attributes.name) {
-+      tagName = '&lt;' + tagName + ' name="' + attributes.name + '">';
-+      delete attributes.name;
-+      return Element.writeAttribute(document.createElement(tagName), attributes);
-+    }
-+    if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));
-+    return Element.writeAttribute(cache[tagName].cloneNode(false), attributes);
-+  };
-+  Object.extend(this.Element, element || { });
-+}).call(window);
-+
-+Element.cache = { };
-+
-+Element.Methods = {
-+  visible: function(element) {
-+    return $(element).style.display != 'none';
-+  },
-+
-+  toggle: function(element) {
-+    element = $(element);
-+    Element[Element.visible(element) ? 'hide' : 'show'](element);
-+    return element;
-+  },
-+
-+  hide: function(element) {
-+    $(element).style.display = 'none';
-+    return element;
-+  },
-+
-+  show: function(element) {
-+    $(element).style.display = '';
-+    return element;
-+  },
-+
-+  remove: function(element) {
-+    element = $(element);
-+    element.parentNode.removeChild(element);
-+    return element;
-+  },
-+
-+  update: function(element, content) {
-+    element = $(element);
-+    if (content && content.toElement) content = content.toElement();
-+    if (Object.isElement(content)) return element.update().insert(content);
-+    content = Object.toHTML(content);
-+    element.innerHTML = content.stripScripts();
-+    content.evalScripts.bind(content).defer();
-+    return element;
-+  },
-+
-+  replace: function(element, content) {
-+    element = $(element);
-+    if (content && content.toElement) content = content.toElement();
-+    else if (!Object.isElement(content)) {
-+      content = Object.toHTML(content);
-+      var range = element.ownerDocument.createRange();
-+      range.selectNode(element);
-+      content.evalScripts.bind(content).defer();
-+      content = range.createContextualFragment(content.stripScripts());
-+    }
-+    element.parentNode.replaceChild(content, element);
-+    return element;
-+  },
-+
-+  insert: function(element, insertions) {
-+    element = $(element);
-+
-+    if (Object.isString(insertions) || Object.isNumber(insertions) ||
-+        Object.isElement(insertions) || (insertions && (insertions.toElement || insertions.toHTML)))
-+          insertions = {bottom:insertions};
-+
-+    var content, insert, tagName, childNodes;
-+
-+    for (var position in insertions) {
-+      content  = insertions[position];
-+      position = position.toLowerCase();
-+      insert = Element._insertionTranslations[position];
-+
-+      if (content && content.toElement) content = content.toElement();
-+      if (Object.isElement(content)) {
-+        insert(element, content);
-+        continue;
-+      }
-+
-+      content = Object.toHTML(content);
-+
-+      tagName = ((position == 'before' || position == 'after')
-+        ? element.parentNode : element).tagName.toUpperCase();
-+
-+      childNodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
-+
-+      if (position == 'top' || position == 'after') childNodes.reverse();
-+      childNodes.each(insert.curry(element));
-+
-+      content.evalScripts.bind(content).defer();
-+    }
-+
-+    return element;
-+  },
-+
-+  wrap: function(element, wrapper, attributes) {
-+    element = $(element);
-+    if (Object.isElement(wrapper))
-+      $(wrapper).writeAttribute(attributes || { });
-+    else if (Object.isString(wrapper)) wrapper = new Element(wrapper, attributes);
-+    else wrapper = new Element('div', wrapper);
-+    if (element.parentNode)
-+      element.parentNode.replaceChild(wrapper, element);
-+    wrapper.appendChild(element);
-+    return wrapper;
-+  },
-+
-+  inspect: function(element) {
-+    element = $(element);
-+    var result = '&lt;' + element.tagName.toLowerCase();
-+    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
-+      var property = pair.first(), attribute = pair.last();
-+      var value = (element[property] || '').toString();
-+      if (value) result += ' ' + attribute + '=' + value.inspect(true);
-+    });
-+    return result + '>';
-+  },
-+
-+  recursivelyCollect: function(element, property) {
-+    element = $(element);
-+    var elements = [];
-+    while (element = element[property])
-+      if (element.nodeType == 1)
-+        elements.push(Element.extend(element));
-+    return elements;
-+  },
-+
-+  ancestors: function(element) {
-+    return $(element).recursivelyCollect('parentNode');
-+  },
-+
-+  descendants: function(element) {
-+    return $(element).select("*");
-+  },
-+
-+  firstDescendant: function(element) {
-+    element = $(element).firstChild;
-+    while (element && element.nodeType != 1) element = element.nextSibling;
-+    return $(element);
-+  },
-+
-+  immediateDescendants: function(element) {
-+    if (!(element = $(element).firstChild)) return [];
-+    while (element && element.nodeType != 1) element = element.nextSibling;
-+    if (element) return [element].concat($(element).nextSiblings());
-+    return [];
-+  },
-+
-+  previousSiblings: function(element) {
-+    return $(element).recursivelyCollect('previousSibling');
-+  },
-+
-+  nextSiblings: function(element) {
-+    return $(element).recursivelyCollect('nextSibling');
-+  },
-+
-+  siblings: function(element) {
-+    element = $(element);
-+    return element.previousSiblings().reverse().concat(element.nextSiblings());
-+  },
-+
-+  match: function(element, selector) {
-+    if (Object.isString(selector))
-+      selector = new Selector(selector);
-+    return selector.match($(element));
-+  },
-+
-+  up: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return $(element.parentNode);
-+    var ancestors = element.ancestors();
-+    return Object.isNumber(expression) ? ancestors[expression] :
-+      Selector.findElement(ancestors, expression, index);
-+  },
-+
-+  down: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return element.firstDescendant();
-+    return Object.isNumber(expression) ? element.descendants()[expression] :
-+      element.select(expression)[index || 0];
-+  },
-+
-+  previous: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return $(Selector.handlers.previousElementSibling(element));
-+    var previousSiblings = element.previousSiblings();
-+    return Object.isNumber(expression) ? previousSiblings[expression] :
-+      Selector.findElement(previousSiblings, expression, index);
-+  },
-+
-+  next: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return $(Selector.handlers.nextElementSibling(element));
-+    var nextSiblings = element.nextSiblings();
-+    return Object.isNumber(expression) ? nextSiblings[expression] :
-+      Selector.findElement(nextSiblings, expression, index);
-+  },
-+
-+  select: function() {
-+    var args = $A(arguments), element = $(args.shift());
-+    return Selector.findChildElements(element, args);
-+  },
-+
-+  adjacent: function() {
-+    var args = $A(arguments), element = $(args.shift());
-+    return Selector.findChildElements(element.parentNode, args).without(element);
-+  },
-+
-+  identify: function(element) {
-+    element = $(element);
-+    var id = element.readAttribute('id'), self = arguments.callee;
-+    if (id) return id;
-+    do { id = 'anonymous_element_' + self.counter++ } while ($(id));
-+    element.writeAttribute('id', id);
-+    return id;
-+  },
-+
-+  readAttribute: function(element, name) {
-+    element = $(element);
-+    if (Prototype.Browser.IE) {
-+      var t = Element._attributeTranslations.read;
-+      if (t.values[name]) return t.values[name](element, name);
-+      if (t.names[name]) name = t.names[name];
-+      if (name.include(':')) {
-+        return (!element.attributes || !element.attributes[name]) ? null :
-+         element.attributes[name].value;
-+      }
-+    }
-+    return element.getAttribute(name);
-+  },
-+
-+  writeAttribute: function(element, name, value) {
-+    element = $(element);
-+    var attributes = { }, t = Element._attributeTranslations.write;
-+
-+    if (typeof name == 'object') attributes = name;
-+    else attributes[name] = Object.isUndefined(value) ? true : value;
-+
-+    for (var attr in attributes) {
-+      name = t.names[attr] || attr;
-+      value = attributes[attr];
-+      if (t.values[attr]) name = t.values[attr](element, value);
-+      if (value === false || value === null)
-+        element.removeAttribute(name);
-+      else if (value === true)
-+        element.setAttribute(name, name);
-+      else element.setAttribute(name, value);
-+    }
-+    return element;
-+  },
-+
-+  getHeight: function(element) {
-+    return $(element).getDimensions().height;
-+  },
-+
-+  getWidth: function(element) {
-+    return $(element).getDimensions().width;
-+  },
-+
-+  classNames: function(element) {
-+    return new Element.ClassNames(element);
-+  },
-+
-+  hasClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    var elementClassName = element.className;
-+    return (elementClassName.length > 0 && (elementClassName == className ||
-+      new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
-+  },
-+
-+  addClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    if (!element.hasClassName(className))
-+      element.className += (element.className ? ' ' : '') + className;
-+    return element;
-+  },
-+
-+  removeClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    element.className = element.className.replace(
-+      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();
-+    return element;
-+  },
-+
-+  toggleClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    return element[element.hasClassName(className) ?
-+      'removeClassName' : 'addClassName'](className);
-+  },
-+
-+  // removes whitespace-only text node children
-+  cleanWhitespace: function(element) {
-+    element = $(element);
-+    var node = element.firstChild;
-+    while (node) {
-+      var nextNode = node.nextSibling;
-+      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
-+        element.removeChild(node);
-+      node = nextNode;
-+    }
-+    return element;
-+  },
-+
-+  empty: function(element) {
-+    return $(element).innerHTML.blank();
-+  },
-+
-+  descendantOf: function(element, ancestor) {
-+    element = $(element), ancestor = $(ancestor);
-+    var originalAncestor = ancestor;
-+
-+    if (element.compareDocumentPosition)
-+      return (element.compareDocumentPosition(ancestor) & 8) === 8;
-+
-+    if (element.sourceIndex && !Prototype.Browser.Opera) {
-+      var e = element.sourceIndex, a = ancestor.sourceIndex,
-+       nextAncestor = ancestor.nextSibling;
-+      if (!nextAncestor) {
-+        do { ancestor = ancestor.parentNode; }
-+        while (!(nextAncestor = ancestor.nextSibling) && ancestor.parentNode);
-+      }
-+      if (nextAncestor && nextAncestor.sourceIndex)
-+       return (e > a && e &lt; nextAncestor.sourceIndex);
-+    }
-+
-+    while (element = element.parentNode)
-+      if (element == originalAncestor) return true;
-+    return false;
-+  },
-+
-+  scrollTo: function(element) {
-+    element = $(element);
-+    var pos = element.cumulativeOffset();
-+    window.scrollTo(pos[0], pos[1]);
-+    return element;
-+  },
-+
-+  getStyle: function(element, style) {
-+    element = $(element);
-+    style = style == 'float' ? 'cssFloat' : style.camelize();
-+    var value = element.style[style];
-+    if (!value) {
-+      var css = document.defaultView.getComputedStyle(element, null);
-+      value = css ? css[style] : null;
-+    }
-+    if (style == 'opacity') return value ? parseFloat(value) : 1.0;
-+    return value == 'auto' ? null : value;
-+  },
-+
-+  getOpacity: function(element) {
-+    return $(element).getStyle('opacity');
-+  },
-+
-+  setStyle: function(element, styles) {
-+    element = $(element);
-+    var elementStyle = element.style, match;
-+    if (Object.isString(styles)) {
-+      element.style.cssText += ';' + styles;
-+      return styles.include('opacity') ?
-+        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : element;
-+    }
-+    for (var property in styles)
-+      if (property == 'opacity') element.setOpacity(styles[property]);
-+      else
-+        elementStyle[(property == 'float' || property == 'cssFloat') ?
-+          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :
-+            property] = styles[property];
-+
-+    return element;
-+  },
-+
-+  setOpacity: function(element, value) {
-+    element = $(element);
-+    element.style.opacity = (value == 1 || value === '') ? '' :
-+      (value &lt; 0.00001) ? 0 : value;
-+    return element;
-+  },
-+
-+  getDimensions: function(element) {
-+    element = $(element);
-+    var display = $(element).getStyle('display');
-+    if (display != 'none' && display != null) // Safari bug
-+      return {width: element.offsetWidth, height: element.offsetHeight};
-+
-+    // All *Width and *Height properties give 0 on elements with display none,
-+    // so enable the element temporarily
-+    var els = element.style;
-+    var originalVisibility = els.visibility;
-+    var originalPosition = els.position;
-+    var originalDisplay = els.display;
-+    els.visibility = 'hidden';
-+    els.position = 'absolute';
-+    els.display = 'block';
-+    var originalWidth = element.clientWidth;
-+    var originalHeight = element.clientHeight;
-+    els.display = originalDisplay;
-+    els.position = originalPosition;
-+    els.visibility = originalVisibility;
-+    return {width: originalWidth, height: originalHeight};
-+  },
-+
-+  makePositioned: function(element) {
-+    element = $(element);
-+    var pos = Element.getStyle(element, 'position');
-+    if (pos == 'static' || !pos) {
-+      element._madePositioned = true;
-+      element.style.position = 'relative';
-+      // Opera returns the offset relative to the positioning context, when an
-+      // element is position relative but top and left have not been defined
-+      if (window.opera) {
-+        element.style.top = 0;
-+        element.style.left = 0;
-+      }
-+    }
-+    return element;
-+  },
-+
-+  undoPositioned: function(element) {
-+    element = $(element);
-+    if (element._madePositioned) {
-+      element._madePositioned = undefined;
-+      element.style.position =
-+        element.style.top =
-+        element.style.left =
-+        element.style.bottom =
-+        element.style.right = '';
-+    }
-+    return element;
-+  },
-+
-+  makeClipping: function(element) {
-+    element = $(element);
-+    if (element._overflow) return element;
-+    element._overflow = Element.getStyle(element, 'overflow') || 'auto';
-+    if (element._overflow !== 'hidden')
-+      element.style.overflow = 'hidden';
-+    return element;
-+  },
-+
-+  undoClipping: function(element) {
-+    element = $(element);
-+    if (!element._overflow) return element;
-+    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;
-+    element._overflow = null;
-+    return element;
-+  },
-+
-+  cumulativeOffset: function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+      element = element.offsetParent;
-+    } while (element);
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  positionedOffset: function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+      element = element.offsetParent;
-+      if (element) {
-+        if (element.tagName == 'BODY') break;
-+        var p = Element.getStyle(element, 'position');
-+        if (p !== 'static') break;
-+      }
-+    } while (element);
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  absolutize: function(element) {
-+    element = $(element);
-+    if (element.getStyle('position') == 'absolute') return;
-+    // Position.prepare(); // To be done manually by Scripty when it needs it.
-+
-+    var offsets = element.positionedOffset();
-+    var top     = offsets[1];
-+    var left    = offsets[0];
-+    var width   = element.clientWidth;
-+    var height  = element.clientHeight;
-+
-+    element._originalLeft   = left - parseFloat(element.style.left  || 0);
-+    element._originalTop    = top  - parseFloat(element.style.top || 0);
-+    element._originalWidth  = element.style.width;
-+    element._originalHeight = element.style.height;
-+
-+    element.style.position = 'absolute';
-+    element.style.top    = top + 'px';
-+    element.style.left   = left + 'px';
-+    element.style.width  = width + 'px';
-+    element.style.height = height + 'px';
-+    return element;
-+  },
-+
-+  relativize: function(element) {
-+    element = $(element);
-+    if (element.getStyle('position') == 'relative') return;
-+    // Position.prepare(); // To be done manually by Scripty when it needs it.
-+
-+    element.style.position = 'relative';
-+    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);
-+    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);
-+
-+    element.style.top    = top + 'px';
-+    element.style.left   = left + 'px';
-+    element.style.height = element._originalHeight;
-+    element.style.width  = element._originalWidth;
-+    return element;
-+  },
-+
-+  cumulativeScrollOffset: function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.scrollTop  || 0;
-+      valueL += element.scrollLeft || 0;
-+      element = element.parentNode;
-+    } while (element);
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  getOffsetParent: function(element) {
-+    if (element.offsetParent) return $(element.offsetParent);
-+    if (element == document.body) return $(element);
-+
-+    while ((element = element.parentNode) && element != document.body)
-+      if (Element.getStyle(element, 'position') != 'static')
-+        return $(element);
-+
-+    return $(document.body);
-+  },
-+
-+  viewportOffset: function(forElement) {
-+    var valueT = 0, valueL = 0;
-+
-+    var element = forElement;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+
-+      // Safari fix
-+      if (element.offsetParent == document.body &&
-+        Element.getStyle(element, 'position') == 'absolute') break;
-+
-+    } while (element = element.offsetParent);
-+
-+    element = forElement;
-+    do {
-+      if (!Prototype.Browser.Opera || element.tagName == 'BODY') {
-+        valueT -= element.scrollTop  || 0;
-+        valueL -= element.scrollLeft || 0;
-+      }
-+    } while (element = element.parentNode);
-+
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  clonePosition: function(element, source) {
-+    var options = Object.extend({
-+      setLeft:    true,
-+      setTop:     true,
-+      setWidth:   true,
-+      setHeight:  true,
-+      offsetTop:  0,
-+      offsetLeft: 0
-+    }, arguments[2] || { });
-+
-+    // find page position of source
-+    source = $(source);
-+    var p = source.viewportOffset();
-+
-+    // find coordinate system to use
-+    element = $(element);
-+    var delta = [0, 0];
-+    var parent = null;
-+    // delta [0,0] will do fine with position: fixed elements,
-+    // position:absolute needs offsetParent deltas
-+    if (Element.getStyle(element, 'position') == 'absolute') {
-+      parent = element.getOffsetParent();
-+      delta = parent.viewportOffset();
-+    }
-+
-+    // correct by body offsets (fixes Safari)
-+    if (parent == document.body) {
-+      delta[0] -= document.body.offsetLeft;
-+      delta[1] -= document.body.offsetTop;
-+    }
-+
-+    // set position
-+    if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
-+    if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
-+    if (options.setWidth)  element.style.width = source.offsetWidth + 'px';
-+    if (options.setHeight) element.style.height = source.offsetHeight + 'px';
-+    return element;
-+  }
-+};
-+
-+Element.Methods.identify.counter = 1;
-+
-+Object.extend(Element.Methods, {
-+  getElementsBySelector: Element.Methods.select,
-+  childElements: Element.Methods.immediateDescendants
-+});
-+
-+Element._attributeTranslations = {
-+  write: {
-+    names: {
-+      className: 'class',
-+      htmlFor:   'for'
-+    },
-+    values: { }
-+  }
-+};
-+
-+if (Prototype.Browser.Opera) {
-+  Element.Methods.getStyle = Element.Methods.getStyle.wrap(
-+    function(proceed, element, style) {
-+      switch (style) {
-+        case 'left': case 'top': case 'right': case 'bottom':
-+          if (proceed(element, 'position') === 'static') return null;
-+        case 'height': case 'width':
-+          // returns '0px' for hidden elements; we want it to return null
-+          if (!Element.visible(element)) return null;
-+
-+          // returns the border-box dimensions rather than the content-box
-+          // dimensions, so we subtract padding and borders from the value
-+          var dim = parseInt(proceed(element, style), 10);
-+
-+          if (dim !== element['offset' + style.capitalize()])
-+            return dim + 'px';
-+
-+          var properties;
-+          if (style === 'height') {
-+            properties = ['border-top-width', 'padding-top',
-+             'padding-bottom', 'border-bottom-width'];
-+          }
-+          else {
-+            properties = ['border-left-width', 'padding-left',
-+             'padding-right', 'border-right-width'];
-+          }
-+          return properties.inject(dim, function(memo, property) {
-+            var val = proceed(element, property);
-+            return val === null ? memo : memo - parseInt(val, 10);
-+          }) + 'px';
-+        default: return proceed(element, style);
-+      }
-+    }
-+  );
-+
-+  Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(
-+    function(proceed, element, attribute) {
-+      if (attribute === 'title') return element.title;
-+      return proceed(element, attribute);
-+    }
-+  );
-+}
-+
-+else if (Prototype.Browser.IE) {
-+  // IE doesn't report offsets correctly for static elements, so we change them
-+  // to "relative" to get the values, then change them back.
-+  Element.Methods.getOffsetParent = Element.Methods.getOffsetParent.wrap(
-+    function(proceed, element) {
-+      element = $(element);
-+      var position = element.getStyle('position');
-+      if (position !== 'static') return proceed(element);
-+      element.setStyle({ position: 'relative' });
-+      var value = proceed(element);
-+      element.setStyle({ position: position });
-+      return value;
-+    }
-+  );
-+
-+  $w('positionedOffset viewportOffset').each(function(method) {
-+    Element.Methods[method] = Element.Methods[method].wrap(
-+      function(proceed, element) {
-+        element = $(element);
-+        var position = element.getStyle('position');
-+        if (position !== 'static') return proceed(element);
-+        // Trigger hasLayout on the offset parent so that IE6 reports
-+        // accurate offsetTop and offsetLeft values for position: fixed.
-+        var offsetParent = element.getOffsetParent();
-+        if (offsetParent && offsetParent.getStyle('position') === 'fixed')
-+          offsetParent.setStyle({ zoom: 1 });
-+        element.setStyle({ position: 'relative' });
-+        var value = proceed(element);
-+        element.setStyle({ position: position });
-+        return value;
-+      }
-+    );
-+  });
-+
-+  Element.Methods.getStyle = function(element, style) {
-+    element = $(element);
-+    style = (style == 'float' || style == 'cssFloat') ? 'styleFloat' : style.camelize();
-+    var value = element.style[style];
-+    if (!value && element.currentStyle) value = element.currentStyle[style];
-+
-+    if (style == 'opacity') {
-+      if (value = (element.getStyle('filter') || '').match(/alpha\(opacity=(.*)\)/))
-+        if (value[1]) return parseFloat(value[1]) / 100;
-+      return 1.0;
-+    }
-+
-+    if (value == 'auto') {
-+      if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))
-+        return element['offset' + style.capitalize()] + 'px';
-+      return null;
-+    }
-+    return value;
-+  };
-+
-+  Element.Methods.setOpacity = function(element, value) {
-+    function stripAlpha(filter){
-+      return filter.replace(/alpha\([^\)]*\)/gi,'');
-+    }
-+    element = $(element);
-+    var currentStyle = element.currentStyle;
-+    if ((currentStyle && !currentStyle.hasLayout) ||
-+      (!currentStyle && element.style.zoom == 'normal'))
-+        element.style.zoom = 1;
-+
-+    var filter = element.getStyle('filter'), style = element.style;
-+    if (value == 1 || value === '') {
-+      (filter = stripAlpha(filter)) ?
-+        style.filter = filter : style.removeAttribute('filter');
-+      return element;
-+    } else if (value &lt; 0.00001) value = 0;
-+    style.filter = stripAlpha(filter) +
-+      'alpha(opacity=' + (value * 100) + ')';
-+    return element;
-+  };
-+
-+  Element._attributeTranslations = {
-+    read: {
-+      names: {
-+        'class': 'className',
-+        'for':   'htmlFor'
-+      },
-+      values: {
-+        _getAttr: function(element, attribute) {
-+          return element.getAttribute(attribute, 2);
-+        },
-+        _getAttrNode: function(element, attribute) {
-+          var node = element.getAttributeNode(attribute);
-+          return node ? node.value : "";
-+        },
-+        _getEv: function(element, attribute) {
-+          attribute = element.getAttribute(attribute);
-+          return attribute ? attribute.toString().slice(23, -2) : null;
-+        },
-+        _flag: function(element, attribute) {
-+          return $(element).hasAttribute(attribute) ? attribute : null;
-+        },
-+        style: function(element) {
-+          return element.style.cssText.toLowerCase();
-+        },
-+        title: function(element) {
-+          return element.title;
-+        }
-+      }
-+    }
-+  };
-+
-+  Element._attributeTranslations.write = {
-+    names: Object.extend({
-+      cellpadding: 'cellPadding',
-+      cellspacing: 'cellSpacing'
-+    }, Element._attributeTranslations.read.names),
-+    values: {
-+      checked: function(element, value) {
-+        element.checked = !!value;
-+      },
-+
-+      style: function(element, value) {
-+        element.style.cssText = value ? value : '';
-+      }
-+    }
-+  };
-+
-+  Element._attributeTranslations.has = {};
-+
-+  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +
-+      'encType maxLength readOnly longDesc').each(function(attr) {
-+    Element._attributeTranslations.write.names[attr.toLowerCase()] = attr;
-+    Element._attributeTranslations.has[attr.toLowerCase()] = attr;
-+  });
-+
-+  (function(v) {
-+    Object.extend(v, {
-+      href:        v._getAttr,
-+      src:         v._getAttr,
-+      type:        v._getAttr,
-+      action:      v._getAttrNode,
-+      disabled:    v._flag,
-+      checked:     v._flag,
-+      readonly:    v._flag,
-+      multiple:    v._flag,
-+      onload:      v._getEv,
-+      onunload:    v._getEv,
-+      onclick:     v._getEv,
-+      ondblclick:  v._getEv,
-+      onmousedown: v._getEv,
-+      onmouseup:   v._getEv,
-+      onmouseover: v._getEv,
-+      onmousemove: v._getEv,
-+      onmouseout:  v._getEv,
-+      onfocus:     v._getEv,
-+      onblur:      v._getEv,
-+      onkeypress:  v._getEv,
-+      onkeydown:   v._getEv,
-+      onkeyup:     v._getEv,
-+      onsubmit:    v._getEv,
-+      onreset:     v._getEv,
-+      onselect:    v._getEv,
-+      onchange:    v._getEv
-+    });
-+  })(Element._attributeTranslations.read.values);
-+}
-+
-+else if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent)) {
-+  Element.Methods.setOpacity = function(element, value) {
-+    element = $(element);
-+    element.style.opacity = (value == 1) ? 0.999999 :
-+      (value === '') ? '' : (value &lt; 0.00001) ? 0 : value;
-+    return element;
-+  };
-+}
-+
-+else if (Prototype.Browser.WebKit) {
-+  Element.Methods.setOpacity = function(element, value) {
-+    element = $(element);
-+    element.style.opacity = (value == 1 || value === '') ? '' :
-+      (value &lt; 0.00001) ? 0 : value;
-+
-+    if (value == 1)
-+      if(element.tagName == 'IMG' && element.width) {
-+        element.width++; element.width--;
-+      } else try {
-+        var n = document.createTextNode(' ');
-+        element.appendChild(n);
-+        element.removeChild(n);
-+      } catch (e) { }
-+
-+    return element;
-+  };
-+
-+  // Safari returns margins on body which is incorrect if the child is absolutely
-+  // positioned.  For performance reasons, redefine Element#cumulativeOffset for
-+  // KHTML/WebKit only.
-+  Element.Methods.cumulativeOffset = function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+      if (element.offsetParent == document.body)
-+        if (Element.getStyle(element, 'position') == 'absolute') break;
-+
-+      element = element.offsetParent;
-+    } while (element);
-+
-+    return Element._returnOffset(valueL, valueT);
-+  };
-+}
-+
-+if (Prototype.Browser.IE || Prototype.Browser.Opera) {
-+  // IE and Opera are missing .innerHTML support for TABLE-related and SELECT elements
-+  Element.Methods.update = function(element, content) {
-+    element = $(element);
-+
-+    if (content && content.toElement) content = content.toElement();
-+    if (Object.isElement(content)) return element.update().insert(content);
-+
-+    content = Object.toHTML(content);
-+    var tagName = element.tagName.toUpperCase();
-+
-+    if (tagName in Element._insertionTranslations.tags) {
-+      $A(element.childNodes).each(function(node) { element.removeChild(node) });
-+      Element._getContentFromAnonymousElement(tagName, content.stripScripts())
-+        .each(function(node) { element.appendChild(node) });
-+    }
-+    else element.innerHTML = content.stripScripts();
-+
-+    content.evalScripts.bind(content).defer();
-+    return element;
-+  };
-+}
-+
-+if ('outerHTML' in document.createElement('div')) {
-+  Element.Methods.replace = function(element, content) {
-+    element = $(element);
-+
-+    if (content && content.toElement) content = content.toElement();
-+    if (Object.isElement(content)) {
-+      element.parentNode.replaceChild(content, element);
-+      return element;
-+    }
-+
-+    content = Object.toHTML(content);
-+    var parent = element.parentNode, tagName = parent.tagName.toUpperCase();
-+
-+    if (Element._insertionTranslations.tags[tagName]) {
-+      var nextSibling = element.next();
-+      var fragments = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
-+      parent.removeChild(element);
-+      if (nextSibling)
-+        fragments.each(function(node) { parent.insertBefore(node, nextSibling) });
-+      else
-+        fragments.each(function(node) { parent.appendChild(node) });
-+    }
-+    else element.outerHTML = content.stripScripts();
-+
-+    content.evalScripts.bind(content).defer();
-+    return element;
-+  };
-+}
-+
-+Element._returnOffset = function(l, t) {
-+  var result = [l, t];
-+  result.left = l;
-+  result.top = t;
-+  return result;
-+};
-+
-+Element._getContentFromAnonymousElement = function(tagName, html) {
-+  var div = new Element('div'), t = Element._insertionTranslations.tags[tagName];
-+  if (t) {
-+    div.innerHTML = t[0] + html + t[1];
-+    t[2].times(function() { div = div.firstChild });
-+  } else div.innerHTML = html;
-+  return $A(div.childNodes);
-+};
-+
-+Element._insertionTranslations = {
-+  before: function(element, node) {
-+    element.parentNode.insertBefore(node, element);
-+  },
-+  top: function(element, node) {
-+    element.insertBefore(node, element.firstChild);
-+  },
-+  bottom: function(element, node) {
-+    element.appendChild(node);
-+  },
-+  after: function(element, node) {
-+    element.parentNode.insertBefore(node, element.nextSibling);
-+  },
-+  tags: {
-+    TABLE:  ['&lt;table>',                '&lt;/table>',                   1],
-+    TBODY:  ['&lt;table>&lt;tbody>',         '&lt;/tbody>&lt;/table>',           2],
-+    TR:     ['&lt;table>&lt;tbody>&lt;tr>',     '&lt;/tr>&lt;/tbody>&lt;/table>',      3],
-+    TD:     ['&lt;table>&lt;tbody>&lt;tr>&lt;td>', '&lt;/td>&lt;/tr>&lt;/tbody>&lt;/table>', 4],
-+    SELECT: ['&lt;select>',               '&lt;/select>',                  1]
-+  }
-+};
-+
-+(function() {
-+  Object.extend(this.tags, {
-+    THEAD: this.tags.TBODY,
-+    TFOOT: this.tags.TBODY,
-+    TH:    this.tags.TD
-+  });
-+}).call(Element._insertionTranslations);
-+
-+Element.Methods.Simulated = {
-+  hasAttribute: function(element, attribute) {
-+    attribute = Element._attributeTranslations.has[attribute] || attribute;
-+    var node = $(element).getAttributeNode(attribute);
-+    return node && node.specified;
-+  }
-+};
-+
-+Element.Methods.ByTag = { };
-+
-+Object.extend(Element, Element.Methods);
-+
-+if (!Prototype.BrowserFeatures.ElementExtensions &&
-+    document.createElement('div').__proto__) {
-+  window.HTMLElement = { };
-+  window.HTMLElement.prototype = document.createElement('div').__proto__;
-+  Prototype.BrowserFeatures.ElementExtensions = true;
-+}
-+
-+Element.extend = (function() {
-+  if (Prototype.BrowserFeatures.SpecificElementExtensions)
-+    return Prototype.K;
-+
-+  var Methods = { }, ByTag = Element.Methods.ByTag;
-+
-+  var extend = Object.extend(function(element) {
-+    if (!element || element._extendedByPrototype ||
-+        element.nodeType != 1 || element == window) return element;
-+
-+    var methods = Object.clone(Methods),
-+      tagName = element.tagName, property, value;
-+
-+    // extend methods for specific tags
-+    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);
-+
-+    for (property in methods) {
-+      value = methods[property];
-+      if (Object.isFunction(value) && !(property in element))
-+        element[property] = value.methodize();
-+    }
-+
-+    element._extendedByPrototype = Prototype.emptyFunction;
-+    return element;
-+
-+  }, {
-+    refresh: function() {
-+      // extend methods for all tags (Safari doesn't need this)
-+      if (!Prototype.BrowserFeatures.ElementExtensions) {
-+        Object.extend(Methods, Element.Methods);
-+        Object.extend(Methods, Element.Methods.Simulated);
-+      }
-+    }
-+  });
-+
-+  extend.refresh();
-+  return extend;
-+})();
-+
-+Element.hasAttribute = function(element, attribute) {
-+  if (element.hasAttribute) return element.hasAttribute(attribute);
-+  return Element.Methods.Simulated.hasAttribute(element, attribute);
-+};
-+
-+Element.addMethods = function(methods) {
-+  var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;
-+
-+  if (!methods) {
-+    Object.extend(Form, Form.Methods);
-+    Object.extend(Form.Element, Form.Element.Methods);
-+    Object.extend(Element.Methods.ByTag, {
-+      "FORM":     Object.clone(Form.Methods),
-+      "INPUT":    Object.clone(Form.Element.Methods),
-+      "SELECT":   Object.clone(Form.Element.Methods),
-+      "TEXTAREA": Object.clone(Form.Element.Methods)
-+    });
-+  }
-+
-+  if (arguments.length == 2) {
-+    var tagName = methods;
-+    methods = arguments[1];
-+  }
-+
-+  if (!tagName) Object.extend(Element.Methods, methods || { });
-+  else {
-+    if (Object.isArray(tagName)) tagName.each(extend);
-+    else extend(tagName);
-+  }
-+
-+  function extend(tagName) {
-+    tagName = tagName.toUpperCase();
-+    if (!Element.Methods.ByTag[tagName])
-+      Element.Methods.ByTag[tagName] = { };
-+    Object.extend(Element.Methods.ByTag[tagName], methods);
-+  }
-+
-+  function copy(methods, destination, onlyIfAbsent) {
-+    onlyIfAbsent = onlyIfAbsent || false;
-+    for (var property in methods) {
-+      var value = methods[property];
-+      if (!Object.isFunction(value)) continue;
-+      if (!onlyIfAbsent || !(property in destination))
-+        destination[property] = value.methodize();
-+    }
-+  }
-+
-+  function findDOMClass(tagName) {
-+    var klass;
-+    var trans = {
-+      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",
-+      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList",
-+      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading",
-+      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",
-+      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":
-+      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":
-+      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR":
-+      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":
-+      "FrameSet", "IFRAME": "IFrame"
-+    };
-+    if (trans[tagName]) klass = 'HTML' + trans[tagName] + 'Element';
-+    if (window[klass]) return window[klass];
-+    klass = 'HTML' + tagName + 'Element';
-+    if (window[klass]) return window[klass];
-+    klass = 'HTML' + tagName.capitalize() + 'Element';
-+    if (window[klass]) return window[klass];
-+
-+    window[klass] = { };
-+    window[klass].prototype = document.createElement(tagName).__proto__;
-+    return window[klass];
-+  }
-+
-+  if (F.ElementExtensions) {
-+    copy(Element.Methods, HTMLElement.prototype);
-+    copy(Element.Methods.Simulated, HTMLElement.prototype, true);
-+  }
-+
-+  if (F.SpecificElementExtensions) {
-+    for (var tag in Element.Methods.ByTag) {
-+      var klass = findDOMClass(tag);
-+      if (Object.isUndefined(klass)) continue;
-+      copy(T[tag], klass.prototype);
-+    }
-+  }
-+
-+  Object.extend(Element, Element.Methods);
-+  delete Element.ByTag;
-+
-+  if (Element.extend.refresh) Element.extend.refresh();
-+  Element.cache = { };
-+};
-+
-+document.viewport = {
-+  getDimensions: function() {
-+    var dimensions = { };
-+    var B = Prototype.Browser;
-+    $w('width height').each(function(d) {
-+      var D = d.capitalize();
-+      dimensions[d] = (B.WebKit && !document.evaluate) ? self['inner' + D] :
-+        (B.Opera) ? document.body['client' + D] : document.documentElement['client' + D];
-+    });
-+    return dimensions;
-+  },
-+
-+  getWidth: function() {
-+    return this.getDimensions().width;
-+  },
-+
-+  getHeight: function() {
-+    return this.getDimensions().height;
-+  },
-+
-+  getScrollOffsets: function() {
-+    return Element._returnOffset(
-+      window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
-+      window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);
-+  }
-+};
-+/* Portions of the Selector class are derived from Jack Slocum’s DomQuery,
-+ * part of YUI-Ext version 0.40, distributed under the terms of an MIT-style
-+ * license.  Please see http://www.yui-ext.com/ for more information. */
-+
-+var Selector = Class.create({
-+  initialize: function(expression) {
-+    this.expression = expression.strip();
-+    this.compileMatcher();
-+  },
-+
-+  shouldUseXPath: function() {
-+    if (!Prototype.BrowserFeatures.XPath) return false;
-+
-+    var e = this.expression;
-+
-+    // Safari 3 chokes on :*-of-type and :empty
-+    if (Prototype.Browser.WebKit &&
-+     (e.include("-of-type") || e.include(":empty")))
-+      return false;
-+
-+    // XPath can't do namespaced attributes, nor can it read
-+    // the "checked" property from DOM nodes
-+    if ((/(\[[\w-]*?:|:checked)/).test(this.expression))
-+      return false;
-+
-+    return true;
-+  },
-+
-+  compileMatcher: function() {
-+    if (this.shouldUseXPath())
-+      return this.compileXPathMatcher();
-+
-+    var e = this.expression, ps = Selector.patterns, h = Selector.handlers,
-+        c = Selector.criteria, le, p, m;
-+
-+    if (Selector._cache[e]) {
-+      this.matcher = Selector._cache[e];
-+      return;
-+    }
-+
-+    this.matcher = ["this.matcher = function(root) {",
-+                    "var r = root, h = Selector.handlers, c = false, n;"];
-+
-+    while (e && le != e && (/\S/).test(e)) {
-+      le = e;
-+      for (var i in ps) {
-+        p = ps[i];
-+        if (m = e.match(p)) {
-+          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :
-+    	      new Template(c[i]).evaluate(m));
-+          e = e.replace(m[0], '');
-+          break;
-+        }
-+      }
-+    }
-+
-+    this.matcher.push("return h.unique(n);\n}");
-+    eval(this.matcher.join('\n'));
-+    Selector._cache[this.expression] = this.matcher;
-+  },
-+
-+  compileXPathMatcher: function() {
-+    var e = this.expression, ps = Selector.patterns,
-+        x = Selector.xpath, le, m;
-+
-+    if (Selector._cache[e]) {
-+      this.xpath = Selector._cache[e]; return;
-+    }
-+
-+    this.matcher = ['.//*'];
-+    while (e && le != e && (/\S/).test(e)) {
-+      le = e;
-+      for (var i in ps) {
-+        if (m = e.match(ps[i])) {
-+          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :
-+            new Template(x[i]).evaluate(m));
-+          e = e.replace(m[0], '');
-+          break;
-+        }
-+      }
-+    }
-+
-+    this.xpath = this.matcher.join('');
-+    Selector._cache[this.expression] = this.xpath;
-+  },
-+
-+  findElements: function(root) {
-+    root = root || document;
-+    if (this.xpath) return document._getElementsByXPath(this.xpath, root);
-+    return this.matcher(root);
-+  },
-+
-+  match: function(element) {
-+    this.tokens = [];
-+
-+    var e = this.expression, ps = Selector.patterns, as = Selector.assertions;
-+    var le, p, m;
-+
-+    while (e && le !== e && (/\S/).test(e)) {
-+      le = e;
-+      for (var i in ps) {
-+        p = ps[i];
-+        if (m = e.match(p)) {
-+          // use the Selector.assertions methods unless the selector
-+          // is too complex.
-+          if (as[i]) {
-+            this.tokens.push([i, Object.clone(m)]);
-+            e = e.replace(m[0], '');
-+          } else {
-+            // reluctantly do a document-wide search
-+            // and look for a match in the array
-+            return this.findElements(document).include(element);
-+          }
-+        }
-+      }
-+    }
-+
-+    var match = true, name, matches;
-+    for (var i = 0, token; token = this.tokens[i]; i++) {
-+      name = token[0], matches = token[1];
-+      if (!Selector.assertions[name](element, matches)) {
-+        match = false; break;
-+      }
-+    }
-+
-+    return match;
-+  },
-+
-+  toString: function() {
-+    return this.expression;
-+  },
-+
-+  inspect: function() {
-+    return "#&lt;Selector:" + this.expression.inspect() + ">";
-+  }
-+});
-+
-+Object.extend(Selector, {
-+  _cache: { },
-+
-+  xpath: {
-+    descendant:   "//*",
-+    child:        "/*",
-+    adjacent:     "/following-sibling::*[1]",
-+    laterSibling: '/following-sibling::*',
-+    tagName:      function(m) {
-+      if (m[1] == '*') return '';
-+      return "[local-name()='" + m[1].toLowerCase() +
-+             "' or local-name()='" + m[1].toUpperCase() + "']";
-+    },
-+    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",
-+    id:           "[@id='#{1}']",
-+    attrPresence: function(m) {
-+      m[1] = m[1].toLowerCase();
-+      return new Template("[@#{1}]").evaluate(m);
-+    },
-+    attr: function(m) {
-+      m[1] = m[1].toLowerCase();
-+      m[3] = m[5] || m[6];
-+      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);
-+    },
-+    pseudo: function(m) {
-+      var h = Selector.xpath.pseudos[m[1]];
-+      if (!h) return '';
-+      if (Object.isFunction(h)) return h(m);
-+      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);
-+    },
-+    operators: {
-+      '=':  "[@#{1}='#{3}']",
-+      '!=': "[@#{1}!='#{3}']",
-+      '^=': "[starts-with(@#{1}, '#{3}')]",
-+      '$=': "[substring(@#{1}, (string-length(@#{1}) - string-length('#{3}') + 1))='#{3}']",
-+      '*=': "[contains(@#{1}, '#{3}')]",
-+      '~=': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",
-+      '|=': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"
-+    },
-+    pseudos: {
-+      'first-child': '[not(preceding-sibling::*)]',
-+      'last-child':  '[not(following-sibling::*)]',
-+      'only-child':  '[not(preceding-sibling::* or following-sibling::*)]',
-+      'empty':       "[count(*) = 0 and (count(text()) = 0 or translate(text(), ' \t\r\n', '') = '')]",
-+      'checked':     "[@checked]",
-+      'disabled':    "[@disabled]",
-+      'enabled':     "[not(@disabled)]",
-+      'not': function(m) {
-+        var e = m[6], p = Selector.patterns,
-+            x = Selector.xpath, le, v;
-+
-+        var exclusion = [];
-+        while (e && le != e && (/\S/).test(e)) {
-+          le = e;
-+          for (var i in p) {
-+            if (m = e.match(p[i])) {
-+              v = Object.isFunction(x[i]) ? x[i](m) : new Template(x[i]).evaluate(m);
-+              exclusion.push("(" + v.substring(1, v.length - 1) + ")");
-+              e = e.replace(m[0], '');
-+              break;
-+            }
-+          }
-+        }
-+        return "[not(" + exclusion.join(" and ") + ")]";
-+      },
-+      'nth-child':      function(m) {
-+        return Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);
-+      },
-+      'nth-last-child': function(m) {
-+        return Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);
-+      },
-+      'nth-of-type':    function(m) {
-+        return Selector.xpath.pseudos.nth("position() ", m);
-+      },
-+      'nth-last-of-type': function(m) {
-+        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", m);
-+      },
-+      'first-of-type':  function(m) {
-+        m[6] = "1"; return Selector.xpath.pseudos['nth-of-type'](m);
-+      },
-+      'last-of-type':   function(m) {
-+        m[6] = "1"; return Selector.xpath.pseudos['nth-last-of-type'](m);
-+      },
-+      'only-of-type':   function(m) {
-+        var p = Selector.xpath.pseudos; return p['first-of-type'](m) + p['last-of-type'](m);
-+      },
-+      nth: function(fragment, m) {
-+        var mm, formula = m[6], predicate;
-+        if (formula == 'even') formula = '2n+0';
-+        if (formula == 'odd')  formula = '2n+1';
-+        if (mm = formula.match(/^(\d+)$/)) // digit only
-+          return '[' + fragment + "= " + mm[1] + ']';
-+        if (mm = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
-+          if (mm[1] == "-") mm[1] = -1;
-+          var a = mm[1] ? Number(mm[1]) : 1;
-+          var b = mm[2] ? Number(mm[2]) : 0;
-+          predicate = "[((#{fragment} - #{b}) mod #{a} = 0) and " +
-+          "((#{fragment} - #{b}) div #{a} >= 0)]";
-+          return new Template(predicate).evaluate({
-+            fragment: fragment, a: a, b: b });
-+        }
-+      }
-+    }
-+  },
-+
-+  criteria: {
-+    tagName:      'n = h.tagName(n, r, "#{1}", c);      c = false;',
-+    className:    'n = h.className(n, r, "#{1}", c);    c = false;',
-+    id:           'n = h.id(n, r, "#{1}", c);           c = false;',
-+    attrPresence: 'n = h.attrPresence(n, r, "#{1}", c); c = false;',
-+    attr: function(m) {
-+      m[3] = (m[5] || m[6]);
-+      return new Template('n = h.attr(n, r, "#{1}", "#{3}", "#{2}", c); c = false;').evaluate(m);
-+    },
-+    pseudo: function(m) {
-+      if (m[6]) m[6] = m[6].replace(/"/g, '\\"');
-+      return new Template('n = h.pseudo(n, "#{1}", "#{6}", r, c); c = false;').evaluate(m);
-+    },
-+    descendant:   'c = "descendant";',
-+    child:        'c = "child";',
-+    adjacent:     'c = "adjacent";',
-+    laterSibling: 'c = "laterSibling";'
-+  },
-+
-+  patterns: {
-+    // combinators must be listed first
-+    // (and descendant needs to be last combinator)
-+    laterSibling: /^\s*~\s*/,
-+    child:        /^\s*>\s*/,
-+    adjacent:     /^\s*\+\s*/,
-+    descendant:   /^\s/,
-+
-+    // selectors follow
-+    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,
-+    id:           /^#([\w\-\*]+)(\b|$)/,
-+    className:    /^\.([\w\-\*]+)(\b|$)/,
-+    pseudo:
-+/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)abled|not)(\((.*?)\))?(\b|$|(?=\s|[:+~>]))/,
-+    attrPresence: /^\[([\w]+)\]/,
-+    attr:         /\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=)\s*((['"])([^\4]*?)\4|([^'"][^\]]*?)))?\]/
-+  },
-+
-+  // for Selector.match and Element#match
-+  assertions: {
-+    tagName: function(element, matches) {
-+      return matches[1].toUpperCase() == element.tagName.toUpperCase();
-+    },
-+
-+    className: function(element, matches) {
-+      return Element.hasClassName(element, matches[1]);
-+    },
-+
-+    id: function(element, matches) {
-+      return element.id === matches[1];
-+    },
-+
-+    attrPresence: function(element, matches) {
-+      return Element.hasAttribute(element, matches[1]);
-+    },
-+
-+    attr: function(element, matches) {
-+      var nodeValue = Element.readAttribute(element, matches[1]);
-+      return nodeValue && Selector.operators[matches[2]](nodeValue, matches[5] || matches[6]);
-+    }
-+  },
-+
-+  handlers: {
-+    // UTILITY FUNCTIONS
-+    // joins two collections
-+    concat: function(a, b) {
-+      for (var i = 0, node; node = b[i]; i++)
-+        a.push(node);
-+      return a;
-+    },
-+
-+    // marks an array of nodes for counting
-+    mark: function(nodes) {
-+      var _true = Prototype.emptyFunction;
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        node._countedByPrototype = _true;
-+      return nodes;
-+    },
-+
-+    unmark: function(nodes) {
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        node._countedByPrototype = undefined;
-+      return nodes;
-+    },
-+
-+    // mark each child node with its position (for nth calls)
-+    // "ofType" flag indicates whether we're indexing for nth-of-type
-+    // rather than nth-child
-+    index: function(parentNode, reverse, ofType) {
-+      parentNode._countedByPrototype = Prototype.emptyFunction;
-+      if (reverse) {
-+        for (var nodes = parentNode.childNodes, i = nodes.length - 1, j = 1; i >= 0; i--) {
-+          var node = nodes[i];
-+          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
-+        }
-+      } else {
-+        for (var i = 0, j = 1, nodes = parentNode.childNodes; node = nodes[i]; i++)
-+          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
-+      }
-+    },
-+
-+    // filters out duplicates and extends all nodes
-+    unique: function(nodes) {
-+      if (nodes.length == 0) return nodes;
-+      var results = [], n;
-+      for (var i = 0, l = nodes.length; i &lt; l; i++)
-+        if (!(n = nodes[i])._countedByPrototype) {
-+          n._countedByPrototype = Prototype.emptyFunction;
-+          results.push(Element.extend(n));
-+        }
-+      return Selector.handlers.unmark(results);
-+    },
-+
-+    // COMBINATOR FUNCTIONS
-+    descendant: function(nodes) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        h.concat(results, node.getElementsByTagName('*'));
-+      return results;
-+    },
-+
-+    child: function(nodes) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        for (var j = 0, child; child = node.childNodes[j]; j++)
-+          if (child.nodeType == 1 && child.tagName != '!') results.push(child);
-+      }
-+      return results;
-+    },
-+
-+    adjacent: function(nodes) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        var next = this.nextElementSibling(node);
-+        if (next) results.push(next);
-+      }
-+      return results;
-+    },
-+
-+    laterSibling: function(nodes) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        h.concat(results, Element.nextSiblings(node));
-+      return results;
-+    },
-+
-+    nextElementSibling: function(node) {
-+      while (node = node.nextSibling)
-+	      if (node.nodeType == 1) return node;
-+      return null;
-+    },
-+
-+    previousElementSibling: function(node) {
-+      while (node = node.previousSibling)
-+        if (node.nodeType == 1) return node;
-+      return null;
-+    },
-+
-+    // TOKEN FUNCTIONS
-+    tagName: function(nodes, root, tagName, combinator) {
-+      var uTagName = tagName.toUpperCase();
-+      var results = [], h = Selector.handlers;
-+      if (nodes) {
-+        if (combinator) {
-+          // fastlane for ordinary descendant combinators
-+          if (combinator == "descendant") {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              h.concat(results, node.getElementsByTagName(tagName));
-+            return results;
-+          } else nodes = this[combinator](nodes);
-+          if (tagName == "*") return nodes;
-+        }
-+        for (var i = 0, node; node = nodes[i]; i++)
-+          if (node.tagName.toUpperCase() === uTagName) results.push(node);
-+        return results;
-+      } else return root.getElementsByTagName(tagName);
-+    },
-+
-+    id: function(nodes, root, id, combinator) {
-+      var targetNode = $(id), h = Selector.handlers;
-+      if (!targetNode) return [];
-+      if (!nodes && root == document) return [targetNode];
-+      if (nodes) {
-+        if (combinator) {
-+          if (combinator == 'child') {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              if (targetNode.parentNode == node) return [targetNode];
-+          } else if (combinator == 'descendant') {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              if (Element.descendantOf(targetNode, node)) return [targetNode];
-+          } else if (combinator == 'adjacent') {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              if (Selector.handlers.previousElementSibling(targetNode) == node)
-+                return [targetNode];
-+          } else nodes = h[combinator](nodes);
-+        }
-+        for (var i = 0, node; node = nodes[i]; i++)
-+          if (node == targetNode) return [targetNode];
-+        return [];
-+      }
-+      return (targetNode && Element.descendantOf(targetNode, root)) ? [targetNode] : [];
-+    },
-+
-+    className: function(nodes, root, className, combinator) {
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      return Selector.handlers.byClassName(nodes, root, className);
-+    },
-+
-+    byClassName: function(nodes, root, className) {
-+      if (!nodes) nodes = Selector.handlers.descendant([root]);
-+      var needle = ' ' + className + ' ';
-+      for (var i = 0, results = [], node, nodeClassName; node = nodes[i]; i++) {
-+        nodeClassName = node.className;
-+        if (nodeClassName.length == 0) continue;
-+        if (nodeClassName == className || (' ' + nodeClassName + ' ').include(needle))
-+          results.push(node);
-+      }
-+      return results;
-+    },
-+
-+    attrPresence: function(nodes, root, attr, combinator) {
-+      if (!nodes) nodes = root.getElementsByTagName("*");
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      var results = [];
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        if (Element.hasAttribute(node, attr)) results.push(node);
-+      return results;
-+    },
-+
-+    attr: function(nodes, root, attr, value, operator, combinator) {
-+      if (!nodes) nodes = root.getElementsByTagName("*");
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      var handler = Selector.operators[operator], results = [];
-+      for (var i = 0, node; node = nodes[i]; i++) {
-+        var nodeValue = Element.readAttribute(node, attr);
-+        if (nodeValue === null) continue;
-+        if (handler(nodeValue, value)) results.push(node);
-+      }
-+      return results;
-+    },
-+
-+    pseudo: function(nodes, name, value, root, combinator) {
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      if (!nodes) nodes = root.getElementsByTagName("*");
-+      return Selector.pseudos[name](nodes, value, root);
-+    }
-+  },
-+
-+  pseudos: {
-+    'first-child': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        if (Selector.handlers.previousElementSibling(node)) continue;
-+          results.push(node);
-+      }
-+      return results;
-+    },
-+    'last-child': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        if (Selector.handlers.nextElementSibling(node)) continue;
-+          results.push(node);
-+      }
-+      return results;
-+    },
-+    'only-child': function(nodes, value, root) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (!h.previousElementSibling(node) && !h.nextElementSibling(node))
-+          results.push(node);
-+      return results;
-+    },
-+    'nth-child':        function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root);
-+    },
-+    'nth-last-child':   function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root, true);
-+    },
-+    'nth-of-type':      function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root, false, true);
-+    },
-+    'nth-last-of-type': function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root, true, true);
-+    },
-+    'first-of-type':    function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, "1", root, false, true);
-+    },
-+    'last-of-type':     function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, "1", root, true, true);
-+    },
-+    'only-of-type':     function(nodes, formula, root) {
-+      var p = Selector.pseudos;
-+      return p['last-of-type'](p['first-of-type'](nodes, formula, root), formula, root);
-+    },
-+
-+    // handles the an+b logic
-+    getIndices: function(a, b, total) {
-+      if (a == 0) return b > 0 ? [b] : [];
-+      return $R(1, total).inject([], function(memo, i) {
-+        if (0 == (i - b) % a && (i - b) / a >= 0) memo.push(i);
-+        return memo;
-+      });
-+    },
-+
-+    // handles nth(-last)-child, nth(-last)-of-type, and (first|last)-of-type
-+    nth: function(nodes, formula, root, reverse, ofType) {
-+      if (nodes.length == 0) return [];
-+      if (formula == 'even') formula = '2n+0';
-+      if (formula == 'odd')  formula = '2n+1';
-+      var h = Selector.handlers, results = [], indexed = [], m;
-+      h.mark(nodes);
-+      for (var i = 0, node; node = nodes[i]; i++) {
-+        if (!node.parentNode._countedByPrototype) {
-+          h.index(node.parentNode, reverse, ofType);
-+          indexed.push(node.parentNode);
-+        }
-+      }
-+      if (formula.match(/^\d+$/)) { // just a number
-+        formula = Number(formula);
-+        for (var i = 0, node; node = nodes[i]; i++)
-+          if (node.nodeIndex == formula) results.push(node);
-+      } else if (m = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
-+        if (m[1] == "-") m[1] = -1;
-+        var a = m[1] ? Number(m[1]) : 1;
-+        var b = m[2] ? Number(m[2]) : 0;
-+        var indices = Selector.pseudos.getIndices(a, b, nodes.length);
-+        for (var i = 0, node, l = indices.length; node = nodes[i]; i++) {
-+          for (var j = 0; j &lt; l; j++)
-+            if (node.nodeIndex == indices[j]) results.push(node);
-+        }
-+      }
-+      h.unmark(nodes);
-+      h.unmark(indexed);
-+      return results;
-+    },
-+
-+    'empty': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        // IE treats comments as element nodes
-+        if (node.tagName == '!' || (node.firstChild && !node.innerHTML.match(/^\s*$/))) continue;
-+        results.push(node);
-+      }
-+      return results;
-+    },
-+
-+    'not': function(nodes, selector, root) {
-+      var h = Selector.handlers, selectorType, m;
-+      var exclusions = new Selector(selector).findElements(root);
-+      h.mark(exclusions);
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (!node._countedByPrototype) results.push(node);
-+      h.unmark(exclusions);
-+      return results;
-+    },
-+
-+    'enabled': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (!node.disabled) results.push(node);
-+      return results;
-+    },
-+
-+    'disabled': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (node.disabled) results.push(node);
-+      return results;
-+    },
-+
-+    'checked': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (node.checked) results.push(node);
-+      return results;
-+    }
-+  },
-+
-+  operators: {
-+    '=':  function(nv, v) { return nv == v; },
-+    '!=': function(nv, v) { return nv != v; },
-+    '^=': function(nv, v) { return nv.startsWith(v); },
-+    '$=': function(nv, v) { return nv.endsWith(v); },
-+    '*=': function(nv, v) { return nv.include(v); },
-+    '~=': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + ' '); },
-+    '|=': function(nv, v) { return ('-' + nv.toUpperCase() + '-').include('-' + v.toUpperCase() + '-'); }
-+  },
-+
-+  split: function(expression) {
-+    var expressions = [];
-+    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, function(m) {
-+      expressions.push(m[1].strip());
-+    });
-+    return expressions;
-+  },
-+
-+  matchElements: function(elements, expression) {
-+    var matches = $$(expression), h = Selector.handlers;
-+    h.mark(matches);
-+    for (var i = 0, results = [], element; element = elements[i]; i++)
-+      if (element._countedByPrototype) results.push(element);
-+    h.unmark(matches);
-+    return results;
-+  },
-+
-+  findElement: function(elements, expression, index) {
-+    if (Object.isNumber(expression)) {
-+      index = expression; expression = false;
-+    }
-+    return Selector.matchElements(elements, expression || '*')[index || 0];
-+  },
-+
-+  findChildElements: function(element, expressions) {
-+    expressions = Selector.split(expressions.join(','));
-+    var results = [], h = Selector.handlers;
-+    for (var i = 0, l = expressions.length, selector; i &lt; l; i++) {
-+      selector = new Selector(expressions[i].strip());
-+      h.concat(results, selector.findElements(element));
-+    }
-+    return (l > 1) ? h.unique(results) : results;
-+  }
-+});
-+
-+if (Prototype.Browser.IE) {
-+  Object.extend(Selector.handlers, {
-+    // IE returns comment nodes on getElementsByTagName("*").
-+    // Filter them out.
-+    concat: function(a, b) {
-+      for (var i = 0, node; node = b[i]; i++)
-+        if (node.tagName !== "!") a.push(node);
-+      return a;
-+    },
-+
-+    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.
-+    unmark: function(nodes) {
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        node.removeAttribute('_countedByPrototype');
-+      return nodes;
-+    }
-+  });
-+}
-+
-+function $$() {
-+  return Selector.findChildElements(document, $A(arguments));
-+}
-+var Form = {
-+  reset: function(form) {
-+    $(form).reset();
-+    return form;
-+  },
-+
-+  serializeElements: function(elements, options) {
-+    if (typeof options != 'object') options = { hash: !!options };
-+    else if (Object.isUndefined(options.hash)) options.hash = true;
-+    var key, value, submitted = false, submit = options.submit;
-+
-+    var data = elements.inject({ }, function(result, element) {
-+      if (!element.disabled && element.name) {
-+        key = element.name; value = $(element).getValue();
-+        if (value != null && (element.type != 'submit' || (!submitted &&
-+            submit !== false && (!submit || key == submit) && (submitted = true)))) {
-+          if (key in result) {
-+            // a key is already present; construct an array of values
-+            if (!Object.isArray(result[key])) result[key] = [result[key]];
-+            result[key].push(value);
-+          }
-+          else result[key] = value;
-+        }
-+      }
-+      return result;
-+    });
-+
-+    return options.hash ? data : Object.toQueryString(data);
-+  }
-+};
-+
-+Form.Methods = {
-+  serialize: function(form, options) {
-+    return Form.serializeElements(Form.getElements(form), options);
-+  },
-+
-+  getElements: function(form) {
-+    return $A($(form).getElementsByTagName('*')).inject([],
-+      function(elements, child) {
-+        if (Form.Element.Serializers[child.tagName.toLowerCase()])
-+          elements.push(Element.extend(child));
-+        return elements;
-+      }
-+    );
-+  },
-+
-+  getInputs: function(form, typeName, name) {
-+    form = $(form);
-+    var inputs = form.getElementsByTagName('input');
-+
-+    if (!typeName && !name) return $A(inputs).map(Element.extend);
-+
-+    for (var i = 0, matchingInputs = [], length = inputs.length; i &lt; length; i++) {
-+      var input = inputs[i];
-+      if ((typeName && input.type != typeName) || (name && input.name != name))
-+        continue;
-+      matchingInputs.push(Element.extend(input));
-+    }
-+
-+    return matchingInputs;
-+  },
-+
-+  disable: function(form) {
-+    form = $(form);
-+    Form.getElements(form).invoke('disable');
-+    return form;
-+  },
-+
-+  enable: function(form) {
-+    form = $(form);
-+    Form.getElements(form).invoke('enable');
-+    return form;
-+  },
-+
-+  findFirstElement: function(form) {
-+    var elements = $(form).getElements().findAll(function(element) {
-+      return 'hidden' != element.type && !element.disabled;
-+    });
-+    var firstByIndex = elements.findAll(function(element) {
-+      return element.hasAttribute('tabIndex') && element.tabIndex >= 0;
-+    }).sortBy(function(element) { return element.tabIndex }).first();
-+
-+    return firstByIndex ? firstByIndex : elements.find(function(element) {
-+      return ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());
-+    });
-+  },
-+
-+  focusFirstElement: function(form) {
-+    form = $(form);
-+    form.findFirstElement().activate();
-+    return form;
-+  },
-+
-+  request: function(form, options) {
-+    form = $(form), options = Object.clone(options || { });
-+
-+    var params = options.parameters, action = form.readAttribute('action') || '';
-+    if (action.blank()) action = window.location.href;
-+    options.parameters = form.serialize(true);
-+
-+    if (params) {
-+      if (Object.isString(params)) params = params.toQueryParams();
-+      Object.extend(options.parameters, params);
-+    }
-+
-+    if (form.hasAttribute('method') && !options.method)
-+      options.method = form.method;
-+
-+    return new Ajax.Request(action, options);
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Form.Element = {
-+  focus: function(element) {
-+    $(element).focus();
-+    return element;
-+  },
-+
-+  select: function(element) {
-+    $(element).select();
-+    return element;
-+  }
-+};
-+
-+Form.Element.Methods = {
-+  serialize: function(element) {
-+    element = $(element);
-+    if (!element.disabled && element.name) {
-+      var value = element.getValue();
-+      if (value != undefined) {
-+        var pair = { };
-+        pair[element.name] = value;
-+        return Object.toQueryString(pair);
-+      }
-+    }
-+    return '';
-+  },
-+
-+  getValue: function(element) {
-+    element = $(element);
-+    var method = element.tagName.toLowerCase();
-+    return Form.Element.Serializers[method](element);
-+  },
-+
-+  setValue: function(element, value) {
-+    element = $(element);
-+    var method = element.tagName.toLowerCase();
-+    Form.Element.Serializers[method](element, value);
-+    return element;
-+  },
-+
-+  clear: function(element) {
-+    $(element).value = '';
-+    return element;
-+  },
-+
-+  present: function(element) {
-+    return $(element).value != '';
-+  },
-+
-+  activate: function(element) {
-+    element = $(element);
-+    try {
-+      element.focus();
-+      if (element.select && (element.tagName.toLowerCase() != 'input' ||
-+          !['button', 'reset', 'submit'].include(element.type)))
-+        element.select();
-+    } catch (e) { }
-+    return element;
-+  },
-+
-+  disable: function(element) {
-+    element = $(element);
-+    element.blur();
-+    element.disabled = true;
-+    return element;
-+  },
-+
-+  enable: function(element) {
-+    element = $(element);
-+    element.disabled = false;
-+    return element;
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+var Field = Form.Element;
-+var $F = Form.Element.Methods.getValue;
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Form.Element.Serializers = {
-+  input: function(element, value) {
-+    switch (element.type.toLowerCase()) {
-+      case 'checkbox':
-+      case 'radio':
-+        return Form.Element.Serializers.inputSelector(element, value);
-+      default:
-+        return Form.Element.Serializers.textarea(element, value);
-+    }
-+  },
-+
-+  inputSelector: function(element, value) {
-+    if (Object.isUndefined(value)) return element.checked ? element.value : null;
-+    else element.checked = !!value;
-+  },
-+
-+  textarea: function(element, value) {
-+    if (Object.isUndefined(value)) return element.value;
-+    else element.value = value;
-+  },
-+
-+  select: function(element, index) {
-+    if (Object.isUndefined(index))
-+      return this[element.type == 'select-one' ?
-+        'selectOne' : 'selectMany'](element);
-+    else {
-+      var opt, value, single = !Object.isArray(index);
-+      for (var i = 0, length = element.length; i &lt; length; i++) {
-+        opt = element.options[i];
-+        value = this.optionValue(opt);
-+        if (single) {
-+          if (value == index) {
-+            opt.selected = true;
-+            return;
-+          }
-+        }
-+        else opt.selected = index.include(value);
-+      }
-+    }
-+  },
-+
-+  selectOne: function(element) {
-+    var index = element.selectedIndex;
-+    return index >= 0 ? this.optionValue(element.options[index]) : null;
-+  },
-+
-+  selectMany: function(element) {
-+    var values, length = element.length;
-+    if (!length) return null;
-+
-+    for (var i = 0, values = []; i &lt; length; i++) {
-+      var opt = element.options[i];
-+      if (opt.selected) values.push(this.optionValue(opt));
-+    }
-+    return values;
-+  },
-+
-+  optionValue: function(opt) {
-+    // extend element because hasAttribute may not be native
-+    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Abstract.TimedObserver = Class.create(PeriodicalExecuter, {
-+  initialize: function($super, element, frequency, callback) {
-+    $super(callback, frequency);
-+    this.element   = $(element);
-+    this.lastValue = this.getValue();
-+  },
-+
-+  execute: function() {
-+    var value = this.getValue();
-+    if (Object.isString(this.lastValue) && Object.isString(value) ?
-+        this.lastValue != value : String(this.lastValue) != String(value)) {
-+      this.callback(this.element, value);
-+      this.lastValue = value;
-+    }
-+  }
-+});
-+
-+Form.Element.Observer = Class.create(Abstract.TimedObserver, {
-+  getValue: function() {
-+    return Form.Element.getValue(this.element);
-+  }
-+});
-+
-+Form.Observer = Class.create(Abstract.TimedObserver, {
-+  getValue: function() {
-+    return Form.serialize(this.element);
-+  }
-+});
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Abstract.EventObserver = Class.create({
-+  initialize: function(element, callback) {
-+    this.element  = $(element);
-+    this.callback = callback;
-+
-+    this.lastValue = this.getValue();
-+    if (this.element.tagName.toLowerCase() == 'form')
-+      this.registerFormCallbacks();
-+    else
-+      this.registerCallback(this.element);
-+  },
-+
-+  onElementEvent: function() {
-+    var value = this.getValue();
-+    if (this.lastValue != value) {
-+      this.callback(this.element, value);
-+      this.lastValue = value;
-+    }
-+  },
-+
-+  registerFormCallbacks: function() {
-+    Form.getElements(this.element).each(this.registerCallback, this);
-+  },
-+
-+  registerCallback: function(element) {
-+    if (element.type) {
-+      switch (element.type.toLowerCase()) {
-+        case 'checkbox':
-+        case 'radio':
-+          Event.observe(element, 'click', this.onElementEvent.bind(this));
-+          break;
-+        default:
-+          Event.observe(element, 'change', this.onElementEvent.bind(this));
-+          break;
-+      }
-+    }
-+  }
-+});
-+
-+Form.Element.EventObserver = Class.create(Abstract.EventObserver, {
-+  getValue: function() {
-+    return Form.Element.getValue(this.element);
-+  }
-+});
-+
-+Form.EventObserver = Class.create(Abstract.EventObserver, {
-+  getValue: function() {
-+    return Form.serialize(this.element);
-+  }
-+});
-+if (!window.Event) var Event = { };
-+
-+Object.extend(Event, {
-+  KEY_BACKSPACE: 8,
-+  KEY_TAB:       9,
-+  KEY_RETURN:   13,
-+  KEY_ESC:      27,
-+  KEY_LEFT:     37,
-+  KEY_UP:       38,
-+  KEY_RIGHT:    39,
-+  KEY_DOWN:     40,
-+  KEY_DELETE:   46,
-+  KEY_HOME:     36,
-+  KEY_END:      35,
-+  KEY_PAGEUP:   33,
-+  KEY_PAGEDOWN: 34,
-+  KEY_INSERT:   45,
-+
-+  cache: { },
-+
-+  relatedTarget: function(event) {
-+    var element;
-+    switch(event.type) {
-+      case 'mouseover': element = event.fromElement; break;
-+      case 'mouseout':  element = event.toElement;   break;
-+      default: return null;
-+    }
-+    return Element.extend(element);
-+  }
-+});
-+
-+Event.Methods = (function() {
-+  var isButton;
-+
-+  if (Prototype.Browser.IE) {
-+    var buttonMap = { 0: 1, 1: 4, 2: 2 };
-+    isButton = function(event, code) {
-+      return event.button == buttonMap[code];
-+    };
-+
-+  } else if (Prototype.Browser.WebKit) {
-+    isButton = function(event, code) {
-+      switch (code) {
-+        case 0: return event.which == 1 && !event.metaKey;
-+        case 1: return event.which == 1 && event.metaKey;
-+        default: return false;
-+      }
-+    };
-+
-+  } else {
-+    isButton = function(event, code) {
-+      return event.which ? (event.which === code + 1) : (event.button === code);
-+    };
-+  }
-+
-+  return {
-+    isLeftClick:   function(event) { return isButton(event, 0) },
-+    isMiddleClick: function(event) { return isButton(event, 1) },
-+    isRightClick:  function(event) { return isButton(event, 2) },
-+
-+    element: function(event) {
-+      var node = Event.extend(event).target;
-+      return Element.extend(node.nodeType == Node.TEXT_NODE ? node.parentNode : node);
-+    },
-+
-+    findElement: function(event, expression) {
-+      var element = Event.element(event);
-+      if (!expression) return element;
-+      var elements = [element].concat(element.ancestors());
-+      return Selector.findElement(elements, expression, 0);
-+    },
-+
-+    pointer: function(event) {
-+      return {
-+        x: event.pageX || (event.clientX +
-+          (document.documentElement.scrollLeft || document.body.scrollLeft)),
-+        y: event.pageY || (event.clientY +
-+          (document.documentElement.scrollTop || document.body.scrollTop))
-+      };
-+    },
-+
-+    pointerX: function(event) { return Event.pointer(event).x },
-+    pointerY: function(event) { return Event.pointer(event).y },
-+
-+    stop: function(event) {
-+      Event.extend(event);
-+      event.preventDefault();
-+      event.stopPropagation();
-+      event.stopped = true;
-+    }
-+  };
-+})();
-+
-+Event.extend = (function() {
-+  var methods = Object.keys(Event.Methods).inject({ }, function(m, name) {
-+    m[name] = Event.Methods[name].methodize();
-+    return m;
-+  });
-+
-+  if (Prototype.Browser.IE) {
-+    Object.extend(methods, {
-+      stopPropagation: function() { this.cancelBubble = true },
-+      preventDefault:  function() { this.returnValue = false },
-+      inspect: function() { return "[object Event]" }
-+    });
-+
-+    return function(event) {
-+      if (!event) return false;
-+      if (event._extendedByPrototype) return event;
-+
-+      event._extendedByPrototype = Prototype.emptyFunction;
-+      var pointer = Event.pointer(event);
-+      Object.extend(event, {
-+        target: event.srcElement,
-+        relatedTarget: Event.relatedTarget(event),
-+        pageX:  pointer.x,
-+        pageY:  pointer.y
-+      });
-+      return Object.extend(event, methods);
-+    };
-+
-+  } else {
-+    Event.prototype = Event.prototype || document.createEvent("HTMLEvents").__proto__;
-+    Object.extend(Event.prototype, methods);
-+    return Prototype.K;
-+  }
-+})();
-+
-+Object.extend(Event, (function() {
-+  var cache = Event.cache;
-+
-+  function getEventID(element) {
-+    if (element._prototypeEventID) return element._prototypeEventID[0];
-+    arguments.callee.id = arguments.callee.id || 1;
-+    return element._prototypeEventID = [++arguments.callee.id];
-+  }
-+
-+  function getDOMEventName(eventName) {
-+    if (eventName && eventName.include(':')) return "dataavailable";
-+    return eventName;
-+  }
-+
-+  function getCacheForID(id) {
-+    return cache[id] = cache[id] || { };
-+  }
-+
-+  function getWrappersForEventName(id, eventName) {
-+    var c = getCacheForID(id);
-+    return c[eventName] = c[eventName] || [];
-+  }
-+
-+  function createWrapper(element, eventName, handler) {
-+    var id = getEventID(element);
-+    var c = getWrappersForEventName(id, eventName);
-+    if (c.pluck("handler").include(handler)) return false;
-+
-+    var wrapper = function(event) {
-+      if (!Event || !Event.extend ||
-+        (event.eventName && event.eventName != eventName))
-+          return false;
-+
-+      Event.extend(event);
-+      handler.call(element, event);
-+    };
-+
-+    wrapper.handler = handler;
-+    c.push(wrapper);
-+    return wrapper;
-+  }
-+
-+  function findWrapper(id, eventName, handler) {
-+    var c = getWrappersForEventName(id, eventName);
-+    return c.find(function(wrapper) { return wrapper.handler == handler });
-+  }
-+
-+  function destroyWrapper(id, eventName, handler) {
-+    var c = getCacheForID(id);
-+    if (!c[eventName]) return false;
-+    c[eventName] = c[eventName].without(findWrapper(id, eventName, handler));
-+  }
-+
-+  function destroyCache() {
-+    for (var id in cache)
-+      for (var eventName in cache[id])
-+        cache[id][eventName] = null;
-+  }
-+
-+  if (window.attachEvent) {
-+    window.attachEvent("onunload", destroyCache);
-+  }
-+
-+  return {
-+    observe: function(element, eventName, handler) {
-+      element = $(element);
-+      var name = getDOMEventName(eventName);
-+
-+      var wrapper = createWrapper(element, eventName, handler);
-+      if (!wrapper) return element;
-+
-+      if (element.addEventListener) {
-+        element.addEventListener(name, wrapper, false);
-+      } else {
-+        element.attachEvent("on" + name, wrapper);
-+      }
-+
-+      return element;
-+    },
-+
-+    stopObserving: function(element, eventName, handler) {
-+      element = $(element);
-+      var id = getEventID(element), name = getDOMEventName(eventName);
-+
-+      if (!handler && eventName) {
-+        getWrappersForEventName(id, eventName).each(function(wrapper) {
-+          element.stopObserving(eventName, wrapper.handler);
-+        });
-+        return element;
-+
-+      } else if (!eventName) {
-+        Object.keys(getCacheForID(id)).each(function(eventName) {
-+          element.stopObserving(eventName);
-+        });
-+        return element;
-+      }
-+
-+      var wrapper = findWrapper(id, eventName, handler);
-+      if (!wrapper) return element;
-+
-+      if (element.removeEventListener) {
-+        element.removeEventListener(name, wrapper, false);
-+      } else {
-+        element.detachEvent("on" + name, wrapper);
-+      }
-+
-+      destroyWrapper(id, eventName, handler);
-+
-+      return element;
-+    },
-+
-+    fire: function(element, eventName, memo) {
-+      element = $(element);
-+      if (element == document && document.createEvent && !element.dispatchEvent)
-+        element = document.documentElement;
-+
-+      var event;
-+      if (document.createEvent) {
-+        event = document.createEvent("HTMLEvents");
-+        event.initEvent("dataavailable", true, true);
-+      } else {
-+        event = document.createEventObject();
-+        event.eventType = "ondataavailable";
-+      }
-+
-+      event.eventName = eventName;
-+      event.memo = memo || { };
-+
-+      if (document.createEvent) {
-+        element.dispatchEvent(event);
-+      } else {
-+        element.fireEvent(event.eventType, event);
-+      }
-+
-+      return Event.extend(event);
-+    }
-+  };
-+})());
-+
-+Object.extend(Event, Event.Methods);
-+
-+Element.addMethods({
-+  fire:          Event.fire,
-+  observe:       Event.observe,
-+  stopObserving: Event.stopObserving
-+});
-+
-+Object.extend(document, {
-+  fire:          Element.Methods.fire.methodize(),
-+  observe:       Element.Methods.observe.methodize(),
-+  stopObserving: Element.Methods.stopObserving.methodize(),
-+  loaded:        false
-+});
-+
-+(function() {
-+  /* Support for the DOMContentLoaded event is based on work by Dan Webb,
-+     Matthias Miller, Dean Edwards and John Resig. */
-+
-+  var timer;
-+
-+  function fireContentLoadedEvent() {
-+    if (document.loaded) return;
-+    if (timer) window.clearInterval(timer);
-+    document.fire("dom:loaded");
-+    document.loaded = true;
-+  }
-+
-+  if (document.addEventListener) {
-+    if (Prototype.Browser.WebKit) {
-+      timer = window.setInterval(function() {
-+        if (/loaded|complete/.test(document.readyState))
-+          fireContentLoadedEvent();
-+      }, 0);
-+
-+      Event.observe(window, "load", fireContentLoadedEvent);
-+
-+    } else {
-+      document.addEventListener("DOMContentLoaded",
-+        fireContentLoadedEvent, false);
-+    }
-+
-+  } else {
-+    document.write("&lt;script id=__onDOMContentLoaded defer src=//:>&lt;\/script>");
-+    $("__onDOMContentLoaded").onreadystatechange = function() {
-+      if (this.readyState == "complete") {
-+        this.onreadystatechange = null;
-+        fireContentLoadedEvent();
-+      }
-+    };
-+  }
-+})();
-+/*------------------------------- DEPRECATED -------------------------------*/
-+
-+Hash.toQueryString = Object.toQueryString;
-+
-+var Toggle = { display: Element.toggle };
-+
-+Element.Methods.childOf = Element.Methods.descendantOf;
-+
-+var Insertion = {
-+  Before: function(element, content) {
-+    return Element.insert(element, {before:content});
-+  },
-+
-+  Top: function(element, content) {
-+    return Element.insert(element, {top:content});
-+  },
-+
-+  Bottom: function(element, content) {
-+    return Element.insert(element, {bottom:content});
-+  },
-+
-+  After: function(element, content) {
-+    return Element.insert(element, {after:content});
-+  }
-+};
-+
-+var $continue = new Error('"throw $continue" is deprecated, use "return" instead');
-+
-+// This should be moved to script.aculo.us; notice the deprecated methods
-+// further below, that map to the newer Element methods.
-+var Position = {
-+  // set to true if needed, warning: firefox performance problems
-+  // NOT neeeded for page scrolling, only if draggable contained in
-+  // scrollable elements
-+  includeScrollOffsets: false,
-+
-+  // must be called before calling withinIncludingScrolloffset, every time the
-+  // page is scrolled
-+  prepare: function() {
-+    this.deltaX =  window.pageXOffset
-+                || document.documentElement.scrollLeft
-+                || document.body.scrollLeft
-+                || 0;
-+    this.deltaY =  window.pageYOffset
-+                || document.documentElement.scrollTop
-+                || document.body.scrollTop
-+                || 0;
-+  },
-+
-+  // caches x/y coordinate pair to use with overlap
-+  within: function(element, x, y) {
-+    if (this.includeScrollOffsets)
-+      return this.withinIncludingScrolloffsets(element, x, y);
-+    this.xcomp = x;
-+    this.ycomp = y;
-+    this.offset = Element.cumulativeOffset(element);
-+
-+    return (y >= this.offset[1] &&
-+            y &lt;  this.offset[1] + element.offsetHeight &&
-+            x >= this.offset[0] &&
-+            x &lt;  this.offset[0] + element.offsetWidth);
-+  },
-+
-+  withinIncludingScrolloffsets: function(element, x, y) {
-+    var offsetcache = Element.cumulativeScrollOffset(element);
-+
-+    this.xcomp = x + offsetcache[0] - this.deltaX;
-+    this.ycomp = y + offsetcache[1] - this.deltaY;
-+    this.offset = Element.cumulativeOffset(element);
-+
-+    return (this.ycomp >= this.offset[1] &&
-+            this.ycomp &lt;  this.offset[1] + element.offsetHeight &&
-+            this.xcomp >= this.offset[0] &&
-+            this.xcomp &lt;  this.offset[0] + element.offsetWidth);
-+  },
-+
-+  // within must be called directly before
-+  overlap: function(mode, element) {
-+    if (!mode) return 0;
-+    if (mode == 'vertical')
-+      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
-+        element.offsetHeight;
-+    if (mode == 'horizontal')
-+      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
-+        element.offsetWidth;
-+  },
-+
-+  // Deprecation layer -- use newer Element methods now (1.5.2).
-+
-+  cumulativeOffset: Element.Methods.cumulativeOffset,
-+
-+  positionedOffset: Element.Methods.positionedOffset,
-+
-+  absolutize: function(element) {
-+    Position.prepare();
-+    return Element.absolutize(element);
-+  },
-+
-+  relativize: function(element) {
-+    Position.prepare();
-+    return Element.relativize(element);
-+  },
-+
-+  realOffset: Element.Methods.cumulativeScrollOffset,
-+
-+  offsetParent: Element.Methods.getOffsetParent,
-+
-+  page: Element.Methods.viewportOffset,
-+
-+  clone: function(source, target, options) {
-+    options = options || { };
-+    return Element.clonePosition(target, source, options);
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+if (!document.getElementsByClassName) document.getElementsByClassName = function(instanceMethods){
-+  function iter(name) {
-+    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + name + " ')]";
-+  }
-+
-+  instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ?
-+  function(element, className) {
-+    className = className.toString().strip();
-+    var cond = /\s/.test(className) ? $w(className).map(iter).join('') : iter(className);
-+    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
-+  } : function(element, className) {
-+    className = className.toString().strip();
-+    var elements = [], classNames = (/\s/.test(className) ? $w(className) : null);
-+    if (!classNames && !className) return elements;
-+
-+    var nodes = $(element).getElementsByTagName('*');
-+    className = ' ' + className + ' ';
-+
-+    for (var i = 0, child, cn; child = nodes[i]; i++) {
-+      if (child.className && (cn = ' ' + child.className + ' ') && (cn.include(className) ||
-+          (classNames && classNames.all(function(name) {
-+            return !name.toString().blank() && cn.include(' ' + name + ' ');
-+          }))))
-+        elements.push(Element.extend(child));
-+    }
-+    return elements;
-+  };
-+
-+  return function(className, parentElement) {
-+    return $(parentElement || document.body).getElementsByClassName(className);
-+  };
-+}(Element.Methods);
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Element.ClassNames = Class.create();
-+Element.ClassNames.prototype = {
-+  initialize: function(element) {
-+    this.element = $(element);
-+  },
-+
-+  _each: function(iterator) {
-+    this.element.className.split(/\s+/).select(function(name) {
-+      return name.length > 0;
-+    })._each(iterator);
-+  },
-+
-+  set: function(className) {
-+    this.element.className = className;
-+  },
-+
-+  add: function(classNameToAdd) {
-+    if (this.include(classNameToAdd)) return;
-+    this.set($A(this).concat(classNameToAdd).join(' '));
-+  },
-+
-+  remove: function(classNameToRemove) {
-+    if (!this.include(classNameToRemove)) return;
-+    this.set($A(this).without(classNameToRemove).join(' '));
-+  },
-+
-+  toString: function() {
-+    return $A(this).join(' ');
-+  }
-+};
-+
-+Object.extend(Element.ClassNames.prototype, Enumerable);
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Element.addMethods();
-\ No newline at end of file
-diff --git a/diff/__others/v2/test.html b/diff/__others/v2/test.html
-new file mode 100755
-index 0000000..159acb4
---- /dev/null
-+++ b/diff/__others/v2/test.html
-@@ -0,0 +1,862 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Details for commit&lt;/title>
-+	&lt;link rel="stylesheet" href="commits.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;link rel="stylesheet" href="diff_style.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="prototype.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script type="text/javascript" charset="utf-8">
-+
-+	var doeHet = function() {
-+		document.getElementById("details").innerHTML = document.getElementById("diff").value.replace(/&lt;/g, "&lt;");
-+		highlightDiffs();
-+	}
-+	&lt;/script>
-+&lt;/head>
-+
-+&lt;body style="padding: 0px; border: 0px" onLoad="doeHet()">
-+	&lt;textarea style='display:none' id="diff" rows="8" cols="40">
-+diff --git a/English.lproj/RepositoryWindow.xib b/English.lproj/RepositoryWindow.xib
-+index 6cd49fa..7474752 100644
-+--- a/English.lproj/RepositoryWindow.xib
-++++ b/English.lproj/RepositoryWindow.xib
-+@@ -538,55 +538,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes>
-+ 				&lt;string key="NSMaxSize"&gt;{3.40282e+38, 3.40282e+38}&lt;/string&gt;
-+ 				&lt;string key="NSFrameAutosaveName"&gt;GitX&lt;/string&gt;
-+ 			&lt;/object&gt;
-+-			&lt;object class="NSToolbarItem" id="562497830"&gt;
-+-				&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-+-					&lt;characters key="NS.bytes"&gt;B6D80172-2D01-49BD-8E3A-2F1D9F672390&lt;/characters&gt;
-+-				&lt;/object&gt;
-+-				&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-+-				&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-+-				&lt;nil key="NSToolbarItemToolTip"/&gt;
-+-				&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="469221894"&gt;
-+-					&lt;nil key="NSNextResponder"/&gt;
-+-					&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-+-					&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-+-					&lt;int key="NSTag"&gt;3&lt;/int&gt;
-+-					&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-+-					&lt;object class="NSSegmentedCell" key="NSCell" id="1071657361"&gt;
-+-						&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-+-						&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-+-						&lt;object class="NSFont" key="NSSupport"&gt;
-+-							&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-+-							&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-+-							&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="NSControlView" ref="469221894"/&gt;
-+-						&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;object class="NSSegmentItem"&gt;
-+-								&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-+-								&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-+-							&lt;/object&gt;
-+-							&lt;object class="NSSegmentItem"&gt;
-+-								&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-+-								&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-+-								&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-+-							&lt;/object&gt;
-+-						&lt;/object&gt;
-+-						&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-+-						&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-+-					&lt;/object&gt;
-+-				&lt;/object&gt;
-+-				&lt;nil key="NSToolbarItemImage"/&gt;
-+-				&lt;nil key="NSToolbarItemTarget"/&gt;
-+-				&lt;nil key="NSToolbarItemAction"/&gt;
-+-				&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-+-				&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-+-				&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-+-				&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-+-				&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-+-				&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-+-				&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-+-			&lt;/object&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBObjectContainer" key="IBDocument.Objects"&gt;
-+ 			&lt;object class="NSMutableArray" key="connectionRecords"&gt;
-+@@ -607,30 +558,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;int key="connectionID"&gt;292&lt;/int&gt;
-+ 				&lt;/object&gt;
-+-				&lt;object class="IBConnectionRecord"&gt;
-+-					&lt;object class="IBBindingConnection" key="connection"&gt;
-+-						&lt;string key="label"&gt;selectedIndex: selectedViewIndex&lt;/string&gt;
-+-						&lt;reference key="source" ref="469221894"/&gt;
-+-						&lt;reference key="destination" ref="1001"/&gt;
-+-						&lt;object class="NSNibBindingConnector" key="connector"&gt;
-+-							&lt;reference key="NSSource" ref="469221894"/&gt;
-+-							&lt;reference key="NSDestination" ref="1001"/&gt;
-+-							&lt;string key="NSLabel"&gt;selectedIndex: selectedViewIndex&lt;/string&gt;
-+-							&lt;string key="NSBinding"&gt;selectedIndex&lt;/string&gt;
-+-							&lt;string key="NSKeyPath"&gt;selectedViewIndex&lt;/string&gt;
-+-							&lt;int key="NSNibBindingConnectorVersion"&gt;2&lt;/int&gt;
-+-						&lt;/object&gt;
-+-					&lt;/object&gt;
-+-					&lt;int key="connectionID"&gt;329&lt;/int&gt;
-+-				&lt;/object&gt;
-+-				&lt;object class="IBConnectionRecord"&gt;
-+-					&lt;object class="IBOutletConnection" key="connection"&gt;
-+-						&lt;string key="label"&gt;viewSelector&lt;/string&gt;
-+-						&lt;reference key="source" ref="1001"/&gt;
-+-						&lt;reference key="destination" ref="562497830"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;int key="connectionID"&gt;350&lt;/int&gt;
-+-				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="IBMutableOrderedSet" key="objectRecords"&gt;
-+ 				&lt;object class="NSArray" key="orderedObjects"&gt;
-+@@ -681,29 +608,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 						&lt;reference key="parent" ref="491121796"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;324&lt;/int&gt;
-+-						&lt;reference key="object" ref="562497830"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="469221894"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="1002"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;325&lt;/int&gt;
-+-						&lt;reference key="object" ref="469221894"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="1071657361"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="562497830"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;326&lt;/int&gt;
-+-						&lt;reference key="object" ref="1071657361"/&gt;
-+-						&lt;reference key="parent" ref="469221894"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;342&lt;/int&gt;
-+ 						&lt;reference key="object" ref="283658631"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -772,8 +676,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;3.windowTemplate.hasMinSize&lt;/string&gt;
-+ 					&lt;string&gt;3.windowTemplate.maxSize&lt;/string&gt;
-+ 					&lt;string&gt;3.windowTemplate.minSize&lt;/string&gt;
-+-					&lt;string&gt;325.IBPluginDependency&lt;/string&gt;
-+-					&lt;string&gt;326.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;342.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;343.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;344.IBPluginDependency&lt;/string&gt;
-+@@ -790,9 +692,9 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+-					&lt;string&gt;{{312, 315}, {850, 418}}&lt;/string&gt;
-++					&lt;string&gt;{{1047, -144}, {850, 418}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;{{312, 315}, {850, 418}}&lt;/string&gt;
-++					&lt;string&gt;{{1047, -144}, {850, 418}}&lt;/string&gt;
-+ 					&lt;integer value="1" id="9"/&gt;
-+ 					&lt;reference ref="9"/&gt;
-+ 					&lt;string&gt;{{15, 196}, {850, 418}}&lt;/string&gt;
-+@@ -809,8 +711,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;reference ref="9"/&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+diff --git a/PBGitCommitView.xib b/PBGitCommitView.xib
-+index 0260e41..007010b 100644
-+--- a/PBGitCommitView.xib
-++++ b/PBGitCommitView.xib
-+@@ -898,6 +898,120 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 			&lt;object class="NSCustomObject" id="1007648253"&gt;
-+ 				&lt;string key="NSClassName"&gt;PBWebChangesController&lt;/string&gt;
-+ 			&lt;/object&gt;
-++			&lt;object class="NSToolbar" id="570289088"&gt;
-++				&lt;object class="NSMutableString" key="NSToolbarIdentifier"&gt;
-++					&lt;characters key="NS.bytes"&gt;F94591D2-A188-4B08-A8B2-8C8CEC03CB14&lt;/characters&gt;
-++				&lt;/object&gt;
-++				&lt;nil key="NSToolbarDelegate"/&gt;
-++				&lt;bool key="NSToolbarPrefersToBeShown"&gt;YES&lt;/bool&gt;
-++				&lt;bool key="NSToolbarShowsBaselineSeparator"&gt;YES&lt;/bool&gt;
-++				&lt;bool key="NSToolbarAllowsUserCustomization"&gt;NO&lt;/bool&gt;
-++				&lt;bool key="NSToolbarAutosavesConfiguration"&gt;NO&lt;/bool&gt;
-++				&lt;int key="NSToolbarDisplayMode"&gt;1&lt;/int&gt;
-++				&lt;int key="NSToolbarSizeMode"&gt;1&lt;/int&gt;
-++				&lt;object class="NSMutableDictionary" key="NSToolbarIBIdentifiedItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;object class="NSMutableArray" key="dict.sortedKeys"&gt;
-++						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;string&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/string&gt;
-++						&lt;string&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="NSMutableArray" key="dict.values"&gt;
-++						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;object class="NSToolbarItem" id="271300712"&gt;
-++							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-++								&lt;characters key="NS.bytes"&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/characters&gt;
-++							&lt;/object&gt;
-++							&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="20026036"&gt;
-++								&lt;nil key="NSNextResponder"/&gt;
-++								&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-++								&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-++								&lt;int key="NSTag"&gt;3&lt;/int&gt;
-++								&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-++								&lt;object class="NSSegmentedCell" key="NSCell" id="796615469"&gt;
-++									&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-++									&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-++									&lt;reference key="NSSupport" ref="554612341"/&gt;
-++									&lt;reference key="NSControlView" ref="20026036"/&gt;
-++									&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-++										&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-++											&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++									&lt;/object&gt;
-++									&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-++									&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++						&lt;/object&gt;
-++						&lt;object class="NSToolbarSeparatorItem" id="354340151"&gt;
-++							&lt;string key="NSToolbarItemIdentifier"&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++							&lt;string key="NSToolbarItemLabel"/&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;Separator&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;nil key="NSToolbarItemView"/&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{12, 5}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{12, 1000}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;-1&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++							&lt;object class="NSMenuItem" key="NSToolbarItemMenuFormRepresentation"&gt;
-++								&lt;bool key="NSIsDisabled"&gt;YES&lt;/bool&gt;
-++								&lt;bool key="NSIsSeparator"&gt;YES&lt;/bool&gt;
-++								&lt;string key="NSTitle"/&gt;
-++								&lt;string key="NSKeyEquiv"/&gt;
-++								&lt;int key="NSKeyEquivModMask"&gt;1048576&lt;/int&gt;
-++								&lt;int key="NSMnemonicLoc"&gt;2147483647&lt;/int&gt;
-++								&lt;object class="NSCustomResource" key="NSOnImage"&gt;
-++									&lt;string key="NSClassName"&gt;NSImage&lt;/string&gt;
-++									&lt;string key="NSResourceName"&gt;NSMenuCheckmark&lt;/string&gt;
-++								&lt;/object&gt;
-++								&lt;object class="NSCustomResource" key="NSMixedImage"&gt;
-++									&lt;string key="NSClassName"&gt;NSImage&lt;/string&gt;
-++									&lt;string key="NSResourceName"&gt;NSMenuMixedState&lt;/string&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++						&lt;/object&gt;
-++					&lt;/object&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSArray" key="NSToolbarIBAllowedItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="271300712"/&gt;
-++					&lt;reference ref="354340151"/&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSMutableArray" key="NSToolbarIBDefaultItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="271300712"/&gt;
-++					&lt;reference ref="354340151"/&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSMutableArray" key="NSToolbarIBSelectableItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++				&lt;/object&gt;
-++			&lt;/object&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBObjectContainer" key="IBDocument.Objects"&gt;
-+ 			&lt;object class="NSMutableArray" key="connectionRecords"&gt;
-+@@ -1126,6 +1240,14 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;int key="connectionID"&gt;224&lt;/int&gt;
-+ 				&lt;/object&gt;
-++				&lt;object class="IBConnectionRecord"&gt;
-++					&lt;object class="IBOutletConnection" key="connection"&gt;
-++						&lt;string key="label"&gt;viewToolbar&lt;/string&gt;
-++						&lt;reference key="source" ref="1001"/&gt;
-++						&lt;reference key="destination" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;int key="connectionID"&gt;241&lt;/int&gt;
-++				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="IBMutableOrderedSet" key="objectRecords"&gt;
-+ 				&lt;object class="NSArray" key="orderedObjects"&gt;
-+@@ -1419,6 +1541,45 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 						&lt;reference key="object" ref="221814497"/&gt;
-+ 						&lt;reference key="parent" ref="750704519"/&gt;
-+ 					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;225&lt;/int&gt;
-++						&lt;reference key="object" ref="570289088"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="271300712"/&gt;
-++							&lt;reference ref="354340151"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="1002"/&gt;
-++						&lt;string key="objectName"&gt;Commit Toolbar&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;226&lt;/int&gt;
-++						&lt;reference key="object" ref="271300712"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="20026036"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;227&lt;/int&gt;
-++						&lt;reference key="object" ref="354340151"/&gt;
-++						&lt;reference key="parent" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;239&lt;/int&gt;
-++						&lt;reference key="object" ref="20026036"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="796615469"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="271300712"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;240&lt;/int&gt;
-++						&lt;reference key="object" ref="796615469"/&gt;
-++						&lt;reference key="parent" ref="20026036"/&gt;
-++					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSMutableDictionary" key="flattenedProperties"&gt;
-+@@ -1446,6 +1607,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;string&gt;164.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;2.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;217.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.IBEditorWindowLastContentRect&lt;/string&gt;
-++					&lt;string&gt;225.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.editorWindowContentRectSynchronizationRect&lt;/string&gt;
-++					&lt;string&gt;227.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;239.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;240.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;42.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;45.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;46.IBPluginDependency&lt;/string&gt;
-+@@ -1482,6 +1649,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;{{341, 837}, {616, 169}}&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;{{132, 614}, {616, 0}}&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+@@ -1516,7 +1689,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;nil key="sourceID"/&gt;
-+-			&lt;int key="maxID"&gt;224&lt;/int&gt;
-++			&lt;int key="maxID"&gt;241&lt;/int&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBClassDescriber" key="IBDocument.Classes"&gt;
-+ 			&lt;object class="NSMutableArray" key="referencedPartialClassDescriptions"&gt;
-+diff --git a/PBGitHistoryView.xib b/PBGitHistoryView.xib
-+index e008bb9..4df97b3 100644
-+--- a/PBGitHistoryView.xib
-++++ b/PBGitHistoryView.xib
-+@@ -95,7 +95,7 @@
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSToolbar" id="65173285"&gt;
-+ 				&lt;object class="NSMutableString" key="NSToolbarIdentifier"&gt;
-+-					&lt;characters key="NS.bytes"&gt;B9F1B847-0DC3-4C13-A685-5F5A2D64BC93&lt;/characters&gt;
-++					&lt;characters key="NS.bytes"&gt;F94591D2-A188-4B08-A8B2-8C8CEC03CB14&lt;/characters&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;nil key="NSToolbarDelegate"/&gt;
-+ 				&lt;bool key="NSToolbarPrefersToBeShown"&gt;YES&lt;/bool&gt;
-+@@ -108,12 +108,63 @@
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+ 					&lt;object class="NSMutableArray" key="dict.sortedKeys"&gt;
-+ 						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;string&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/string&gt;
-+ 						&lt;string&gt;7FFB691C-2D2F-49A9-997F-AE1AE8BFF3F1&lt;/string&gt;
-+ 						&lt;string&gt;99C2C9EB-AE16-42A9-BE52-46CE903E9AF9&lt;/string&gt;
-+ 						&lt;string&gt;NSToolbarFlexibleSpaceItem&lt;/string&gt;
-++						&lt;string&gt;NSToolbarSeparatorItem&lt;/string&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="NSMutableArray" key="dict.values"&gt;
-+ 						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;object class="NSToolbarItem" id="215578734"&gt;
-++							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-++								&lt;characters key="NS.bytes"&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/characters&gt;
-++							&lt;/object&gt;
-++							&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="764711234"&gt;
-++								&lt;nil key="NSNextResponder"/&gt;
-++								&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-++								&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-++								&lt;int key="NSTag"&gt;3&lt;/int&gt;
-++								&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-++								&lt;object class="NSSegmentedCell" key="NSCell" id="266464607"&gt;
-++									&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-++									&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-++									&lt;object class="NSFont" key="NSSupport" id="924107556"&gt;
-++										&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-++										&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-++										&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-++									&lt;/object&gt;
-++									&lt;reference key="NSControlView" ref="764711234"/&gt;
-++									&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-++										&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-++											&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++									&lt;/object&gt;
-++									&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-++									&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++						&lt;/object&gt;
-+ 						&lt;object class="NSToolbarItem" id="479447135"&gt;
-+ 							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-+ 								&lt;characters key="NS.bytes"&gt;7FFB691C-2D2F-49A9-997F-AE1AE8BFF3F1&lt;/characters&gt;
-+@@ -131,11 +182,7 @@
-+ 								&lt;object class="NSSearchFieldCell" key="NSCell" id="449521666"&gt;
-+ 									&lt;int key="NSCellFlags"&gt;343014976&lt;/int&gt;
-+ 									&lt;int key="NSCellFlags2"&gt;268436480&lt;/int&gt;
-+-									&lt;object class="NSFont" key="NSSupport" id="924107556"&gt;
-+-										&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-+-										&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-+-										&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-+-									&lt;/object&gt;
-++									&lt;reference key="NSSupport" ref="924107556"/&gt;
-+ 									&lt;string key="NSPlaceholderString"&gt;Subject&lt;/string&gt;
-+ 									&lt;reference key="NSControlView" ref="845792858"/&gt;
-+ 									&lt;bool key="NSDrawsBackground"&gt;YES&lt;/bool&gt;
-+@@ -330,16 +377,47 @@
-+ 								&lt;reference key="NSMixedImage" ref="746375230"/&gt;
-+ 							&lt;/object&gt;
-+ 						&lt;/object&gt;
-++						&lt;object class="NSToolbarSeparatorItem" id="776753395"&gt;
-++							&lt;string key="NSToolbarItemIdentifier"&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++							&lt;string key="NSToolbarItemLabel"/&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;Separator&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;nil key="NSToolbarItemView"/&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{12, 5}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{12, 1000}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;-1&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++							&lt;object class="NSMenuItem" key="NSToolbarItemMenuFormRepresentation"&gt;
-++								&lt;bool key="NSIsDisabled"&gt;YES&lt;/bool&gt;
-++								&lt;bool key="NSIsSeparator"&gt;YES&lt;/bool&gt;
-++								&lt;string key="NSTitle"/&gt;
-++								&lt;string key="NSKeyEquiv"/&gt;
-++								&lt;int key="NSKeyEquivModMask"&gt;1048576&lt;/int&gt;
-++								&lt;int key="NSMnemonicLoc"&gt;2147483647&lt;/int&gt;
-++								&lt;reference key="NSOnImage" ref="908677745"/&gt;
-++								&lt;reference key="NSMixedImage" ref="746375230"/&gt;
-++							&lt;/object&gt;
-++						&lt;/object&gt;
-+ 					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;object class="NSArray" key="NSToolbarIBAllowedItems"&gt;
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="215578734"/&gt;
-++					&lt;reference ref="776753395"/&gt;
-+ 					&lt;reference ref="455812118"/&gt;
-+ 					&lt;reference ref="633367776"/&gt;
-+ 					&lt;reference ref="479447135"/&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;object class="NSMutableArray" key="NSToolbarIBDefaultItems"&gt;
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="215578734"/&gt;
-++					&lt;reference ref="776753395"/&gt;
-+ 					&lt;reference ref="455812118"/&gt;
-+ 					&lt;reference ref="633367776"/&gt;
-+ 					&lt;reference ref="479447135"/&gt;
-+@@ -2053,6 +2131,93 @@
-+ 						&lt;reference key="parent" ref="555671215"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;3&lt;/int&gt;
-++						&lt;reference key="object" ref="663765878"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="942510576"/&gt;
-++							&lt;reference ref="452331733"/&gt;
-++							&lt;reference ref="152625445"/&gt;
-++							&lt;reference ref="254268962"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="202620420"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;30&lt;/int&gt;
-++						&lt;reference key="object" ref="942510576"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;29&lt;/int&gt;
-++						&lt;reference key="object" ref="452331733"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;28&lt;/int&gt;
-++						&lt;reference key="object" ref="152625445"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;27&lt;/int&gt;
-++						&lt;reference key="object" ref="254268962"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="976830280"/&gt;
-++							&lt;reference ref="1025472344"/&gt;
-++							&lt;reference ref="792589327"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++						&lt;string key="objectName"&gt;Commit List&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;33&lt;/int&gt;
-++						&lt;reference key="object" ref="976830280"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="853819733"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;32&lt;/int&gt;
-++						&lt;reference key="object" ref="1025472344"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="977219207"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;31&lt;/int&gt;
-++						&lt;reference key="object" ref="792589327"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="746918365"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;36&lt;/int&gt;
-++						&lt;reference key="object" ref="746918365"/&gt;
-++						&lt;reference key="parent" ref="792589327"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;35&lt;/int&gt;
-++						&lt;reference key="object" ref="977219207"/&gt;
-++						&lt;reference key="parent" ref="1025472344"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;34&lt;/int&gt;
-++						&lt;reference key="object" ref="853819733"/&gt;
-++						&lt;reference key="parent" ref="976830280"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;190&lt;/int&gt;
-++						&lt;reference key="object" ref="886549521"/&gt;
-++						&lt;reference key="parent" ref="1002"/&gt;
-++						&lt;string key="objectName"&gt;Branches Controller&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;113&lt;/int&gt;
-+ 						&lt;reference key="object" ref="65173285"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -2060,6 +2225,8 @@
-+ 							&lt;reference ref="455812118"/&gt;
-+ 							&lt;reference ref="633367776"/&gt;
-+ 							&lt;reference ref="479447135"/&gt;
-++							&lt;reference ref="776753395"/&gt;
-++							&lt;reference ref="215578734"/&gt;
-+ 						&lt;/object&gt;
-+ 						&lt;reference key="parent" ref="1002"/&gt;
-+ 						&lt;string key="objectName"&gt;History Toolbar&lt;/string&gt;
-+@@ -2088,6 +2255,34 @@
-+ 						&lt;reference key="parent" ref="65173285"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;222&lt;/int&gt;
-++						&lt;reference key="object" ref="776753395"/&gt;
-++						&lt;reference key="parent" ref="65173285"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;223&lt;/int&gt;
-++						&lt;reference key="object" ref="215578734"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="764711234"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="65173285"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;224&lt;/int&gt;
-++						&lt;reference key="object" ref="764711234"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="266464607"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="215578734"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;225&lt;/int&gt;
-++						&lt;reference key="object" ref="266464607"/&gt;
-++						&lt;reference key="parent" ref="764711234"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;117&lt;/int&gt;
-+ 						&lt;reference key="object" ref="845792858"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -2145,93 +2340,6 @@
-+ 						&lt;reference key="object" ref="882172208"/&gt;
-+ 						&lt;reference key="parent" ref="604026377"/&gt;
-+ 					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;3&lt;/int&gt;
-+-						&lt;reference key="object" ref="663765878"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="942510576"/&gt;
-+-							&lt;reference ref="452331733"/&gt;
-+-							&lt;reference ref="152625445"/&gt;
-+-							&lt;reference ref="254268962"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="202620420"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;30&lt;/int&gt;
-+-						&lt;reference key="object" ref="942510576"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;29&lt;/int&gt;
-+-						&lt;reference key="object" ref="452331733"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;28&lt;/int&gt;
-+-						&lt;reference key="object" ref="152625445"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;27&lt;/int&gt;
-+-						&lt;reference key="object" ref="254268962"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="976830280"/&gt;
-+-							&lt;reference ref="1025472344"/&gt;
-+-							&lt;reference ref="792589327"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-						&lt;string key="objectName"&gt;Commit List&lt;/string&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;33&lt;/int&gt;
-+-						&lt;reference key="object" ref="976830280"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="853819733"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;32&lt;/int&gt;
-+-						&lt;reference key="object" ref="1025472344"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="977219207"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;31&lt;/int&gt;
-+-						&lt;reference key="object" ref="792589327"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="746918365"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;36&lt;/int&gt;
-+-						&lt;reference key="object" ref="746918365"/&gt;
-+-						&lt;reference key="parent" ref="792589327"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;35&lt;/int&gt;
-+-						&lt;reference key="object" ref="977219207"/&gt;
-+-						&lt;reference key="parent" ref="1025472344"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;34&lt;/int&gt;
-+-						&lt;reference key="object" ref="853819733"/&gt;
-+-						&lt;reference key="parent" ref="976830280"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;190&lt;/int&gt;
-+-						&lt;reference key="object" ref="886549521"/&gt;
-+-						&lt;reference key="parent" ref="1002"/&gt;
-+-						&lt;string key="objectName"&gt;Branches Controller&lt;/string&gt;
-+-					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSMutableDictionary" key="flattenedProperties"&gt;
-+@@ -2272,6 +2380,9 @@
-+ 					&lt;string&gt;2.ImportedFromIB2&lt;/string&gt;
-+ 					&lt;string&gt;21.IBAttributePlaceholdersKey&lt;/string&gt;
-+ 					&lt;string&gt;21.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;222.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;224.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;23.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;24.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;25.IBPluginDependency&lt;/string&gt;
-+@@ -2319,7 +2430,7 @@
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;{{244, 901}, {616, 0}}&lt;/string&gt;
-++					&lt;string&gt;{{341, 957}, {616, 0}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;{{132, 614}, {616, 0}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+@@ -2360,6 +2471,9 @@
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;PBCommitList&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;integer value="0" id="8"/&gt;
-+@@ -2425,7 +2539,7 @@
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;nil key="sourceID"/&gt;
-+-			&lt;int key="maxID"&gt;217&lt;/int&gt;
-++			&lt;int key="maxID"&gt;225&lt;/int&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBClassDescriber" key="IBDocument.Classes"&gt;
-+ 			&lt;object class="NSMutableArray" key="referencedPartialClassDescriptions"&gt;
-+diff --git a/PBGitWindowController.h b/PBGitWindowController.h
-+index accde05..d243a37 100644
-+--- a/PBGitWindowController.h
-++++ b/PBGitWindowController.h
-+@@ -14,8 +14,6 @@
-+ 	int selectedViewIndex;
-+ 	IBOutlet NSView* contentView;
-+ 	NSViewController* viewController;
-+-
-+-	IBOutlet NSToolbarItem *viewSelector;
-+ }
-+
-+ @property (assign) __weak PBGitRepository *repository;
-+diff --git a/PBGitWindowController.m b/PBGitWindowController.m
-+index db530c0..18c2393 100644
-+--- a/PBGitWindowController.m
-++++ b/PBGitWindowController.m
-+@@ -87,41 +87,11 @@
-+
-+ #pragma mark -
-+ #pragma mark Toolbar Delegates
-+-- (NSToolbarItem *) toolbar:(NSToolbar *)toolbar
-+-      itemForItemIdentifier:(NSString *)itemIdentifier
-+-  willBeInsertedIntoToolbar:(BOOL)flag
-+-{
-+-	if ([itemIdentifier isEqualToString:[viewSelector itemIdentifier]])
-+-		return viewSelector;
-+-
-+-	return nil;
-+-}
-+-
-+-- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)toolbar
-+-{
-+-	NSMutableArray *array = [NSMutableArray array];
-+-	for (NSToolbarItem *item in [toolbar items])
-+-		[array addObject:[item itemIdentifier]];
-+-	return array;
-+-}
-+-
-+-- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)toolbar
-+-{
-+-	NSMutableArray *array = [NSMutableArray array];
-+-	for (NSToolbarItem *item in [toolbar items])
-+-		[array addObject:[item itemIdentifier]];
-+-	return array;
-+-}
-+
-+ - (void) useToolbar:(NSToolbar *)toolbar
-+ {
-+-	[toolbar setDelegate:self];
-+-
-+-	[toolbar insertItemWithItemIdentifier:NSToolbarSeparatorItemIdentifier atIndex:0];
-+-	[toolbar insertItemWithItemIdentifier:[viewSelector itemIdentifier] atIndex:0];
-+-
-+-	NSSegmentedControl *viewSelect = (NSSegmentedControl *)[[[toolbar items] objectAtIndex:0] view];
-+-	[viewSelect bind:@"selectedIndex" toObject:self withKeyPath:@"selectedViewIndex" options:0];
-++	NSSegmentedControl *item = (NSSegmentedControl *)[[[toolbar items] objectAtIndex:0] view];
-++	[item bind:@"selectedIndex" toObject:self withKeyPath:@"selectedViewIndex" options:0];
-+
-+ 	[self.window setToolbar:toolbar];
-+ }
-+	&lt;/textarea>
-+	&lt;pre>&lt;code class="diffcode" id='details'>&lt;/code>&lt;/pre>
-+&lt;/body>
-diff --git a/diff/__others/v3_smith/commit.html b/diff/__others/v3_smith/commit.html
-new file mode 100755
-index 0000000..c0e66c0
---- /dev/null
-+++ b/diff/__others/v3_smith/commit.html
-@@ -0,0 +1,51 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Details for commit&lt;/title>
-+	&lt;link rel="stylesheet" href="commits.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;link rel="stylesheet" href="diff_style.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;script src="prototype.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="md5.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="commit.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+&lt;/head>
-+
-+&lt;body style="padding: 0px; border: 0px">
-+	&lt;div id="rightcontent">
-+		&lt;div id="buttons">
-+			&lt;a class="servicebutton" onClick="gistie();return false" href='#'>
-+				Gist&nbsp;it
-+			&lt;/a>
-+		&lt;/div>
-+		&lt;img id="gravatar" src="">
-+	&lt;/div>
-+	&lt;table id="commit_header">
-+	&lt;tr>
-+		&lt;td class="property_name">SHA:&lt;/td>
-+		&lt;td id="commitID">&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Author:&lt;/td>
-+		&lt;td id="authorID">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Date:&lt;/td>
-+		&lt;td id="date">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr>
-+		&lt;td class="property_name">Subject:&lt;/td>
-+		&lt;td id="subjectID" style="font-weight:bold">Pieter de Bie&lt;/td>
-+	&lt;/tr>
-+	&lt;tr style="display:none">
-+		&lt;td class="property_name">Refs:&lt;/td>
-+		&lt;td id="refs">&lt;/td>
-+	&lt;/tr>
-+	&lt;/table>
-+	&lt;div id="notification" style="display:none;">
-+		&lt;img src="spinner.gif" alt="Spinner" id="spinner">&lt;/img>
-+		&lt;div id="notification_message">&lt;/div>
-+	&lt;/div>
-+	&lt;hr>
-+	&lt;pre id="message">&lt;/pre>
-+	&lt;pre>&lt;code class="diffcode" id='details'>&lt;/code>&lt;/pre>
-+&lt;/body>
-diff --git a/diff/__others/v3_smith/commit.js b/diff/__others/v3_smith/commit.js
-new file mode 100755
-index 0000000..8288f8a
---- /dev/null
-+++ b/diff/__others/v3_smith/commit.js
-@@ -0,0 +1,183 @@
-+var commit;
-+var Commit = Class.create({
-+	initialize: function(obj) {
-+		this.raw = obj.details;
-+		this.refs = obj.refs;
-+		this.object = obj;
-+
-+		var diffStart = this.raw.indexOf("\ndiff ");
-+		var messageStart = this.raw.indexOf("\n\n") + 2;
-+
-+		if (diffStart > 0) {
-+			this.message = this.raw.substring(messageStart, diffStart).gsub(/^    /m, "").escapeHTML();
-+			this.diff = this.raw.substring(diffStart);
-+		} else {
-+			this.message = this.raw.substring(messageStart).gsub(/^    /m, "").escapeHTML();
-+			this.diff = "";
-+		}
-+		this.header = this.raw.substring(0, messageStart);
-+
-+		this.sha = this.header.match(/^commit ([0-9a-f]{40,40})/)[1];
-+
-+		var match = this.header.match(/\nauthor (.*) &lt;(.*@.*)> ([0-9].*)/);
-+		this.author_name = match[1];
-+		if (!(match[2].match(/@[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/)))
-+			this.author_email = match[2];
-+
-+		this.author_date = new Date(parseInt(match[3]) * 1000);
-+
-+		match = this.header.match(/\ncommitter (.*) &lt;(.*@.*)> ([0-9].*)/);
-+		this.committer_name = match[1];
-+		this.committer_email = match[2];
-+		this.committer_date = new Date(parseInt(match[3]) * 1000);
-+
-+		this.parents = obj.parents;
-+	},
-+	reloadRefs: function() {
-+		this.refs = CommitObject.refs;
-+	}
-+});
-+
-+var notify = function(text, state) {
-+	var n = $("notification");
-+	n.style.display = "";
-+	$("notification_message").innerHTML = text;
-+
-+	// Change color
-+	if (!state) { // Busy
-+		$("spinner").style.display = "";
-+		n.setAttribute("class", "");
-+	}
-+	else if (state == 1) { // Success
-+		$("spinner").style.display = "none";
-+		n.setAttribute("class", "success");
-+	} else if (state == -1) {// Fail
-+		$("spinner").style.display = "none";
-+		n.setAttribute("class", "fail");
-+	}
-+}
-+
-+var gistie = function() {
-+	notify("Uploading code to Gistie..", 0);
-+
-+	parameters = {
-+		"file_ext[gistfile1]":      "patch",
-+		"file_name[gistfile1]":     commit.object.subject.replace(/[^a-zA-Z0-9]/g, "-") + ".patch",
-+		"file_contents[gistfile1]": commit.object.patch(),
-+	};
-+
-+	// TODO: Replace true with private preference
-+	token = Controller.getConfig_("github.token");
-+	login = Controller.getConfig_("github.user");
-+	if (token && login)
-+	{
-+		parameters.login = login;
-+		parameters.token = token;
-+	} else {
-+		parameters.private = true;
-+	}
-+
-+	new Ajax.Request("http://gist.github.com/gists", {
-+		method: 'post',
-+		parameters: parameters,
-+
-+		onSuccess: function(t) {
-+			if (m = t.responseText.match(/gist: ([a-f0-9]+)/))
-+				notify("Code uploaded to gistie &lt;a target='_new' href='http://gist.github.com/" + m[1] + "'>#" + m[1] + "&lt;/a>", 1);
-+			else
-+				notify("Pasting to Gistie failed.", -1);
-+		},
-+		onFailure: function(t) {
-+			notify("Pasting to Gistie failed.", -1);
-+		},
-+		onException: function(t) {
-+			notify("Pasting to Gistie failed.", -1);
-+		},
-+		
-+	});
-+	
-+}
-+
-+var setGravatar = function(email, image) {
-+	if (Controller && !Controller.isReachable_("www.gravatar.com"))
-+		return;
-+
-+	if (!email) {
-+		$("gravatar").src = "http://www.gravatar.com/avatar/?d=wavatar&s=60";
-+		return;
-+	}
-+
-+	$("gravatar").src = "http://www.gravatar.com/avatar/" +
-+		hex_md5(commit.author_email) + "?d=wavatar&s=60";
-+}
-+
-+var selectCommit = function(a) {
-+	Controller.selectCommit_(a);
-+}
-+
-+var showDiffs = function() {
-+	$("details").hide();
-+
-+	$("details").innerHTML = commit.diff.escapeHTML();
-+
-+	highlightDiffs();
-+	$("details").show();
-+}
-+
-+var reload = function() {
-+	$("notification").style.display = "none";
-+	commit.refs = null;
-+	showRefs();
-+	commit.reloadRefs();
-+	showRefs();
-+}
-+
-+var showRefs = function() {
-+	if (commit.refs){
-+		$('refs').parentNode.style.display = "";
-+		$('refs').innerHTML = "";
-+		$A(commit.refs).each(function(ref) {
-+							 curBranch = "";
-+							 $('refs').innerHTML += '&lt;span class="refs ' + ref.type()  + (CurrentBranch == ref.ref ? ' currentBranch' : '') + '">' + ref.shortName() + '&lt;/span>';
-+							 });
-+	} else
-+		$('refs').parentNode.style.display = "none";
-+}
-+
-+var loadCommit = function() {
-+	commit = new Commit(CommitObject);
-+	$("notification").style.display = "none";
-+
-+	$("commitID").innerHTML = commit.sha;
-+
-+	if (commit.author_email)
-+		$("authorID").innerHTML = commit.author_name + " &lt;&lt;a href='mailto:" + commit.author_email + "'>" + commit.author_email + "&lt;/a>&gt;";
-+	else
-+		$("authorID").innerHTML = commit.author_name;
-+
-+	$("date").innerHTML = commit.author_date;
-+	$("subjectID").innerHTML =CommitObject.subject.escapeHTML();
-+	
-+	$A($("commit_header").rows).each(function(row) {
-+		if (row.innerHTML.match(/Parent:/))
-+			row.remove();
-+	});
-+	commit.parents.each(function(parent) {
-+		var new_row = $("commit_header").insertRow(-1);
-+		new_row.innerHTML = "&lt;td class='property_name'>Parent:&lt;/td>&lt;td>&lt;a href='' onclick=\"selectCommit(this.innerHTML); return false;\">" + parent + "&lt;/a>&lt;/td>";
-+	});
-+
-+	showRefs();
-+
-+	$("message").innerHTML = commit.message.replace(/\n/g,"&lt;br>");
-+
-+	if (commit.diff.length &lt; 200000) {
-+		showDiffs();
-+	} else {
-+		$("details").innerHTML = "&lt;a class='showdiff' href='' onclick='showDiffs(); return false;'>This is a large commit. Click here or press 'v' to view.&lt;/a>";
-+	}
-+
-+	setGravatar(commit.author_email, $("gravatar"));
-+
-+	scroll(0, 0);
-+}
-diff --git a/diff/__others/v3_smith/commits.css b/diff/__others/v3_smith/commits.css
-new file mode 100755
-index 0000000..3eb801f
---- /dev/null
-+++ b/diff/__others/v3_smith/commits.css
-@@ -0,0 +1,133 @@
-+body {
-+	font-family: 'Lucida Grande';
-+}
-+
-+#commit_header {
-+	width: 100%;
-+	font-size: 12px;
-+}
-+
-+#commit_header td {
-+  padding-left: 5px;
-+}
-+
-+#notification {
-+	margin: 5px;
-+	padding: 3px;
-+	clear: both;
-+
-+	border: 1px solid black;
-+	background-color: #f3f3f3;
-+
-+	text-align: center;
-+	font-size: 80%;
-+
-+	-webkit-border-radius: 2px;
-+}
-+
-+#notification.success {
-+	background-color: #CCFF99;
-+	border: 1px solid #99CC66;
-+}
-+
-+#notification.fail {
-+	background-color: #ff9999;
-+	border: 1px solid #cc6666;
-+}
-+
-+#rightcontent {
-+	float: right;
-+}
-+
-+#buttons {
-+	float: left;
-+	margin-top: 5px;
-+}
-+
-+a.servicebutton{
-+	display: block;
-+	width: 80px;
-+	padding: 2px;
-+	margin-bottom: 4px;
-+
-+	border: 1px solid #3465a4;
-+	background-color: #cce5ff;
-+	color: #204a87;
-+
-+	font-size: 65%;
-+	text-decoration: none;
-+	text-align: center;
-+
-+	-webkit-border-radius: 2px;
-+}
-+
-+#gravatar {
-+	margin: 5px;
-+	padding: 2px;
-+	width: 60px;
-+	height: 60px;
-+
-+	border: solid gray 1px;
-+	-webkit-border-radius: 2px;
-+}
-+
-+.property_name {
-+	width: 50px;
-+	color:#7F7F7F;
-+	text-align: right;
-+	font-weight: bold;
-+}
-+
-+#message {
-+	font-family: Helvetica;
-+	margin-left: 0px;
-+	font-size: 12px;
-+}
-+
-+#details {
-+	font-family: Monaco;
-+	font-size: 10px;
-+	overflow: hidden;
-+	width: 600px;
-+}
-+hr {
-+	border: 0;
-+	height: 1px;
-+	margin: 0 8px;
-+	background-color: #DEDEDE;
-+	clear: both;
-+}
-+
-+a {
-+	color: rgb(20, 79, 174);
-+}
-+
-+a.showdiff {
-+	text-decoration: none;
-+	font-size: 1.3em;
-+}
-+
-+.refs {
-+	font-size: 9px;
-+	font-family: Helvetica;
-+	border: 1px solid black;
-+	margin-right: 5px;
-+	padding: 1px 3px 1px 3px;
-+	-webkit-border-radius: 2px;
-+}
-+
-+.refs.head {
-+	background-color: #aaf254;
-+}
-+
-+.refs.remote {
-+	background-color: #b2dfff;
-+}
-+
-+.refs.tag {
-+	background-color: #fced4f;
-+}
-+
-+.refs.currentBranch {
-+	font-weight: bold;
-+}
-\ No newline at end of file
-diff --git a/diff/__others/v3_smith/diff.html b/diff/__others/v3_smith/diff.html
-new file mode 100755
-index 0000000..56f0767
---- /dev/null
-+++ b/diff/__others/v3_smith/diff.html
-@@ -0,0 +1,61 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Diff for file&lt;/title>
-+	&lt;link rel="stylesheet" href="commits.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;link rel="stylesheet" href="diff_style.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+		&lt;script src="prototype.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="commit.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="diff.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script>
-+		var showFileChanges = function(file, cached) {
-+			// New file?
-+			if (file.status == 0)
-+			{
-+				var contents = file.unstagedChanges();
-+				if (contents)
-+					$("diff").innerHTML = contents.escapeHTML();
-+				else
-+					$("diff").innerHTML = "Could not display changes";
-+
-+				$("diff").show();
-+				$('title').innerHTML = "New file: " + file.path;
-+			}  else {
-+				$("diff").hide();
-+				if (cached)
-+					$("diff").innerHTML = file.cachedChangesAmend_(Controller.amend()).escapeHTML();
-+				else
-+					$("diff").innerHTML = file.unstagedChanges().escapeHTML();
-+				highlightDiffs();
-+				$("diff").show();
-+				$("title").innerHTML = "Changes for " + file.path;
-+			}
-+		}
-+	&lt;/script>
-+	&lt;style type="text/css" media="screen">
-+		body {
-+			padding: 0px;
-+			margin: 0px;
-+			margin-top: 20px;
-+		}
-+		#title {
-+			padding: 0px;
-+			padding-left: 5px;
-+			border-bottom: 1px solid black;
-+			margin: 0px;
-+			font-weight: 500;
-+			background-color: #ECF3FD;
-+			font-size: 100%;
-+			position: fixed;
-+			font-family: Helvetica;
-+			top: 0px;
-+			width: 100%;
-+		}
-+	&lt;/style>
-+	&lt;script src="diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="keyboardNavigation.js" type="text/javascript" charset="utf-8">&lt;/script>
-+
-+&lt;/head>
-+&lt;h1 id='title'>Nothing to commit&lt;/h1>
-+&lt;body style="padding: 0px; border: 0px" onLoad="">
-+	&lt;pre>&lt;code class="diffcode" id='diff'>Nothing to commit (working directory clean)&lt;/code>&lt;/pre>
-+&lt;/body>
-diff --git a/diff/__others/v3_smith/diff.js b/diff/__others/v3_smith/diff.js
-new file mode 100755
-index 0000000..e69de29
-diff --git a/diff/__others/v3_smith/keyboardNavigation.js b/diff/__others/v3_smith/keyboardNavigation.js
-new file mode 100755
-index 0000000..7ed1f44
---- /dev/null
-+++ b/diff/__others/v3_smith/keyboardNavigation.js
-@@ -0,0 +1,56 @@
-+var scrollToCenter = function(element) {
-+	var pos = element.cumulativeOffset();
-+    window.scrollTo(pos[0], pos[1] - 100);
-+}
-+
-+var handleKeys = function(event) {
-+	if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey)
-+		return;
-+	if (event.keyCode == 74)
-+		return changeHunk(true);
-+	else if (event.keyCode == 75)
-+		return changeHunk(false);
-+	else if (event.keyCode == 86) {// 'v'
-+		showDiffs();
-+		return false;
-+	}
-+	return true;
-+}
-+
-+var handleKeyFromCocoa = function(key) {
-+	if (key == 'j')
-+		changeHunk(true);
-+	else if (key == 'k')
-+		changeHunk(false);
-+	else if (key == 'v')
-+		showDiffs();
-+	else if (key == 'c')
-+		Controller.copySource();
-+}
-+
-+var changeHunk = function(next) {
-+	var hunks = $A(document.getElementsByClassName("hunkheader"));
-+	if (hunks.length == 0)
-+		return;
-+
-+	var currentHunk = document.getElementById("CurrentHunk");
-+	var newHunk;
-+
-+	if (currentHunk && hunks.indexOf(currentHunk) >= 0) {
-+		currentHunk.id = null;
-+		if (next)
-+			newHunk = hunks[hunks.indexOf(currentHunk) + 1];
-+		else
-+			newHunk = hunks[hunks.indexOf(currentHunk) - 1];
-+	}
-+	if (!newHunk)
-+		newHunk = hunks[0];
-+
-+	newHunk.id = 'CurrentHunk';
-+	scrollToCenter(newHunk);
-+	return false;
-+}
-+
-+document.onkeydown = function(event) {
-+	return handleKeys(event);
-+};
-\ No newline at end of file
-diff --git a/diff/__others/v3_smith/md5.js b/diff/__others/v3_smith/md5.js
-new file mode 100755
-index 0000000..36fc1c2
---- /dev/null
-+++ b/diff/__others/v3_smith/md5.js
-@@ -0,0 +1,256 @@
-+/*
-+ * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
-+ * Digest Algorithm, as defined in RFC 1321.
-+ * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
-+ * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
-+ * Distributed under the BSD License
-+ * See http://pajhome.org.uk/crypt/md5 for more info.
-+ */
-+
-+/*
-+ * Configurable variables. You may need to tweak these to be compatible with
-+ * the server-side, but the defaults work in most cases.
-+ */
-+var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */
-+var b64pad  = ""; /* base-64 pad character. "=" for strict RFC compliance   */
-+var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */
-+
-+/*
-+ * These are the functions you'll usually want to call
-+ * They take string arguments and return either hex or base-64 encoded strings
-+ */
-+function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}
-+function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}
-+function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}
-+function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }
-+function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }
-+function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }
-+
-+/*
-+ * Perform a simple self-test to see if the VM is working
-+ */
-+function md5_vm_test()
-+{
-+  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
-+}
-+
-+/*
-+ * Calculate the MD5 of an array of little-endian words, and a bit length
-+ */
-+function core_md5(x, len)
-+{
-+  /* append padding */
-+  x[len >> 5] |= 0x80 &lt;&lt; ((len) % 32);
-+  x[(((len + 64) >>> 9) &lt;&lt; 4) + 14] = len;
-+
-+  var a =  1732584193;
-+  var b = -271733879;
-+  var c = -1732584194;
-+  var d =  271733878;
-+
-+  for(var i = 0; i &lt; x.length; i += 16)
-+  {
-+    var olda = a;
-+    var oldb = b;
-+    var oldc = c;
-+    var oldd = d;
-+
-+    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
-+    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
-+    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
-+    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
-+    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
-+    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
-+    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
-+    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
-+    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
-+    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
-+    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
-+    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
-+    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
-+    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
-+    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
-+    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);
-+
-+    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
-+    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
-+    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
-+    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
-+    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
-+    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
-+    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
-+    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
-+    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
-+    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
-+    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
-+    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
-+    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
-+    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
-+    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
-+    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);
-+
-+    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
-+    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
-+    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
-+    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
-+    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
-+    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
-+    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
-+    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
-+    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
-+    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
-+    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
-+    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
-+    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
-+    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
-+    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
-+    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);
-+
-+    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
-+    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
-+    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
-+    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
-+    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
-+    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
-+    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
-+    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
-+    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
-+    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
-+    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
-+    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
-+    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
-+    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
-+    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
-+    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);
-+
-+    a = safe_add(a, olda);
-+    b = safe_add(b, oldb);
-+    c = safe_add(c, oldc);
-+    d = safe_add(d, oldd);
-+  }
-+  return Array(a, b, c, d);
-+
-+}
-+
-+/*
-+ * These functions implement the four basic operations the algorithm uses.
-+ */
-+function md5_cmn(q, a, b, x, s, t)
-+{
-+  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
-+}
-+function md5_ff(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
-+}
-+function md5_gg(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
-+}
-+function md5_hh(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
-+}
-+function md5_ii(a, b, c, d, x, s, t)
-+{
-+  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
-+}
-+
-+/*
-+ * Calculate the HMAC-MD5, of a key and some data
-+ */
-+function core_hmac_md5(key, data)
-+{
-+  var bkey = str2binl(key);
-+  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
-+
-+  var ipad = Array(16), opad = Array(16);
-+  for(var i = 0; i &lt; 16; i++)
-+  {
-+    ipad[i] = bkey[i] ^ 0x36363636;
-+    opad[i] = bkey[i] ^ 0x5C5C5C5C;
-+  }
-+
-+  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
-+  return core_md5(opad.concat(hash), 512 + 128);
-+}
-+
-+/*
-+ * Add integers, wrapping at 2^32. This uses 16-bit operations internally
-+ * to work around bugs in some JS interpreters.
-+ */
-+function safe_add(x, y)
-+{
-+  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
-+  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
-+  return (msw &lt;&lt; 16) | (lsw & 0xFFFF);
-+}
-+
-+/*
-+ * Bitwise rotate a 32-bit number to the left.
-+ */
-+function bit_rol(num, cnt)
-+{
-+  return (num &lt;&lt; cnt) | (num >>> (32 - cnt));
-+}
-+
-+/*
-+ * Convert a string to an array of little-endian words
-+ * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
-+ */
-+function str2binl(str)
-+{
-+  var bin = Array();
-+  var mask = (1 &lt;&lt; chrsz) - 1;
-+  for(var i = 0; i &lt; str.length * chrsz; i += chrsz)
-+    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) &lt;&lt; (i%32);
-+  return bin;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a string
-+ */
-+function binl2str(bin)
-+{
-+  var str = "";
-+  var mask = (1 &lt;&lt; chrsz) - 1;
-+  for(var i = 0; i &lt; bin.length * 32; i += chrsz)
-+    str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);
-+  return str;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a hex string.
-+ */
-+function binl2hex(binarray)
-+{
-+  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
-+  var str = "";
-+  for(var i = 0; i &lt; binarray.length * 4; i++)
-+  {
-+    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +
-+           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);
-+  }
-+  return str;
-+}
-+
-+/*
-+ * Convert an array of little-endian words to a base-64 string
-+ */
-+function binl2b64(binarray)
-+{
-+  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
-+  var str = "";
-+  for(var i = 0; i &lt; binarray.length * 4; i += 3)
-+  {
-+    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) &lt;&lt; 16)
-+                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) &lt;&lt; 8 )
-+                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);
-+    for(var j = 0; j &lt; 4; j++)
-+    {
-+      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;
-+      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);
-+    }
-+  }
-+  return str;
-+}
-diff --git a/diff/__others/v3_smith/prototype.js b/diff/__others/v3_smith/prototype.js
-new file mode 100755
-index 0000000..6385503
---- /dev/null
-+++ b/diff/__others/v3_smith/prototype.js
-@@ -0,0 +1,4221 @@
-+/*  Prototype JavaScript framework, version 1.6.0.2
-+ *  (c) 2005-2008 Sam Stephenson
-+ *
-+ *  Prototype is freely distributable under the terms of an MIT-style license.
-+ *  For details, see the Prototype web site: http://www.prototypejs.org/
-+ *
-+ *--------------------------------------------------------------------------*/
-+
-+var Prototype = {
-+  Version: '1.6.0.2',
-+
-+  Browser: {
-+    IE:     !!(window.attachEvent && !window.opera),
-+    Opera:  !!window.opera,
-+    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,
-+    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 && navigator.userAgent.indexOf('KHTML') == -1,
-+    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)
-+  },
-+
-+  BrowserFeatures: {
-+    XPath: !!document.evaluate,
-+    ElementExtensions: !!window.HTMLElement,
-+    SpecificElementExtensions:
-+      document.createElement('div').__proto__ &&
-+      document.createElement('div').__proto__ !==
-+        document.createElement('form').__proto__
-+  },
-+
-+  ScriptFragment: '&lt;script[^>]*>([\\S\\s]*?)&lt;\/script>',
-+  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,
-+
-+  emptyFunction: function() { },
-+  K: function(x) { return x }
-+};
-+
-+if (Prototype.Browser.MobileSafari)
-+  Prototype.BrowserFeatures.SpecificElementExtensions = false;
-+
-+
-+/* Based on Alex Arnell's inheritance implementation. */
-+var Class = {
-+  create: function() {
-+    var parent = null, properties = $A(arguments);
-+    if (Object.isFunction(properties[0]))
-+      parent = properties.shift();
-+
-+    function klass() {
-+      this.initialize.apply(this, arguments);
-+    }
-+
-+    Object.extend(klass, Class.Methods);
-+    klass.superclass = parent;
-+    klass.subclasses = [];
-+
-+    if (parent) {
-+      var subclass = function() { };
-+      subclass.prototype = parent.prototype;
-+      klass.prototype = new subclass;
-+      parent.subclasses.push(klass);
-+    }
-+
-+    for (var i = 0; i &lt; properties.length; i++)
-+      klass.addMethods(properties[i]);
-+
-+    if (!klass.prototype.initialize)
-+      klass.prototype.initialize = Prototype.emptyFunction;
-+
-+    klass.prototype.constructor = klass;
-+
-+    return klass;
-+  }
-+};
-+
-+Class.Methods = {
-+  addMethods: function(source) {
-+    var ancestor   = this.superclass && this.superclass.prototype;
-+    var properties = Object.keys(source);
-+
-+    if (!Object.keys({ toString: true }).length)
-+      properties.push("toString", "valueOf");
-+
-+    for (var i = 0, length = properties.length; i &lt; length; i++) {
-+      var property = properties[i], value = source[property];
-+      if (ancestor && Object.isFunction(value) &&
-+          value.argumentNames().first() == "$super") {
-+        var method = value, value = Object.extend((function(m) {
-+          return function() { return ancestor[m].apply(this, arguments) };
-+        })(property).wrap(method), {
-+          valueOf:  function() { return method },
-+          toString: function() { return method.toString() }
-+        });
-+      }
-+      this.prototype[property] = value;
-+    }
-+
-+    return this;
-+  }
-+};
-+
-+var Abstract = { };
-+
-+Object.extend = function(destination, source) {
-+  for (var property in source)
-+    destination[property] = source[property];
-+  return destination;
-+};
-+
-+Object.extend(Object, {
-+  inspect: function(object) {
-+    try {
-+      if (Object.isUndefined(object)) return 'undefined';
-+      if (object === null) return 'null';
-+      return object.inspect ? object.inspect() : String(object);
-+    } catch (e) {
-+      if (e instanceof RangeError) return '...';
-+      throw e;
-+    }
-+  },
-+
-+  toJSON: function(object) {
-+    var type = typeof object;
-+    switch (type) {
-+      case 'undefined':
-+      case 'function':
-+      case 'unknown': return;
-+      case 'boolean': return object.toString();
-+    }
-+
-+    if (object === null) return 'null';
-+    if (object.toJSON) return object.toJSON();
-+    if (Object.isElement(object)) return;
-+
-+    var results = [];
-+    for (var property in object) {
-+      var value = Object.toJSON(object[property]);
-+      if (!Object.isUndefined(value))
-+        results.push(property.toJSON() + ': ' + value);
-+    }
-+
-+    return '{' + results.join(', ') + '}';
-+  },
-+
-+  toQueryString: function(object) {
-+    return $H(object).toQueryString();
-+  },
-+
-+  toHTML: function(object) {
-+    return object && object.toHTML ? object.toHTML() : String.interpret(object);
-+  },
-+
-+  keys: function(object) {
-+    var keys = [];
-+    for (var property in object)
-+      keys.push(property);
-+    return keys;
-+  },
-+
-+  values: function(object) {
-+    var values = [];
-+    for (var property in object)
-+      values.push(object[property]);
-+    return values;
-+  },
-+
-+  clone: function(object) {
-+    return Object.extend({ }, object);
-+  },
-+
-+  isElement: function(object) {
-+    return object && object.nodeType == 1;
-+  },
-+
-+  isArray: function(object) {
-+    return object != null && typeof object == "object" &&
-+      'splice' in object && 'join' in object;
-+  },
-+
-+  isHash: function(object) {
-+    return object instanceof Hash;
-+  },
-+
-+  isFunction: function(object) {
-+    return typeof object == "function";
-+  },
-+
-+  isString: function(object) {
-+    return typeof object == "string";
-+  },
-+
-+  isNumber: function(object) {
-+    return typeof object == "number";
-+  },
-+
-+  isUndefined: function(object) {
-+    return typeof object == "undefined";
-+  }
-+});
-+
-+Object.extend(Function.prototype, {
-+  argumentNames: function() {
-+    var names = this.toString().match(/^[\s\(]*function[^(]*\((.*?)\)/)[1].split(",").invoke("strip");
-+    return names.length == 1 && !names[0] ? [] : names;
-+  },
-+
-+  bind: function() {
-+    if (arguments.length &lt; 2 && Object.isUndefined(arguments[0])) return this;
-+    var __method = this, args = $A(arguments), object = args.shift();
-+    return function() {
-+      return __method.apply(object, args.concat($A(arguments)));
-+    }
-+  },
-+
-+  bindAsEventListener: function() {
-+    var __method = this, args = $A(arguments), object = args.shift();
-+    return function(event) {
-+      return __method.apply(object, [event || window.event].concat(args));
-+    }
-+  },
-+
-+  curry: function() {
-+    if (!arguments.length) return this;
-+    var __method = this, args = $A(arguments);
-+    return function() {
-+      return __method.apply(this, args.concat($A(arguments)));
-+    }
-+  },
-+
-+  delay: function() {
-+    var __method = this, args = $A(arguments), timeout = args.shift() * 1000;
-+    return window.setTimeout(function() {
-+      return __method.apply(__method, args);
-+    }, timeout);
-+  },
-+
-+  wrap: function(wrapper) {
-+    var __method = this;
-+    return function() {
-+      return wrapper.apply(this, [__method.bind(this)].concat($A(arguments)));
-+    }
-+  },
-+
-+  methodize: function() {
-+    if (this._methodized) return this._methodized;
-+    var __method = this;
-+    return this._methodized = function() {
-+      return __method.apply(null, [this].concat($A(arguments)));
-+    };
-+  }
-+});
-+
-+Function.prototype.defer = Function.prototype.delay.curry(0.01);
-+
-+Date.prototype.toJSON = function() {
-+  return '"' + this.getUTCFullYear() + '-' +
-+    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +
-+    this.getUTCDate().toPaddedString(2) + 'T' +
-+    this.getUTCHours().toPaddedString(2) + ':' +
-+    this.getUTCMinutes().toPaddedString(2) + ':' +
-+    this.getUTCSeconds().toPaddedString(2) + 'Z"';
-+};
-+
-+var Try = {
-+  these: function() {
-+    var returnValue;
-+
-+    for (var i = 0, length = arguments.length; i &lt; length; i++) {
-+      var lambda = arguments[i];
-+      try {
-+        returnValue = lambda();
-+        break;
-+      } catch (e) { }
-+    }
-+
-+    return returnValue;
-+  }
-+};
-+
-+RegExp.prototype.match = RegExp.prototype.test;
-+
-+RegExp.escape = function(str) {
-+  return String(str).replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+var PeriodicalExecuter = Class.create({
-+  initialize: function(callback, frequency) {
-+    this.callback = callback;
-+    this.frequency = frequency;
-+    this.currentlyExecuting = false;
-+
-+    this.registerCallback();
-+  },
-+
-+  registerCallback: function() {
-+    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
-+  },
-+
-+  execute: function() {
-+    this.callback(this);
-+  },
-+
-+  stop: function() {
-+    if (!this.timer) return;
-+    clearInterval(this.timer);
-+    this.timer = null;
-+  },
-+
-+  onTimerEvent: function() {
-+    if (!this.currentlyExecuting) {
-+      try {
-+        this.currentlyExecuting = true;
-+        this.execute();
-+      } finally {
-+        this.currentlyExecuting = false;
-+      }
-+    }
-+  }
-+});
-+Object.extend(String, {
-+  interpret: function(value) {
-+    return value == null ? '' : String(value);
-+  },
-+  specialChar: {
-+    '\b': '\\b',
-+    '\t': '\\t',
-+    '\n': '\\n',
-+    '\f': '\\f',
-+    '\r': '\\r',
-+    '\\': '\\\\'
-+  }
-+});
-+
-+Object.extend(String.prototype, {
-+  gsub: function(pattern, replacement) {
-+    var result = '', source = this, match;
-+    replacement = arguments.callee.prepareReplacement(replacement);
-+
-+    while (source.length > 0) {
-+      if (match = source.match(pattern)) {
-+        result += source.slice(0, match.index);
-+        result += String.interpret(replacement(match));
-+        source  = source.slice(match.index + match[0].length);
-+      } else {
-+        result += source, source = '';
-+      }
-+    }
-+    return result;
-+  },
-+
-+  sub: function(pattern, replacement, count) {
-+    replacement = this.gsub.prepareReplacement(replacement);
-+    count = Object.isUndefined(count) ? 1 : count;
-+
-+    return this.gsub(pattern, function(match) {
-+      if (--count &lt; 0) return match[0];
-+      return replacement(match);
-+    });
-+  },
-+
-+  scan: function(pattern, iterator) {
-+    this.gsub(pattern, iterator);
-+    return String(this);
-+  },
-+
-+  truncate: function(length, truncation) {
-+    length = length || 30;
-+    truncation = Object.isUndefined(truncation) ? '...' : truncation;
-+    return this.length > length ?
-+      this.slice(0, length - truncation.length) + truncation : String(this);
-+  },
-+
-+  strip: function() {
-+    return this.replace(/^\s+/, '').replace(/\s+$/, '');
-+  },
-+
-+  stripTags: function() {
-+    return this.replace(/&lt;\/?[^>]+>/gi, '');
-+  },
-+
-+  stripScripts: function() {
-+    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
-+  },
-+
-+  extractScripts: function() {
-+    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');
-+    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');
-+    return (this.match(matchAll) || []).map(function(scriptTag) {
-+      return (scriptTag.match(matchOne) || ['', ''])[1];
-+    });
-+  },
-+
-+  evalScripts: function() {
-+    return this.extractScripts().map(function(script) { return eval(script) });
-+  },
-+
-+  escapeHTML: function() {
-+    var self = arguments.callee;
-+    self.text.data = this;
-+    return self.div.innerHTML;
-+  },
-+
-+  unescapeHTML: function() {
-+    var div = new Element('div');
-+    div.innerHTML = this.stripTags();
-+    return div.childNodes[0] ? (div.childNodes.length > 1 ?
-+      $A(div.childNodes).inject('', function(memo, node) { return memo+node.nodeValue }) :
-+      div.childNodes[0].nodeValue) : '';
-+  },
-+
-+  toQueryParams: function(separator) {
-+    var match = this.strip().match(/([^?#]*)(#.*)?$/);
-+    if (!match) return { };
-+
-+    return match[1].split(separator || '&').inject({ }, function(hash, pair) {
-+      if ((pair = pair.split('='))[0]) {
-+        var key = decodeURIComponent(pair.shift());
-+        var value = pair.length > 1 ? pair.join('=') : pair[0];
-+        if (value != undefined) value = decodeURIComponent(value);
-+
-+        if (key in hash) {
-+          if (!Object.isArray(hash[key])) hash[key] = [hash[key]];
-+          hash[key].push(value);
-+        }
-+        else hash[key] = value;
-+      }
-+      return hash;
-+    });
-+  },
-+
-+  toArray: function() {
-+    return this.split('');
-+  },
-+
-+  succ: function() {
-+    return this.slice(0, this.length - 1) +
-+      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
-+  },
-+
-+  times: function(count) {
-+    return count &lt; 1 ? '' : new Array(count + 1).join(this);
-+  },
-+
-+  camelize: function() {
-+    var parts = this.split('-'), len = parts.length;
-+    if (len == 1) return parts[0];
-+
-+    var camelized = this.charAt(0) == '-'
-+      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)
-+      : parts[0];
-+
-+    for (var i = 1; i &lt; len; i++)
-+      camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);
-+
-+    return camelized;
-+  },
-+
-+  capitalize: function() {
-+    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
-+  },
-+
-+  underscore: function() {
-+    return this.gsub(/::/, '/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{1}_#{2}').gsub(/-/,'_').toLowerCase();
-+  },
-+
-+  dasherize: function() {
-+    return this.gsub(/_/,'-');
-+  },
-+
-+  inspect: function(useDoubleQuotes) {
-+    var escapedString = this.gsub(/[\x00-\x1f\\]/, function(match) {
-+      var character = String.specialChar[match[0]];
-+      return character ? character : '\\u00' + match[0].charCodeAt().toPaddedString(2, 16);
-+    });
-+    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') + '"';
-+    return "'" + escapedString.replace(/'/g, '\\\'') + "'";
-+  },
-+
-+  toJSON: function() {
-+    return this.inspect(true);
-+  },
-+
-+  unfilterJSON: function(filter) {
-+    return this.sub(filter || Prototype.JSONFilter, '#{1}');
-+  },
-+
-+  isJSON: function() {
-+    var str = this;
-+    if (str.blank()) return false;
-+    str = this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');
-+    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);
-+  },
-+
-+  evalJSON: function(sanitize) {
-+    var json = this.unfilterJSON();
-+    try {
-+      if (!sanitize || json.isJSON()) return eval('(' + json + ')');
-+    } catch (e) { }
-+    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());
-+  },
-+
-+  include: function(pattern) {
-+    return this.indexOf(pattern) > -1;
-+  },
-+
-+  startsWith: function(pattern) {
-+    return this.indexOf(pattern) === 0;
-+  },
-+
-+  endsWith: function(pattern) {
-+    var d = this.length - pattern.length;
-+    return d >= 0 && this.lastIndexOf(pattern) === d;
-+  },
-+
-+  empty: function() {
-+    return this == '';
-+  },
-+
-+  blank: function() {
-+    return /^\s*$/.test(this);
-+  },
-+
-+  interpolate: function(object, pattern) {
-+    return new Template(this, pattern).evaluate(object);
-+  }
-+});
-+
-+if (Prototype.Browser.WebKit || Prototype.Browser.IE) Object.extend(String.prototype, {
-+  escapeHTML: function() {
-+    return this.replace(/&/g,'&amp;').replace(/&lt;/g,'&lt;').replace(/>/g,'&gt;');
-+  },
-+  unescapeHTML: function() {
-+    return this.replace(/&amp;/g,'&').replace(/&lt;/g,'&lt;').replace(/&gt;/g,'>');
-+  }
-+});
-+
-+String.prototype.gsub.prepareReplacement = function(replacement) {
-+  if (Object.isFunction(replacement)) return replacement;
-+  var template = new Template(replacement);
-+  return function(match) { return template.evaluate(match) };
-+};
-+
-+String.prototype.parseQuery = String.prototype.toQueryParams;
-+
-+Object.extend(String.prototype.escapeHTML, {
-+  div:  document.createElement('div'),
-+  text: document.createTextNode('')
-+});
-+
-+with (String.prototype.escapeHTML) div.appendChild(text);
-+
-+var Template = Class.create({
-+  initialize: function(template, pattern) {
-+    this.template = template.toString();
-+    this.pattern = pattern || Template.Pattern;
-+  },
-+
-+  evaluate: function(object) {
-+    if (Object.isFunction(object.toTemplateReplacements))
-+      object = object.toTemplateReplacements();
-+
-+    return this.template.gsub(this.pattern, function(match) {
-+      if (object == null) return '';
-+
-+      var before = match[1] || '';
-+      if (before == '\\') return match[2];
-+
-+      var ctx = object, expr = match[3];
-+      var pattern = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;
-+      match = pattern.exec(expr);
-+      if (match == null) return before;
-+
-+      while (match != null) {
-+        var comp = match[1].startsWith('[') ? match[2].gsub('\\\\]', ']') : match[1];
-+        ctx = ctx[comp];
-+        if (null == ctx || '' == match[3]) break;
-+        expr = expr.substring('[' == match[3] ? match[1].length : match[0].length);
-+        match = pattern.exec(expr);
-+      }
-+
-+      return before + String.interpret(ctx);
-+    });
-+  }
-+});
-+Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;
-+
-+var $break = { };
-+
-+var Enumerable = {
-+  each: function(iterator, context) {
-+    var index = 0;
-+    iterator = iterator.bind(context);
-+    try {
-+      this._each(function(value) {
-+        iterator(value, index++);
-+      });
-+    } catch (e) {
-+      if (e != $break) throw e;
-+    }
-+    return this;
-+  },
-+
-+  eachSlice: function(number, iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var index = -number, slices = [], array = this.toArray();
-+    while ((index += number) &lt; array.length)
-+      slices.push(array.slice(index, index+number));
-+    return slices.collect(iterator, context);
-+  },
-+
-+  all: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result = true;
-+    this.each(function(value, index) {
-+      result = result && !!iterator(value, index);
-+      if (!result) throw $break;
-+    });
-+    return result;
-+  },
-+
-+  any: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result = false;
-+    this.each(function(value, index) {
-+      if (result = !!iterator(value, index))
-+        throw $break;
-+    });
-+    return result;
-+  },
-+
-+  collect: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var results = [];
-+    this.each(function(value, index) {
-+      results.push(iterator(value, index));
-+    });
-+    return results;
-+  },
-+
-+  detect: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    var result;
-+    this.each(function(value, index) {
-+      if (iterator(value, index)) {
-+        result = value;
-+        throw $break;
-+      }
-+    });
-+    return result;
-+  },
-+
-+  findAll: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    var results = [];
-+    this.each(function(value, index) {
-+      if (iterator(value, index))
-+        results.push(value);
-+    });
-+    return results;
-+  },
-+
-+  grep: function(filter, iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var results = [];
-+
-+    if (Object.isString(filter))
-+      filter = new RegExp(filter);
-+
-+    this.each(function(value, index) {
-+      if (filter.match(value))
-+        results.push(iterator(value, index));
-+    });
-+    return results;
-+  },
-+
-+  include: function(object) {
-+    if (Object.isFunction(this.indexOf))
-+      if (this.indexOf(object) != -1) return true;
-+
-+    var found = false;
-+    this.each(function(value) {
-+      if (value == object) {
-+        found = true;
-+        throw $break;
-+      }
-+    });
-+    return found;
-+  },
-+
-+  inGroupsOf: function(number, fillWith) {
-+    fillWith = Object.isUndefined(fillWith) ? null : fillWith;
-+    return this.eachSlice(number, function(slice) {
-+      while(slice.length &lt; number) slice.push(fillWith);
-+      return slice;
-+    });
-+  },
-+
-+  inject: function(memo, iterator, context) {
-+    iterator = iterator.bind(context);
-+    this.each(function(value, index) {
-+      memo = iterator(memo, value, index);
-+    });
-+    return memo;
-+  },
-+
-+  invoke: function(method) {
-+    var args = $A(arguments).slice(1);
-+    return this.map(function(value) {
-+      return value[method].apply(value, args);
-+    });
-+  },
-+
-+  max: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result;
-+    this.each(function(value, index) {
-+      value = iterator(value, index);
-+      if (result == null || value >= result)
-+        result = value;
-+    });
-+    return result;
-+  },
-+
-+  min: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var result;
-+    this.each(function(value, index) {
-+      value = iterator(value, index);
-+      if (result == null || value &lt; result)
-+        result = value;
-+    });
-+    return result;
-+  },
-+
-+  partition: function(iterator, context) {
-+    iterator = iterator ? iterator.bind(context) : Prototype.K;
-+    var trues = [], falses = [];
-+    this.each(function(value, index) {
-+      (iterator(value, index) ?
-+        trues : falses).push(value);
-+    });
-+    return [trues, falses];
-+  },
-+
-+  pluck: function(property) {
-+    var results = [];
-+    this.each(function(value) {
-+      results.push(value[property]);
-+    });
-+    return results;
-+  },
-+
-+  reject: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    var results = [];
-+    this.each(function(value, index) {
-+      if (!iterator(value, index))
-+        results.push(value);
-+    });
-+    return results;
-+  },
-+
-+  sortBy: function(iterator, context) {
-+    iterator = iterator.bind(context);
-+    return this.map(function(value, index) {
-+      return {value: value, criteria: iterator(value, index)};
-+    }).sort(function(left, right) {
-+      var a = left.criteria, b = right.criteria;
-+      return a &lt; b ? -1 : a > b ? 1 : 0;
-+    }).pluck('value');
-+  },
-+
-+  toArray: function() {
-+    return this.map();
-+  },
-+
-+  zip: function() {
-+    var iterator = Prototype.K, args = $A(arguments);
-+    if (Object.isFunction(args.last()))
-+      iterator = args.pop();
-+
-+    var collections = [this].concat(args).map($A);
-+    return this.map(function(value, index) {
-+      return iterator(collections.pluck(index));
-+    });
-+  },
-+
-+  size: function() {
-+    return this.toArray().length;
-+  },
-+
-+  inspect: function() {
-+    return '#&lt;Enumerable:' + this.toArray().inspect() + '>';
-+  }
-+};
-+
-+Object.extend(Enumerable, {
-+  map:     Enumerable.collect,
-+  find:    Enumerable.detect,
-+  select:  Enumerable.findAll,
-+  filter:  Enumerable.findAll,
-+  member:  Enumerable.include,
-+  entries: Enumerable.toArray,
-+  every:   Enumerable.all,
-+  some:    Enumerable.any
-+});
-+function $A(iterable) {
-+  if (!iterable) return [];
-+  if (iterable.toArray) return iterable.toArray();
-+  var length = iterable.length || 0, results = new Array(length);
-+  while (length--) results[length] = iterable[length];
-+  return results;
-+}
-+
-+if (Prototype.Browser.WebKit) {
-+  $A = function(iterable) {
-+    if (!iterable) return [];
-+    if (!(Object.isFunction(iterable) && iterable == '[object NodeList]') &&
-+        iterable.toArray) return iterable.toArray();
-+    var length = iterable.length || 0, results = new Array(length);
-+    while (length--) results[length] = iterable[length];
-+    return results;
-+  };
-+}
-+
-+Array.from = $A;
-+
-+Object.extend(Array.prototype, Enumerable);
-+
-+if (!Array.prototype._reverse) Array.prototype._reverse = Array.prototype.reverse;
-+
-+Object.extend(Array.prototype, {
-+  _each: function(iterator) {
-+    for (var i = 0, length = this.length; i &lt; length; i++)
-+      iterator(this[i]);
-+  },
-+
-+  clear: function() {
-+    this.length = 0;
-+    return this;
-+  },
-+
-+  first: function() {
-+    return this[0];
-+  },
-+
-+  last: function() {
-+    return this[this.length - 1];
-+  },
-+
-+  compact: function() {
-+    return this.select(function(value) {
-+      return value != null;
-+    });
-+  },
-+
-+  flatten: function() {
-+    return this.inject([], function(array, value) {
-+      return array.concat(Object.isArray(value) ?
-+        value.flatten() : [value]);
-+    });
-+  },
-+
-+  without: function() {
-+    var values = $A(arguments);
-+    return this.select(function(value) {
-+      return !values.include(value);
-+    });
-+  },
-+
-+  reverse: function(inline) {
-+    return (inline !== false ? this : this.toArray())._reverse();
-+  },
-+
-+  reduce: function() {
-+    return this.length > 1 ? this : this[0];
-+  },
-+
-+  uniq: function(sorted) {
-+    return this.inject([], function(array, value, index) {
-+      if (0 == index || (sorted ? array.last() != value : !array.include(value)))
-+        array.push(value);
-+      return array;
-+    });
-+  },
-+
-+  intersect: function(array) {
-+    return this.uniq().findAll(function(item) {
-+      return array.detect(function(value) { return item === value });
-+    });
-+  },
-+
-+  clone: function() {
-+    return [].concat(this);
-+  },
-+
-+  size: function() {
-+    return this.length;
-+  },
-+
-+  inspect: function() {
-+    return '[' + this.map(Object.inspect).join(', ') + ']';
-+  },
-+
-+  toJSON: function() {
-+    var results = [];
-+    this.each(function(object) {
-+      var value = Object.toJSON(object);
-+      if (!Object.isUndefined(value)) results.push(value);
-+    });
-+    return '[' + results.join(', ') + ']';
-+  }
-+});
-+
-+// use native browser JS 1.6 implementation if available
-+if (Object.isFunction(Array.prototype.forEach))
-+  Array.prototype._each = Array.prototype.forEach;
-+
-+if (!Array.prototype.indexOf) Array.prototype.indexOf = function(item, i) {
-+  i || (i = 0);
-+  var length = this.length;
-+  if (i &lt; 0) i = length + i;
-+  for (; i &lt; length; i++)
-+    if (this[i] === item) return i;
-+  return -1;
-+};
-+
-+if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf = function(item, i) {
-+  i = isNaN(i) ? this.length : (i &lt; 0 ? this.length + i : i) + 1;
-+  var n = this.slice(0, i).reverse().indexOf(item);
-+  return (n &lt; 0) ? n : i - n - 1;
-+};
-+
-+Array.prototype.toArray = Array.prototype.clone;
-+
-+function $w(string) {
-+  if (!Object.isString(string)) return [];
-+  string = string.strip();
-+  return string ? string.split(/\s+/) : [];
-+}
-+
-+if (Prototype.Browser.Opera){
-+  Array.prototype.concat = function() {
-+    var array = [];
-+    for (var i = 0, length = this.length; i &lt; length; i++) array.push(this[i]);
-+    for (var i = 0, length = arguments.length; i &lt; length; i++) {
-+      if (Object.isArray(arguments[i])) {
-+        for (var j = 0, arrayLength = arguments[i].length; j &lt; arrayLength; j++)
-+          array.push(arguments[i][j]);
-+      } else {
-+        array.push(arguments[i]);
-+      }
-+    }
-+    return array;
-+  };
-+}
-+Object.extend(Number.prototype, {
-+  toColorPart: function() {
-+    return this.toPaddedString(2, 16);
-+  },
-+
-+  succ: function() {
-+    return this + 1;
-+  },
-+
-+  times: function(iterator) {
-+    $R(0, this, true).each(iterator);
-+    return this;
-+  },
-+
-+  toPaddedString: function(length, radix) {
-+    var string = this.toString(radix || 10);
-+    return '0'.times(length - string.length) + string;
-+  },
-+
-+  toJSON: function() {
-+    return isFinite(this) ? this.toString() : 'null';
-+  }
-+});
-+
-+$w('abs round ceil floor').each(function(method){
-+  Number.prototype[method] = Math[method].methodize();
-+});
-+function $H(object) {
-+  return new Hash(object);
-+};
-+
-+var Hash = Class.create(Enumerable, (function() {
-+
-+  function toQueryPair(key, value) {
-+    if (Object.isUndefined(value)) return key;
-+    return key + '=' + encodeURIComponent(String.interpret(value));
-+  }
-+
-+  return {
-+    initialize: function(object) {
-+      this._object = Object.isHash(object) ? object.toObject() : Object.clone(object);
-+    },
-+
-+    _each: function(iterator) {
-+      for (var key in this._object) {
-+        var value = this._object[key], pair = [key, value];
-+        pair.key = key;
-+        pair.value = value;
-+        iterator(pair);
-+      }
-+    },
-+
-+    set: function(key, value) {
-+      return this._object[key] = value;
-+    },
-+
-+    get: function(key) {
-+      return this._object[key];
-+    },
-+
-+    unset: function(key) {
-+      var value = this._object[key];
-+      delete this._object[key];
-+      return value;
-+    },
-+
-+    toObject: function() {
-+      return Object.clone(this._object);
-+    },
-+
-+    keys: function() {
-+      return this.pluck('key');
-+    },
-+
-+    values: function() {
-+      return this.pluck('value');
-+    },
-+
-+    index: function(value) {
-+      var match = this.detect(function(pair) {
-+        return pair.value === value;
-+      });
-+      return match && match.key;
-+    },
-+
-+    merge: function(object) {
-+      return this.clone().update(object);
-+    },
-+
-+    update: function(object) {
-+      return new Hash(object).inject(this, function(result, pair) {
-+        result.set(pair.key, pair.value);
-+        return result;
-+      });
-+    },
-+
-+    toQueryString: function() {
-+      return this.map(function(pair) {
-+        var key = encodeURIComponent(pair.key), values = pair.value;
-+
-+        if (values && typeof values == 'object') {
-+          if (Object.isArray(values))
-+            return values.map(toQueryPair.curry(key)).join('&');
-+        }
-+        return toQueryPair(key, values);
-+      }).join('&');
-+    },
-+
-+    inspect: function() {
-+      return '#&lt;Hash:{' + this.map(function(pair) {
-+        return pair.map(Object.inspect).join(': ');
-+      }).join(', ') + '}>';
-+    },
-+
-+    toJSON: function() {
-+      return Object.toJSON(this.toObject());
-+    },
-+
-+    clone: function() {
-+      return new Hash(this);
-+    }
-+  }
-+})());
-+
-+Hash.prototype.toTemplateReplacements = Hash.prototype.toObject;
-+Hash.from = $H;
-+var ObjectRange = Class.create(Enumerable, {
-+  initialize: function(start, end, exclusive) {
-+    this.start = start;
-+    this.end = end;
-+    this.exclusive = exclusive;
-+  },
-+
-+  _each: function(iterator) {
-+    var value = this.start;
-+    while (this.include(value)) {
-+      iterator(value);
-+      value = value.succ();
-+    }
-+  },
-+
-+  include: function(value) {
-+    if (value &lt; this.start)
-+      return false;
-+    if (this.exclusive)
-+      return value &lt; this.end;
-+    return value &lt;= this.end;
-+  }
-+});
-+
-+var $R = function(start, end, exclusive) {
-+  return new ObjectRange(start, end, exclusive);
-+};
-+
-+var Ajax = {
-+  getTransport: function() {
-+    return Try.these(
-+      function() {return new XMLHttpRequest()},
-+      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
-+      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
-+    ) || false;
-+  },
-+
-+  activeRequestCount: 0
-+};
-+
-+Ajax.Responders = {
-+  responders: [],
-+
-+  _each: function(iterator) {
-+    this.responders._each(iterator);
-+  },
-+
-+  register: function(responder) {
-+    if (!this.include(responder))
-+      this.responders.push(responder);
-+  },
-+
-+  unregister: function(responder) {
-+    this.responders = this.responders.without(responder);
-+  },
-+
-+  dispatch: function(callback, request, transport, json) {
-+    this.each(function(responder) {
-+      if (Object.isFunction(responder[callback])) {
-+        try {
-+          responder[callback].apply(responder, [request, transport, json]);
-+        } catch (e) { }
-+      }
-+    });
-+  }
-+};
-+
-+Object.extend(Ajax.Responders, Enumerable);
-+
-+Ajax.Responders.register({
-+  onCreate:   function() { Ajax.activeRequestCount++ },
-+  onComplete: function() { Ajax.activeRequestCount-- }
-+});
-+
-+Ajax.Base = Class.create({
-+  initialize: function(options) {
-+    this.options = {
-+      method:       'post',
-+      asynchronous: true,
-+      contentType:  'application/x-www-form-urlencoded',
-+      encoding:     'UTF-8',
-+      parameters:   '',
-+      evalJSON:     true,
-+      evalJS:       true
-+    };
-+    Object.extend(this.options, options || { });
-+
-+    this.options.method = this.options.method.toLowerCase();
-+
-+    if (Object.isString(this.options.parameters))
-+      this.options.parameters = this.options.parameters.toQueryParams();
-+    else if (Object.isHash(this.options.parameters))
-+      this.options.parameters = this.options.parameters.toObject();
-+  }
-+});
-+
-+Ajax.Request = Class.create(Ajax.Base, {
-+  _complete: false,
-+
-+  initialize: function($super, url, options) {
-+    $super(options);
-+    this.transport = Ajax.getTransport();
-+    this.request(url);
-+  },
-+
-+  request: function(url) {
-+    this.url = url;
-+    this.method = this.options.method;
-+    var params = Object.clone(this.options.parameters);
-+
-+    if (!['get', 'post'].include(this.method)) {
-+      // simulate other verbs over post
-+      params['_method'] = this.method;
-+      this.method = 'post';
-+    }
-+
-+    this.parameters = params;
-+
-+    if (params = Object.toQueryString(params)) {
-+      // when GET, append parameters to URL
-+      if (this.method == 'get')
-+        this.url += (this.url.include('?') ? '&' : '?') + params;
-+      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))
-+        params += '&_=';
-+    }
-+
-+    try {
-+      var response = new Ajax.Response(this);
-+      if (this.options.onCreate) this.options.onCreate(response);
-+      Ajax.Responders.dispatch('onCreate', this, response);
-+
-+      this.transport.open(this.method.toUpperCase(), this.url,
-+        this.options.asynchronous);
-+
-+      if (this.options.asynchronous) this.respondToReadyState.bind(this).defer(1);
-+
-+      this.transport.onreadystatechange = this.onStateChange.bind(this);
-+      this.setRequestHeaders();
-+
-+      this.body = this.method == 'post' ? (this.options.postBody || params) : null;
-+      this.transport.send(this.body);
-+
-+      /* Force Firefox to handle ready state 4 for synchronous requests */
-+      if (!this.options.asynchronous && this.transport.overrideMimeType)
-+        this.onStateChange();
-+
-+    }
-+    catch (e) {
-+      this.dispatchException(e);
-+    }
-+  },
-+
-+  onStateChange: function() {
-+    var readyState = this.transport.readyState;
-+    if (readyState > 1 && !((readyState == 4) && this._complete))
-+      this.respondToReadyState(this.transport.readyState);
-+  },
-+
-+  setRequestHeaders: function() {
-+    var headers = {
-+      'X-Requested-With': 'XMLHttpRequest',
-+      'X-Prototype-Version': Prototype.Version,
-+      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
-+    };
-+
-+    if (this.method == 'post') {
-+      headers['Content-type'] = this.options.contentType +
-+        (this.options.encoding ? '; charset=' + this.options.encoding : '');
-+
-+      /* Force "Connection: close" for older Mozilla browsers to work
-+       * around a bug where XMLHttpRequest sends an incorrect
-+       * Content-length header. See Mozilla Bugzilla #246651.
-+       */
-+      if (this.transport.overrideMimeType &&
-+          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] &lt; 2005)
-+            headers['Connection'] = 'close';
-+    }
-+
-+    // user-defined headers
-+    if (typeof this.options.requestHeaders == 'object') {
-+      var extras = this.options.requestHeaders;
-+
-+      if (Object.isFunction(extras.push))
-+        for (var i = 0, length = extras.length; i &lt; length; i += 2)
-+          headers[extras[i]] = extras[i+1];
-+      else
-+        $H(extras).each(function(pair) { headers[pair.key] = pair.value });
-+    }
-+
-+    for (var name in headers)
-+      this.transport.setRequestHeader(name, headers[name]);
-+  },
-+
-+  success: function() {
-+    var status = this.getStatus();
-+    return !status || (status >= 200 && status &lt; 300);
-+  },
-+
-+  getStatus: function() {
-+    try {
-+      return this.transport.status || 0;
-+    } catch (e) { return 0 }
-+  },
-+
-+  respondToReadyState: function(readyState) {
-+    var state = Ajax.Request.Events[readyState], response = new Ajax.Response(this);
-+
-+    if (state == 'Complete') {
-+      try {
-+        this._complete = true;
-+        (this.options['on' + response.status]
-+         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
-+         || Prototype.emptyFunction)(response, response.headerJSON);
-+      } catch (e) {
-+        this.dispatchException(e);
-+      }
-+
-+      var contentType = response.getHeader('Content-type');
-+      if (this.options.evalJS == 'force'
-+          || (this.options.evalJS && this.isSameOrigin() && contentType
-+          && contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i)))
-+        this.evalResponse();
-+    }
-+
-+    try {
-+      (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);
-+      Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);
-+    } catch (e) {
-+      this.dispatchException(e);
-+    }
-+
-+    if (state == 'Complete') {
-+      // avoid memory leak in MSIE: clean up
-+      this.transport.onreadystatechange = Prototype.emptyFunction;
-+    }
-+  },
-+
-+  isSameOrigin: function() {
-+    var m = this.url.match(/^\s*https?:\/\/[^\/]*/);
-+    return !m || (m[0] == '#{protocol}//#{domain}#{port}'.interpolate({
-+      protocol: location.protocol,
-+      domain: document.domain,
-+      port: location.port ? ':' + location.port : ''
-+    }));
-+  },
-+
-+  getHeader: function(name) {
-+    try {
-+      return this.transport.getResponseHeader(name) || null;
-+    } catch (e) { return null }
-+  },
-+
-+  evalResponse: function() {
-+    try {
-+      return eval((this.transport.responseText || '').unfilterJSON());
-+    } catch (e) {
-+      this.dispatchException(e);
-+    }
-+  },
-+
-+  dispatchException: function(exception) {
-+    (this.options.onException || Prototype.emptyFunction)(this, exception);
-+    Ajax.Responders.dispatch('onException', this, exception);
-+  }
-+});
-+
-+Ajax.Request.Events =
-+  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];
-+
-+Ajax.Response = Class.create({
-+  initialize: function(request){
-+    this.request = request;
-+    var transport  = this.transport  = request.transport,
-+        readyState = this.readyState = transport.readyState;
-+
-+    if((readyState > 2 && !Prototype.Browser.IE) || readyState == 4) {
-+      this.status       = this.getStatus();
-+      this.statusText   = this.getStatusText();
-+      this.responseText = String.interpret(transport.responseText);
-+      this.headerJSON   = this._getHeaderJSON();
-+    }
-+
-+    if(readyState == 4) {
-+      var xml = transport.responseXML;
-+      this.responseXML  = Object.isUndefined(xml) ? null : xml;
-+      this.responseJSON = this._getResponseJSON();
-+    }
-+  },
-+
-+  status:      0,
-+  statusText: '',
-+
-+  getStatus: Ajax.Request.prototype.getStatus,
-+
-+  getStatusText: function() {
-+    try {
-+      return this.transport.statusText || '';
-+    } catch (e) { return '' }
-+  },
-+
-+  getHeader: Ajax.Request.prototype.getHeader,
-+
-+  getAllHeaders: function() {
-+    try {
-+      return this.getAllResponseHeaders();
-+    } catch (e) { return null }
-+  },
-+
-+  getResponseHeader: function(name) {
-+    return this.transport.getResponseHeader(name);
-+  },
-+
-+  getAllResponseHeaders: function() {
-+    return this.transport.getAllResponseHeaders();
-+  },
-+
-+  _getHeaderJSON: function() {
-+    var json = this.getHeader('X-JSON');
-+    if (!json) return null;
-+    json = decodeURIComponent(escape(json));
-+    try {
-+      return json.evalJSON(this.request.options.sanitizeJSON ||
-+        !this.request.isSameOrigin());
-+    } catch (e) {
-+      this.request.dispatchException(e);
-+    }
-+  },
-+
-+  _getResponseJSON: function() {
-+    var options = this.request.options;
-+    if (!options.evalJSON || (options.evalJSON != 'force' &&
-+      !(this.getHeader('Content-type') || '').include('application/json')) ||
-+        this.responseText.blank())
-+          return null;
-+    try {
-+      return this.responseText.evalJSON(options.sanitizeJSON ||
-+        !this.request.isSameOrigin());
-+    } catch (e) {
-+      this.request.dispatchException(e);
-+    }
-+  }
-+});
-+
-+Ajax.Updater = Class.create(Ajax.Request, {
-+  initialize: function($super, container, url, options) {
-+    this.container = {
-+      success: (container.success || container),
-+      failure: (container.failure || (container.success ? null : container))
-+    };
-+
-+    options = Object.clone(options);
-+    var onComplete = options.onComplete;
-+    options.onComplete = (function(response, json) {
-+      this.updateContent(response.responseText);
-+      if (Object.isFunction(onComplete)) onComplete(response, json);
-+    }).bind(this);
-+
-+    $super(url, options);
-+  },
-+
-+  updateContent: function(responseText) {
-+    var receiver = this.container[this.success() ? 'success' : 'failure'],
-+        options = this.options;
-+
-+    if (!options.evalScripts) responseText = responseText.stripScripts();
-+
-+    if (receiver = $(receiver)) {
-+      if (options.insertion) {
-+        if (Object.isString(options.insertion)) {
-+          var insertion = { }; insertion[options.insertion] = responseText;
-+          receiver.insert(insertion);
-+        }
-+        else options.insertion(receiver, responseText);
-+      }
-+      else receiver.update(responseText);
-+    }
-+  }
-+});
-+
-+Ajax.PeriodicalUpdater = Class.create(Ajax.Base, {
-+  initialize: function($super, container, url, options) {
-+    $super(options);
-+    this.onComplete = this.options.onComplete;
-+
-+    this.frequency = (this.options.frequency || 2);
-+    this.decay = (this.options.decay || 1);
-+
-+    this.updater = { };
-+    this.container = container;
-+    this.url = url;
-+
-+    this.start();
-+  },
-+
-+  start: function() {
-+    this.options.onComplete = this.updateComplete.bind(this);
-+    this.onTimerEvent();
-+  },
-+
-+  stop: function() {
-+    this.updater.options.onComplete = undefined;
-+    clearTimeout(this.timer);
-+    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
-+  },
-+
-+  updateComplete: function(response) {
-+    if (this.options.decay) {
-+      this.decay = (response.responseText == this.lastText ?
-+        this.decay * this.options.decay : 1);
-+
-+      this.lastText = response.responseText;
-+    }
-+    this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency);
-+  },
-+
-+  onTimerEvent: function() {
-+    this.updater = new Ajax.Updater(this.container, this.url, this.options);
-+  }
-+});
-+function $(element) {
-+  if (arguments.length > 1) {
-+    for (var i = 0, elements = [], length = arguments.length; i &lt; length; i++)
-+      elements.push($(arguments[i]));
-+    return elements;
-+  }
-+  if (Object.isString(element))
-+    element = document.getElementById(element);
-+  return Element.extend(element);
-+}
-+
-+if (Prototype.BrowserFeatures.XPath) {
-+  document._getElementsByXPath = function(expression, parentElement) {
-+    var results = [];
-+    var query = document.evaluate(expression, $(parentElement) || document,
-+      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
-+    for (var i = 0, length = query.snapshotLength; i &lt; length; i++)
-+      results.push(Element.extend(query.snapshotItem(i)));
-+    return results;
-+  };
-+}
-+
-+/*--------------------------------------------------------------------------*/
-+
-+if (!window.Node) var Node = { };
-+
-+if (!Node.ELEMENT_NODE) {
-+  // DOM level 2 ECMAScript Language Binding
-+  Object.extend(Node, {
-+    ELEMENT_NODE: 1,
-+    ATTRIBUTE_NODE: 2,
-+    TEXT_NODE: 3,
-+    CDATA_SECTION_NODE: 4,
-+    ENTITY_REFERENCE_NODE: 5,
-+    ENTITY_NODE: 6,
-+    PROCESSING_INSTRUCTION_NODE: 7,
-+    COMMENT_NODE: 8,
-+    DOCUMENT_NODE: 9,
-+    DOCUMENT_TYPE_NODE: 10,
-+    DOCUMENT_FRAGMENT_NODE: 11,
-+    NOTATION_NODE: 12
-+  });
-+}
-+
-+(function() {
-+  var element = this.Element;
-+  this.Element = function(tagName, attributes) {
-+    attributes = attributes || { };
-+    tagName = tagName.toLowerCase();
-+    var cache = Element.cache;
-+    if (Prototype.Browser.IE && attributes.name) {
-+      tagName = '&lt;' + tagName + ' name="' + attributes.name + '">';
-+      delete attributes.name;
-+      return Element.writeAttribute(document.createElement(tagName), attributes);
-+    }
-+    if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));
-+    return Element.writeAttribute(cache[tagName].cloneNode(false), attributes);
-+  };
-+  Object.extend(this.Element, element || { });
-+}).call(window);
-+
-+Element.cache = { };
-+
-+Element.Methods = {
-+  visible: function(element) {
-+    return $(element).style.display != 'none';
-+  },
-+
-+  toggle: function(element) {
-+    element = $(element);
-+    Element[Element.visible(element) ? 'hide' : 'show'](element);
-+    return element;
-+  },
-+
-+  hide: function(element) {
-+    $(element).style.display = 'none';
-+    return element;
-+  },
-+
-+  show: function(element) {
-+    $(element).style.display = '';
-+    return element;
-+  },
-+
-+  remove: function(element) {
-+    element = $(element);
-+    element.parentNode.removeChild(element);
-+    return element;
-+  },
-+
-+  update: function(element, content) {
-+    element = $(element);
-+    if (content && content.toElement) content = content.toElement();
-+    if (Object.isElement(content)) return element.update().insert(content);
-+    content = Object.toHTML(content);
-+    element.innerHTML = content.stripScripts();
-+    content.evalScripts.bind(content).defer();
-+    return element;
-+  },
-+
-+  replace: function(element, content) {
-+    element = $(element);
-+    if (content && content.toElement) content = content.toElement();
-+    else if (!Object.isElement(content)) {
-+      content = Object.toHTML(content);
-+      var range = element.ownerDocument.createRange();
-+      range.selectNode(element);
-+      content.evalScripts.bind(content).defer();
-+      content = range.createContextualFragment(content.stripScripts());
-+    }
-+    element.parentNode.replaceChild(content, element);
-+    return element;
-+  },
-+
-+  insert: function(element, insertions) {
-+    element = $(element);
-+
-+    if (Object.isString(insertions) || Object.isNumber(insertions) ||
-+        Object.isElement(insertions) || (insertions && (insertions.toElement || insertions.toHTML)))
-+          insertions = {bottom:insertions};
-+
-+    var content, insert, tagName, childNodes;
-+
-+    for (var position in insertions) {
-+      content  = insertions[position];
-+      position = position.toLowerCase();
-+      insert = Element._insertionTranslations[position];
-+
-+      if (content && content.toElement) content = content.toElement();
-+      if (Object.isElement(content)) {
-+        insert(element, content);
-+        continue;
-+      }
-+
-+      content = Object.toHTML(content);
-+
-+      tagName = ((position == 'before' || position == 'after')
-+        ? element.parentNode : element).tagName.toUpperCase();
-+
-+      childNodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
-+
-+      if (position == 'top' || position == 'after') childNodes.reverse();
-+      childNodes.each(insert.curry(element));
-+
-+      content.evalScripts.bind(content).defer();
-+    }
-+
-+    return element;
-+  },
-+
-+  wrap: function(element, wrapper, attributes) {
-+    element = $(element);
-+    if (Object.isElement(wrapper))
-+      $(wrapper).writeAttribute(attributes || { });
-+    else if (Object.isString(wrapper)) wrapper = new Element(wrapper, attributes);
-+    else wrapper = new Element('div', wrapper);
-+    if (element.parentNode)
-+      element.parentNode.replaceChild(wrapper, element);
-+    wrapper.appendChild(element);
-+    return wrapper;
-+  },
-+
-+  inspect: function(element) {
-+    element = $(element);
-+    var result = '&lt;' + element.tagName.toLowerCase();
-+    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
-+      var property = pair.first(), attribute = pair.last();
-+      var value = (element[property] || '').toString();
-+      if (value) result += ' ' + attribute + '=' + value.inspect(true);
-+    });
-+    return result + '>';
-+  },
-+
-+  recursivelyCollect: function(element, property) {
-+    element = $(element);
-+    var elements = [];
-+    while (element = element[property])
-+      if (element.nodeType == 1)
-+        elements.push(Element.extend(element));
-+    return elements;
-+  },
-+
-+  ancestors: function(element) {
-+    return $(element).recursivelyCollect('parentNode');
-+  },
-+
-+  descendants: function(element) {
-+    return $(element).select("*");
-+  },
-+
-+  firstDescendant: function(element) {
-+    element = $(element).firstChild;
-+    while (element && element.nodeType != 1) element = element.nextSibling;
-+    return $(element);
-+  },
-+
-+  immediateDescendants: function(element) {
-+    if (!(element = $(element).firstChild)) return [];
-+    while (element && element.nodeType != 1) element = element.nextSibling;
-+    if (element) return [element].concat($(element).nextSiblings());
-+    return [];
-+  },
-+
-+  previousSiblings: function(element) {
-+    return $(element).recursivelyCollect('previousSibling');
-+  },
-+
-+  nextSiblings: function(element) {
-+    return $(element).recursivelyCollect('nextSibling');
-+  },
-+
-+  siblings: function(element) {
-+    element = $(element);
-+    return element.previousSiblings().reverse().concat(element.nextSiblings());
-+  },
-+
-+  match: function(element, selector) {
-+    if (Object.isString(selector))
-+      selector = new Selector(selector);
-+    return selector.match($(element));
-+  },
-+
-+  up: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return $(element.parentNode);
-+    var ancestors = element.ancestors();
-+    return Object.isNumber(expression) ? ancestors[expression] :
-+      Selector.findElement(ancestors, expression, index);
-+  },
-+
-+  down: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return element.firstDescendant();
-+    return Object.isNumber(expression) ? element.descendants()[expression] :
-+      element.select(expression)[index || 0];
-+  },
-+
-+  previous: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return $(Selector.handlers.previousElementSibling(element));
-+    var previousSiblings = element.previousSiblings();
-+    return Object.isNumber(expression) ? previousSiblings[expression] :
-+      Selector.findElement(previousSiblings, expression, index);
-+  },
-+
-+  next: function(element, expression, index) {
-+    element = $(element);
-+    if (arguments.length == 1) return $(Selector.handlers.nextElementSibling(element));
-+    var nextSiblings = element.nextSiblings();
-+    return Object.isNumber(expression) ? nextSiblings[expression] :
-+      Selector.findElement(nextSiblings, expression, index);
-+  },
-+
-+  select: function() {
-+    var args = $A(arguments), element = $(args.shift());
-+    return Selector.findChildElements(element, args);
-+  },
-+
-+  adjacent: function() {
-+    var args = $A(arguments), element = $(args.shift());
-+    return Selector.findChildElements(element.parentNode, args).without(element);
-+  },
-+
-+  identify: function(element) {
-+    element = $(element);
-+    var id = element.readAttribute('id'), self = arguments.callee;
-+    if (id) return id;
-+    do { id = 'anonymous_element_' + self.counter++ } while ($(id));
-+    element.writeAttribute('id', id);
-+    return id;
-+  },
-+
-+  readAttribute: function(element, name) {
-+    element = $(element);
-+    if (Prototype.Browser.IE) {
-+      var t = Element._attributeTranslations.read;
-+      if (t.values[name]) return t.values[name](element, name);
-+      if (t.names[name]) name = t.names[name];
-+      if (name.include(':')) {
-+        return (!element.attributes || !element.attributes[name]) ? null :
-+         element.attributes[name].value;
-+      }
-+    }
-+    return element.getAttribute(name);
-+  },
-+
-+  writeAttribute: function(element, name, value) {
-+    element = $(element);
-+    var attributes = { }, t = Element._attributeTranslations.write;
-+
-+    if (typeof name == 'object') attributes = name;
-+    else attributes[name] = Object.isUndefined(value) ? true : value;
-+
-+    for (var attr in attributes) {
-+      name = t.names[attr] || attr;
-+      value = attributes[attr];
-+      if (t.values[attr]) name = t.values[attr](element, value);
-+      if (value === false || value === null)
-+        element.removeAttribute(name);
-+      else if (value === true)
-+        element.setAttribute(name, name);
-+      else element.setAttribute(name, value);
-+    }
-+    return element;
-+  },
-+
-+  getHeight: function(element) {
-+    return $(element).getDimensions().height;
-+  },
-+
-+  getWidth: function(element) {
-+    return $(element).getDimensions().width;
-+  },
-+
-+  classNames: function(element) {
-+    return new Element.ClassNames(element);
-+  },
-+
-+  hasClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    var elementClassName = element.className;
-+    return (elementClassName.length > 0 && (elementClassName == className ||
-+      new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName)));
-+  },
-+
-+  addClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    if (!element.hasClassName(className))
-+      element.className += (element.className ? ' ' : '') + className;
-+    return element;
-+  },
-+
-+  removeClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    element.className = element.className.replace(
-+      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();
-+    return element;
-+  },
-+
-+  toggleClassName: function(element, className) {
-+    if (!(element = $(element))) return;
-+    return element[element.hasClassName(className) ?
-+      'removeClassName' : 'addClassName'](className);
-+  },
-+
-+  // removes whitespace-only text node children
-+  cleanWhitespace: function(element) {
-+    element = $(element);
-+    var node = element.firstChild;
-+    while (node) {
-+      var nextNode = node.nextSibling;
-+      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
-+        element.removeChild(node);
-+      node = nextNode;
-+    }
-+    return element;
-+  },
-+
-+  empty: function(element) {
-+    return $(element).innerHTML.blank();
-+  },
-+
-+  descendantOf: function(element, ancestor) {
-+    element = $(element), ancestor = $(ancestor);
-+    var originalAncestor = ancestor;
-+
-+    if (element.compareDocumentPosition)
-+      return (element.compareDocumentPosition(ancestor) & 8) === 8;
-+
-+    if (element.sourceIndex && !Prototype.Browser.Opera) {
-+      var e = element.sourceIndex, a = ancestor.sourceIndex,
-+       nextAncestor = ancestor.nextSibling;
-+      if (!nextAncestor) {
-+        do { ancestor = ancestor.parentNode; }
-+        while (!(nextAncestor = ancestor.nextSibling) && ancestor.parentNode);
-+      }
-+      if (nextAncestor && nextAncestor.sourceIndex)
-+       return (e > a && e &lt; nextAncestor.sourceIndex);
-+    }
-+
-+    while (element = element.parentNode)
-+      if (element == originalAncestor) return true;
-+    return false;
-+  },
-+
-+  scrollTo: function(element) {
-+    element = $(element);
-+    var pos = element.cumulativeOffset();
-+    window.scrollTo(pos[0], pos[1]);
-+    return element;
-+  },
-+
-+  getStyle: function(element, style) {
-+    element = $(element);
-+    style = style == 'float' ? 'cssFloat' : style.camelize();
-+    var value = element.style[style];
-+    if (!value) {
-+      var css = document.defaultView.getComputedStyle(element, null);
-+      value = css ? css[style] : null;
-+    }
-+    if (style == 'opacity') return value ? parseFloat(value) : 1.0;
-+    return value == 'auto' ? null : value;
-+  },
-+
-+  getOpacity: function(element) {
-+    return $(element).getStyle('opacity');
-+  },
-+
-+  setStyle: function(element, styles) {
-+    element = $(element);
-+    var elementStyle = element.style, match;
-+    if (Object.isString(styles)) {
-+      element.style.cssText += ';' + styles;
-+      return styles.include('opacity') ?
-+        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : element;
-+    }
-+    for (var property in styles)
-+      if (property == 'opacity') element.setOpacity(styles[property]);
-+      else
-+        elementStyle[(property == 'float' || property == 'cssFloat') ?
-+          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :
-+            property] = styles[property];
-+
-+    return element;
-+  },
-+
-+  setOpacity: function(element, value) {
-+    element = $(element);
-+    element.style.opacity = (value == 1 || value === '') ? '' :
-+      (value &lt; 0.00001) ? 0 : value;
-+    return element;
-+  },
-+
-+  getDimensions: function(element) {
-+    element = $(element);
-+    var display = $(element).getStyle('display');
-+    if (display != 'none' && display != null) // Safari bug
-+      return {width: element.offsetWidth, height: element.offsetHeight};
-+
-+    // All *Width and *Height properties give 0 on elements with display none,
-+    // so enable the element temporarily
-+    var els = element.style;
-+    var originalVisibility = els.visibility;
-+    var originalPosition = els.position;
-+    var originalDisplay = els.display;
-+    els.visibility = 'hidden';
-+    els.position = 'absolute';
-+    els.display = 'block';
-+    var originalWidth = element.clientWidth;
-+    var originalHeight = element.clientHeight;
-+    els.display = originalDisplay;
-+    els.position = originalPosition;
-+    els.visibility = originalVisibility;
-+    return {width: originalWidth, height: originalHeight};
-+  },
-+
-+  makePositioned: function(element) {
-+    element = $(element);
-+    var pos = Element.getStyle(element, 'position');
-+    if (pos == 'static' || !pos) {
-+      element._madePositioned = true;
-+      element.style.position = 'relative';
-+      // Opera returns the offset relative to the positioning context, when an
-+      // element is position relative but top and left have not been defined
-+      if (window.opera) {
-+        element.style.top = 0;
-+        element.style.left = 0;
-+      }
-+    }
-+    return element;
-+  },
-+
-+  undoPositioned: function(element) {
-+    element = $(element);
-+    if (element._madePositioned) {
-+      element._madePositioned = undefined;
-+      element.style.position =
-+        element.style.top =
-+        element.style.left =
-+        element.style.bottom =
-+        element.style.right = '';
-+    }
-+    return element;
-+  },
-+
-+  makeClipping: function(element) {
-+    element = $(element);
-+    if (element._overflow) return element;
-+    element._overflow = Element.getStyle(element, 'overflow') || 'auto';
-+    if (element._overflow !== 'hidden')
-+      element.style.overflow = 'hidden';
-+    return element;
-+  },
-+
-+  undoClipping: function(element) {
-+    element = $(element);
-+    if (!element._overflow) return element;
-+    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;
-+    element._overflow = null;
-+    return element;
-+  },
-+
-+  cumulativeOffset: function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+      element = element.offsetParent;
-+    } while (element);
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  positionedOffset: function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+      element = element.offsetParent;
-+      if (element) {
-+        if (element.tagName == 'BODY') break;
-+        var p = Element.getStyle(element, 'position');
-+        if (p !== 'static') break;
-+      }
-+    } while (element);
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  absolutize: function(element) {
-+    element = $(element);
-+    if (element.getStyle('position') == 'absolute') return;
-+    // Position.prepare(); // To be done manually by Scripty when it needs it.
-+
-+    var offsets = element.positionedOffset();
-+    var top     = offsets[1];
-+    var left    = offsets[0];
-+    var width   = element.clientWidth;
-+    var height  = element.clientHeight;
-+
-+    element._originalLeft   = left - parseFloat(element.style.left  || 0);
-+    element._originalTop    = top  - parseFloat(element.style.top || 0);
-+    element._originalWidth  = element.style.width;
-+    element._originalHeight = element.style.height;
-+
-+    element.style.position = 'absolute';
-+    element.style.top    = top + 'px';
-+    element.style.left   = left + 'px';
-+    element.style.width  = width + 'px';
-+    element.style.height = height + 'px';
-+    return element;
-+  },
-+
-+  relativize: function(element) {
-+    element = $(element);
-+    if (element.getStyle('position') == 'relative') return;
-+    // Position.prepare(); // To be done manually by Scripty when it needs it.
-+
-+    element.style.position = 'relative';
-+    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);
-+    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);
-+
-+    element.style.top    = top + 'px';
-+    element.style.left   = left + 'px';
-+    element.style.height = element._originalHeight;
-+    element.style.width  = element._originalWidth;
-+    return element;
-+  },
-+
-+  cumulativeScrollOffset: function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.scrollTop  || 0;
-+      valueL += element.scrollLeft || 0;
-+      element = element.parentNode;
-+    } while (element);
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  getOffsetParent: function(element) {
-+    if (element.offsetParent) return $(element.offsetParent);
-+    if (element == document.body) return $(element);
-+
-+    while ((element = element.parentNode) && element != document.body)
-+      if (Element.getStyle(element, 'position') != 'static')
-+        return $(element);
-+
-+    return $(document.body);
-+  },
-+
-+  viewportOffset: function(forElement) {
-+    var valueT = 0, valueL = 0;
-+
-+    var element = forElement;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+
-+      // Safari fix
-+      if (element.offsetParent == document.body &&
-+        Element.getStyle(element, 'position') == 'absolute') break;
-+
-+    } while (element = element.offsetParent);
-+
-+    element = forElement;
-+    do {
-+      if (!Prototype.Browser.Opera || element.tagName == 'BODY') {
-+        valueT -= element.scrollTop  || 0;
-+        valueL -= element.scrollLeft || 0;
-+      }
-+    } while (element = element.parentNode);
-+
-+    return Element._returnOffset(valueL, valueT);
-+  },
-+
-+  clonePosition: function(element, source) {
-+    var options = Object.extend({
-+      setLeft:    true,
-+      setTop:     true,
-+      setWidth:   true,
-+      setHeight:  true,
-+      offsetTop:  0,
-+      offsetLeft: 0
-+    }, arguments[2] || { });
-+
-+    // find page position of source
-+    source = $(source);
-+    var p = source.viewportOffset();
-+
-+    // find coordinate system to use
-+    element = $(element);
-+    var delta = [0, 0];
-+    var parent = null;
-+    // delta [0,0] will do fine with position: fixed elements,
-+    // position:absolute needs offsetParent deltas
-+    if (Element.getStyle(element, 'position') == 'absolute') {
-+      parent = element.getOffsetParent();
-+      delta = parent.viewportOffset();
-+    }
-+
-+    // correct by body offsets (fixes Safari)
-+    if (parent == document.body) {
-+      delta[0] -= document.body.offsetLeft;
-+      delta[1] -= document.body.offsetTop;
-+    }
-+
-+    // set position
-+    if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
-+    if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
-+    if (options.setWidth)  element.style.width = source.offsetWidth + 'px';
-+    if (options.setHeight) element.style.height = source.offsetHeight + 'px';
-+    return element;
-+  }
-+};
-+
-+Element.Methods.identify.counter = 1;
-+
-+Object.extend(Element.Methods, {
-+  getElementsBySelector: Element.Methods.select,
-+  childElements: Element.Methods.immediateDescendants
-+});
-+
-+Element._attributeTranslations = {
-+  write: {
-+    names: {
-+      className: 'class',
-+      htmlFor:   'for'
-+    },
-+    values: { }
-+  }
-+};
-+
-+if (Prototype.Browser.Opera) {
-+  Element.Methods.getStyle = Element.Methods.getStyle.wrap(
-+    function(proceed, element, style) {
-+      switch (style) {
-+        case 'left': case 'top': case 'right': case 'bottom':
-+          if (proceed(element, 'position') === 'static') return null;
-+        case 'height': case 'width':
-+          // returns '0px' for hidden elements; we want it to return null
-+          if (!Element.visible(element)) return null;
-+
-+          // returns the border-box dimensions rather than the content-box
-+          // dimensions, so we subtract padding and borders from the value
-+          var dim = parseInt(proceed(element, style), 10);
-+
-+          if (dim !== element['offset' + style.capitalize()])
-+            return dim + 'px';
-+
-+          var properties;
-+          if (style === 'height') {
-+            properties = ['border-top-width', 'padding-top',
-+             'padding-bottom', 'border-bottom-width'];
-+          }
-+          else {
-+            properties = ['border-left-width', 'padding-left',
-+             'padding-right', 'border-right-width'];
-+          }
-+          return properties.inject(dim, function(memo, property) {
-+            var val = proceed(element, property);
-+            return val === null ? memo : memo - parseInt(val, 10);
-+          }) + 'px';
-+        default: return proceed(element, style);
-+      }
-+    }
-+  );
-+
-+  Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(
-+    function(proceed, element, attribute) {
-+      if (attribute === 'title') return element.title;
-+      return proceed(element, attribute);
-+    }
-+  );
-+}
-+
-+else if (Prototype.Browser.IE) {
-+  // IE doesn't report offsets correctly for static elements, so we change them
-+  // to "relative" to get the values, then change them back.
-+  Element.Methods.getOffsetParent = Element.Methods.getOffsetParent.wrap(
-+    function(proceed, element) {
-+      element = $(element);
-+      var position = element.getStyle('position');
-+      if (position !== 'static') return proceed(element);
-+      element.setStyle({ position: 'relative' });
-+      var value = proceed(element);
-+      element.setStyle({ position: position });
-+      return value;
-+    }
-+  );
-+
-+  $w('positionedOffset viewportOffset').each(function(method) {
-+    Element.Methods[method] = Element.Methods[method].wrap(
-+      function(proceed, element) {
-+        element = $(element);
-+        var position = element.getStyle('position');
-+        if (position !== 'static') return proceed(element);
-+        // Trigger hasLayout on the offset parent so that IE6 reports
-+        // accurate offsetTop and offsetLeft values for position: fixed.
-+        var offsetParent = element.getOffsetParent();
-+        if (offsetParent && offsetParent.getStyle('position') === 'fixed')
-+          offsetParent.setStyle({ zoom: 1 });
-+        element.setStyle({ position: 'relative' });
-+        var value = proceed(element);
-+        element.setStyle({ position: position });
-+        return value;
-+      }
-+    );
-+  });
-+
-+  Element.Methods.getStyle = function(element, style) {
-+    element = $(element);
-+    style = (style == 'float' || style == 'cssFloat') ? 'styleFloat' : style.camelize();
-+    var value = element.style[style];
-+    if (!value && element.currentStyle) value = element.currentStyle[style];
-+
-+    if (style == 'opacity') {
-+      if (value = (element.getStyle('filter') || '').match(/alpha\(opacity=(.*)\)/))
-+        if (value[1]) return parseFloat(value[1]) / 100;
-+      return 1.0;
-+    }
-+
-+    if (value == 'auto') {
-+      if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))
-+        return element['offset' + style.capitalize()] + 'px';
-+      return null;
-+    }
-+    return value;
-+  };
-+
-+  Element.Methods.setOpacity = function(element, value) {
-+    function stripAlpha(filter){
-+      return filter.replace(/alpha\([^\)]*\)/gi,'');
-+    }
-+    element = $(element);
-+    var currentStyle = element.currentStyle;
-+    if ((currentStyle && !currentStyle.hasLayout) ||
-+      (!currentStyle && element.style.zoom == 'normal'))
-+        element.style.zoom = 1;
-+
-+    var filter = element.getStyle('filter'), style = element.style;
-+    if (value == 1 || value === '') {
-+      (filter = stripAlpha(filter)) ?
-+        style.filter = filter : style.removeAttribute('filter');
-+      return element;
-+    } else if (value &lt; 0.00001) value = 0;
-+    style.filter = stripAlpha(filter) +
-+      'alpha(opacity=' + (value * 100) + ')';
-+    return element;
-+  };
-+
-+  Element._attributeTranslations = {
-+    read: {
-+      names: {
-+        'class': 'className',
-+        'for':   'htmlFor'
-+      },
-+      values: {
-+        _getAttr: function(element, attribute) {
-+          return element.getAttribute(attribute, 2);
-+        },
-+        _getAttrNode: function(element, attribute) {
-+          var node = element.getAttributeNode(attribute);
-+          return node ? node.value : "";
-+        },
-+        _getEv: function(element, attribute) {
-+          attribute = element.getAttribute(attribute);
-+          return attribute ? attribute.toString().slice(23, -2) : null;
-+        },
-+        _flag: function(element, attribute) {
-+          return $(element).hasAttribute(attribute) ? attribute : null;
-+        },
-+        style: function(element) {
-+          return element.style.cssText.toLowerCase();
-+        },
-+        title: function(element) {
-+          return element.title;
-+        }
-+      }
-+    }
-+  };
-+
-+  Element._attributeTranslations.write = {
-+    names: Object.extend({
-+      cellpadding: 'cellPadding',
-+      cellspacing: 'cellSpacing'
-+    }, Element._attributeTranslations.read.names),
-+    values: {
-+      checked: function(element, value) {
-+        element.checked = !!value;
-+      },
-+
-+      style: function(element, value) {
-+        element.style.cssText = value ? value : '';
-+      }
-+    }
-+  };
-+
-+  Element._attributeTranslations.has = {};
-+
-+  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +
-+      'encType maxLength readOnly longDesc').each(function(attr) {
-+    Element._attributeTranslations.write.names[attr.toLowerCase()] = attr;
-+    Element._attributeTranslations.has[attr.toLowerCase()] = attr;
-+  });
-+
-+  (function(v) {
-+    Object.extend(v, {
-+      href:        v._getAttr,
-+      src:         v._getAttr,
-+      type:        v._getAttr,
-+      action:      v._getAttrNode,
-+      disabled:    v._flag,
-+      checked:     v._flag,
-+      readonly:    v._flag,
-+      multiple:    v._flag,
-+      onload:      v._getEv,
-+      onunload:    v._getEv,
-+      onclick:     v._getEv,
-+      ondblclick:  v._getEv,
-+      onmousedown: v._getEv,
-+      onmouseup:   v._getEv,
-+      onmouseover: v._getEv,
-+      onmousemove: v._getEv,
-+      onmouseout:  v._getEv,
-+      onfocus:     v._getEv,
-+      onblur:      v._getEv,
-+      onkeypress:  v._getEv,
-+      onkeydown:   v._getEv,
-+      onkeyup:     v._getEv,
-+      onsubmit:    v._getEv,
-+      onreset:     v._getEv,
-+      onselect:    v._getEv,
-+      onchange:    v._getEv
-+    });
-+  })(Element._attributeTranslations.read.values);
-+}
-+
-+else if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent)) {
-+  Element.Methods.setOpacity = function(element, value) {
-+    element = $(element);
-+    element.style.opacity = (value == 1) ? 0.999999 :
-+      (value === '') ? '' : (value &lt; 0.00001) ? 0 : value;
-+    return element;
-+  };
-+}
-+
-+else if (Prototype.Browser.WebKit) {
-+  Element.Methods.setOpacity = function(element, value) {
-+    element = $(element);
-+    element.style.opacity = (value == 1 || value === '') ? '' :
-+      (value &lt; 0.00001) ? 0 : value;
-+
-+    if (value == 1)
-+      if(element.tagName == 'IMG' && element.width) {
-+        element.width++; element.width--;
-+      } else try {
-+        var n = document.createTextNode(' ');
-+        element.appendChild(n);
-+        element.removeChild(n);
-+      } catch (e) { }
-+
-+    return element;
-+  };
-+
-+  // Safari returns margins on body which is incorrect if the child is absolutely
-+  // positioned.  For performance reasons, redefine Element#cumulativeOffset for
-+  // KHTML/WebKit only.
-+  Element.Methods.cumulativeOffset = function(element) {
-+    var valueT = 0, valueL = 0;
-+    do {
-+      valueT += element.offsetTop  || 0;
-+      valueL += element.offsetLeft || 0;
-+      if (element.offsetParent == document.body)
-+        if (Element.getStyle(element, 'position') == 'absolute') break;
-+
-+      element = element.offsetParent;
-+    } while (element);
-+
-+    return Element._returnOffset(valueL, valueT);
-+  };
-+}
-+
-+if (Prototype.Browser.IE || Prototype.Browser.Opera) {
-+  // IE and Opera are missing .innerHTML support for TABLE-related and SELECT elements
-+  Element.Methods.update = function(element, content) {
-+    element = $(element);
-+
-+    if (content && content.toElement) content = content.toElement();
-+    if (Object.isElement(content)) return element.update().insert(content);
-+
-+    content = Object.toHTML(content);
-+    var tagName = element.tagName.toUpperCase();
-+
-+    if (tagName in Element._insertionTranslations.tags) {
-+      $A(element.childNodes).each(function(node) { element.removeChild(node) });
-+      Element._getContentFromAnonymousElement(tagName, content.stripScripts())
-+        .each(function(node) { element.appendChild(node) });
-+    }
-+    else element.innerHTML = content.stripScripts();
-+
-+    content.evalScripts.bind(content).defer();
-+    return element;
-+  };
-+}
-+
-+if ('outerHTML' in document.createElement('div')) {
-+  Element.Methods.replace = function(element, content) {
-+    element = $(element);
-+
-+    if (content && content.toElement) content = content.toElement();
-+    if (Object.isElement(content)) {
-+      element.parentNode.replaceChild(content, element);
-+      return element;
-+    }
-+
-+    content = Object.toHTML(content);
-+    var parent = element.parentNode, tagName = parent.tagName.toUpperCase();
-+
-+    if (Element._insertionTranslations.tags[tagName]) {
-+      var nextSibling = element.next();
-+      var fragments = Element._getContentFromAnonymousElement(tagName, content.stripScripts());
-+      parent.removeChild(element);
-+      if (nextSibling)
-+        fragments.each(function(node) { parent.insertBefore(node, nextSibling) });
-+      else
-+        fragments.each(function(node) { parent.appendChild(node) });
-+    }
-+    else element.outerHTML = content.stripScripts();
-+
-+    content.evalScripts.bind(content).defer();
-+    return element;
-+  };
-+}
-+
-+Element._returnOffset = function(l, t) {
-+  var result = [l, t];
-+  result.left = l;
-+  result.top = t;
-+  return result;
-+};
-+
-+Element._getContentFromAnonymousElement = function(tagName, html) {
-+  var div = new Element('div'), t = Element._insertionTranslations.tags[tagName];
-+  if (t) {
-+    div.innerHTML = t[0] + html + t[1];
-+    t[2].times(function() { div = div.firstChild });
-+  } else div.innerHTML = html;
-+  return $A(div.childNodes);
-+};
-+
-+Element._insertionTranslations = {
-+  before: function(element, node) {
-+    element.parentNode.insertBefore(node, element);
-+  },
-+  top: function(element, node) {
-+    element.insertBefore(node, element.firstChild);
-+  },
-+  bottom: function(element, node) {
-+    element.appendChild(node);
-+  },
-+  after: function(element, node) {
-+    element.parentNode.insertBefore(node, element.nextSibling);
-+  },
-+  tags: {
-+    TABLE:  ['&lt;table>',                '&lt;/table>',                   1],
-+    TBODY:  ['&lt;table>&lt;tbody>',         '&lt;/tbody>&lt;/table>',           2],
-+    TR:     ['&lt;table>&lt;tbody>&lt;tr>',     '&lt;/tr>&lt;/tbody>&lt;/table>',      3],
-+    TD:     ['&lt;table>&lt;tbody>&lt;tr>&lt;td>', '&lt;/td>&lt;/tr>&lt;/tbody>&lt;/table>', 4],
-+    SELECT: ['&lt;select>',               '&lt;/select>',                  1]
-+  }
-+};
-+
-+(function() {
-+  Object.extend(this.tags, {
-+    THEAD: this.tags.TBODY,
-+    TFOOT: this.tags.TBODY,
-+    TH:    this.tags.TD
-+  });
-+}).call(Element._insertionTranslations);
-+
-+Element.Methods.Simulated = {
-+  hasAttribute: function(element, attribute) {
-+    attribute = Element._attributeTranslations.has[attribute] || attribute;
-+    var node = $(element).getAttributeNode(attribute);
-+    return node && node.specified;
-+  }
-+};
-+
-+Element.Methods.ByTag = { };
-+
-+Object.extend(Element, Element.Methods);
-+
-+if (!Prototype.BrowserFeatures.ElementExtensions &&
-+    document.createElement('div').__proto__) {
-+  window.HTMLElement = { };
-+  window.HTMLElement.prototype = document.createElement('div').__proto__;
-+  Prototype.BrowserFeatures.ElementExtensions = true;
-+}
-+
-+Element.extend = (function() {
-+  if (Prototype.BrowserFeatures.SpecificElementExtensions)
-+    return Prototype.K;
-+
-+  var Methods = { }, ByTag = Element.Methods.ByTag;
-+
-+  var extend = Object.extend(function(element) {
-+    if (!element || element._extendedByPrototype ||
-+        element.nodeType != 1 || element == window) return element;
-+
-+    var methods = Object.clone(Methods),
-+      tagName = element.tagName, property, value;
-+
-+    // extend methods for specific tags
-+    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);
-+
-+    for (property in methods) {
-+      value = methods[property];
-+      if (Object.isFunction(value) && !(property in element))
-+        element[property] = value.methodize();
-+    }
-+
-+    element._extendedByPrototype = Prototype.emptyFunction;
-+    return element;
-+
-+  }, {
-+    refresh: function() {
-+      // extend methods for all tags (Safari doesn't need this)
-+      if (!Prototype.BrowserFeatures.ElementExtensions) {
-+        Object.extend(Methods, Element.Methods);
-+        Object.extend(Methods, Element.Methods.Simulated);
-+      }
-+    }
-+  });
-+
-+  extend.refresh();
-+  return extend;
-+})();
-+
-+Element.hasAttribute = function(element, attribute) {
-+  if (element.hasAttribute) return element.hasAttribute(attribute);
-+  return Element.Methods.Simulated.hasAttribute(element, attribute);
-+};
-+
-+Element.addMethods = function(methods) {
-+  var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;
-+
-+  if (!methods) {
-+    Object.extend(Form, Form.Methods);
-+    Object.extend(Form.Element, Form.Element.Methods);
-+    Object.extend(Element.Methods.ByTag, {
-+      "FORM":     Object.clone(Form.Methods),
-+      "INPUT":    Object.clone(Form.Element.Methods),
-+      "SELECT":   Object.clone(Form.Element.Methods),
-+      "TEXTAREA": Object.clone(Form.Element.Methods)
-+    });
-+  }
-+
-+  if (arguments.length == 2) {
-+    var tagName = methods;
-+    methods = arguments[1];
-+  }
-+
-+  if (!tagName) Object.extend(Element.Methods, methods || { });
-+  else {
-+    if (Object.isArray(tagName)) tagName.each(extend);
-+    else extend(tagName);
-+  }
-+
-+  function extend(tagName) {
-+    tagName = tagName.toUpperCase();
-+    if (!Element.Methods.ByTag[tagName])
-+      Element.Methods.ByTag[tagName] = { };
-+    Object.extend(Element.Methods.ByTag[tagName], methods);
-+  }
-+
-+  function copy(methods, destination, onlyIfAbsent) {
-+    onlyIfAbsent = onlyIfAbsent || false;
-+    for (var property in methods) {
-+      var value = methods[property];
-+      if (!Object.isFunction(value)) continue;
-+      if (!onlyIfAbsent || !(property in destination))
-+        destination[property] = value.methodize();
-+    }
-+  }
-+
-+  function findDOMClass(tagName) {
-+    var klass;
-+    var trans = {
-+      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",
-+      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList",
-+      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading",
-+      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",
-+      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":
-+      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":
-+      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR":
-+      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":
-+      "FrameSet", "IFRAME": "IFrame"
-+    };
-+    if (trans[tagName]) klass = 'HTML' + trans[tagName] + 'Element';
-+    if (window[klass]) return window[klass];
-+    klass = 'HTML' + tagName + 'Element';
-+    if (window[klass]) return window[klass];
-+    klass = 'HTML' + tagName.capitalize() + 'Element';
-+    if (window[klass]) return window[klass];
-+
-+    window[klass] = { };
-+    window[klass].prototype = document.createElement(tagName).__proto__;
-+    return window[klass];
-+  }
-+
-+  if (F.ElementExtensions) {
-+    copy(Element.Methods, HTMLElement.prototype);
-+    copy(Element.Methods.Simulated, HTMLElement.prototype, true);
-+  }
-+
-+  if (F.SpecificElementExtensions) {
-+    for (var tag in Element.Methods.ByTag) {
-+      var klass = findDOMClass(tag);
-+      if (Object.isUndefined(klass)) continue;
-+      copy(T[tag], klass.prototype);
-+    }
-+  }
-+
-+  Object.extend(Element, Element.Methods);
-+  delete Element.ByTag;
-+
-+  if (Element.extend.refresh) Element.extend.refresh();
-+  Element.cache = { };
-+};
-+
-+document.viewport = {
-+  getDimensions: function() {
-+    var dimensions = { };
-+    var B = Prototype.Browser;
-+    $w('width height').each(function(d) {
-+      var D = d.capitalize();
-+      dimensions[d] = (B.WebKit && !document.evaluate) ? self['inner' + D] :
-+        (B.Opera) ? document.body['client' + D] : document.documentElement['client' + D];
-+    });
-+    return dimensions;
-+  },
-+
-+  getWidth: function() {
-+    return this.getDimensions().width;
-+  },
-+
-+  getHeight: function() {
-+    return this.getDimensions().height;
-+  },
-+
-+  getScrollOffsets: function() {
-+    return Element._returnOffset(
-+      window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,
-+      window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);
-+  }
-+};
-+/* Portions of the Selector class are derived from Jack Slocum’s DomQuery,
-+ * part of YUI-Ext version 0.40, distributed under the terms of an MIT-style
-+ * license.  Please see http://www.yui-ext.com/ for more information. */
-+
-+var Selector = Class.create({
-+  initialize: function(expression) {
-+    this.expression = expression.strip();
-+    this.compileMatcher();
-+  },
-+
-+  shouldUseXPath: function() {
-+    if (!Prototype.BrowserFeatures.XPath) return false;
-+
-+    var e = this.expression;
-+
-+    // Safari 3 chokes on :*-of-type and :empty
-+    if (Prototype.Browser.WebKit &&
-+     (e.include("-of-type") || e.include(":empty")))
-+      return false;
-+
-+    // XPath can't do namespaced attributes, nor can it read
-+    // the "checked" property from DOM nodes
-+    if ((/(\[[\w-]*?:|:checked)/).test(this.expression))
-+      return false;
-+
-+    return true;
-+  },
-+
-+  compileMatcher: function() {
-+    if (this.shouldUseXPath())
-+      return this.compileXPathMatcher();
-+
-+    var e = this.expression, ps = Selector.patterns, h = Selector.handlers,
-+        c = Selector.criteria, le, p, m;
-+
-+    if (Selector._cache[e]) {
-+      this.matcher = Selector._cache[e];
-+      return;
-+    }
-+
-+    this.matcher = ["this.matcher = function(root) {",
-+                    "var r = root, h = Selector.handlers, c = false, n;"];
-+
-+    while (e && le != e && (/\S/).test(e)) {
-+      le = e;
-+      for (var i in ps) {
-+        p = ps[i];
-+        if (m = e.match(p)) {
-+          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :
-+    	      new Template(c[i]).evaluate(m));
-+          e = e.replace(m[0], '');
-+          break;
-+        }
-+      }
-+    }
-+
-+    this.matcher.push("return h.unique(n);\n}");
-+    eval(this.matcher.join('\n'));
-+    Selector._cache[this.expression] = this.matcher;
-+  },
-+
-+  compileXPathMatcher: function() {
-+    var e = this.expression, ps = Selector.patterns,
-+        x = Selector.xpath, le, m;
-+
-+    if (Selector._cache[e]) {
-+      this.xpath = Selector._cache[e]; return;
-+    }
-+
-+    this.matcher = ['.//*'];
-+    while (e && le != e && (/\S/).test(e)) {
-+      le = e;
-+      for (var i in ps) {
-+        if (m = e.match(ps[i])) {
-+          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :
-+            new Template(x[i]).evaluate(m));
-+          e = e.replace(m[0], '');
-+          break;
-+        }
-+      }
-+    }
-+
-+    this.xpath = this.matcher.join('');
-+    Selector._cache[this.expression] = this.xpath;
-+  },
-+
-+  findElements: function(root) {
-+    root = root || document;
-+    if (this.xpath) return document._getElementsByXPath(this.xpath, root);
-+    return this.matcher(root);
-+  },
-+
-+  match: function(element) {
-+    this.tokens = [];
-+
-+    var e = this.expression, ps = Selector.patterns, as = Selector.assertions;
-+    var le, p, m;
-+
-+    while (e && le !== e && (/\S/).test(e)) {
-+      le = e;
-+      for (var i in ps) {
-+        p = ps[i];
-+        if (m = e.match(p)) {
-+          // use the Selector.assertions methods unless the selector
-+          // is too complex.
-+          if (as[i]) {
-+            this.tokens.push([i, Object.clone(m)]);
-+            e = e.replace(m[0], '');
-+          } else {
-+            // reluctantly do a document-wide search
-+            // and look for a match in the array
-+            return this.findElements(document).include(element);
-+          }
-+        }
-+      }
-+    }
-+
-+    var match = true, name, matches;
-+    for (var i = 0, token; token = this.tokens[i]; i++) {
-+      name = token[0], matches = token[1];
-+      if (!Selector.assertions[name](element, matches)) {
-+        match = false; break;
-+      }
-+    }
-+
-+    return match;
-+  },
-+
-+  toString: function() {
-+    return this.expression;
-+  },
-+
-+  inspect: function() {
-+    return "#&lt;Selector:" + this.expression.inspect() + ">";
-+  }
-+});
-+
-+Object.extend(Selector, {
-+  _cache: { },
-+
-+  xpath: {
-+    descendant:   "//*",
-+    child:        "/*",
-+    adjacent:     "/following-sibling::*[1]",
-+    laterSibling: '/following-sibling::*',
-+    tagName:      function(m) {
-+      if (m[1] == '*') return '';
-+      return "[local-name()='" + m[1].toLowerCase() +
-+             "' or local-name()='" + m[1].toUpperCase() + "']";
-+    },
-+    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",
-+    id:           "[@id='#{1}']",
-+    attrPresence: function(m) {
-+      m[1] = m[1].toLowerCase();
-+      return new Template("[@#{1}]").evaluate(m);
-+    },
-+    attr: function(m) {
-+      m[1] = m[1].toLowerCase();
-+      m[3] = m[5] || m[6];
-+      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);
-+    },
-+    pseudo: function(m) {
-+      var h = Selector.xpath.pseudos[m[1]];
-+      if (!h) return '';
-+      if (Object.isFunction(h)) return h(m);
-+      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);
-+    },
-+    operators: {
-+      '=':  "[@#{1}='#{3}']",
-+      '!=': "[@#{1}!='#{3}']",
-+      '^=': "[starts-with(@#{1}, '#{3}')]",
-+      '$=': "[substring(@#{1}, (string-length(@#{1}) - string-length('#{3}') + 1))='#{3}']",
-+      '*=': "[contains(@#{1}, '#{3}')]",
-+      '~=': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",
-+      '|=': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"
-+    },
-+    pseudos: {
-+      'first-child': '[not(preceding-sibling::*)]',
-+      'last-child':  '[not(following-sibling::*)]',
-+      'only-child':  '[not(preceding-sibling::* or following-sibling::*)]',
-+      'empty':       "[count(*) = 0 and (count(text()) = 0 or translate(text(), ' \t\r\n', '') = '')]",
-+      'checked':     "[@checked]",
-+      'disabled':    "[@disabled]",
-+      'enabled':     "[not(@disabled)]",
-+      'not': function(m) {
-+        var e = m[6], p = Selector.patterns,
-+            x = Selector.xpath, le, v;
-+
-+        var exclusion = [];
-+        while (e && le != e && (/\S/).test(e)) {
-+          le = e;
-+          for (var i in p) {
-+            if (m = e.match(p[i])) {
-+              v = Object.isFunction(x[i]) ? x[i](m) : new Template(x[i]).evaluate(m);
-+              exclusion.push("(" + v.substring(1, v.length - 1) + ")");
-+              e = e.replace(m[0], '');
-+              break;
-+            }
-+          }
-+        }
-+        return "[not(" + exclusion.join(" and ") + ")]";
-+      },
-+      'nth-child':      function(m) {
-+        return Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);
-+      },
-+      'nth-last-child': function(m) {
-+        return Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);
-+      },
-+      'nth-of-type':    function(m) {
-+        return Selector.xpath.pseudos.nth("position() ", m);
-+      },
-+      'nth-last-of-type': function(m) {
-+        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", m);
-+      },
-+      'first-of-type':  function(m) {
-+        m[6] = "1"; return Selector.xpath.pseudos['nth-of-type'](m);
-+      },
-+      'last-of-type':   function(m) {
-+        m[6] = "1"; return Selector.xpath.pseudos['nth-last-of-type'](m);
-+      },
-+      'only-of-type':   function(m) {
-+        var p = Selector.xpath.pseudos; return p['first-of-type'](m) + p['last-of-type'](m);
-+      },
-+      nth: function(fragment, m) {
-+        var mm, formula = m[6], predicate;
-+        if (formula == 'even') formula = '2n+0';
-+        if (formula == 'odd')  formula = '2n+1';
-+        if (mm = formula.match(/^(\d+)$/)) // digit only
-+          return '[' + fragment + "= " + mm[1] + ']';
-+        if (mm = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
-+          if (mm[1] == "-") mm[1] = -1;
-+          var a = mm[1] ? Number(mm[1]) : 1;
-+          var b = mm[2] ? Number(mm[2]) : 0;
-+          predicate = "[((#{fragment} - #{b}) mod #{a} = 0) and " +
-+          "((#{fragment} - #{b}) div #{a} >= 0)]";
-+          return new Template(predicate).evaluate({
-+            fragment: fragment, a: a, b: b });
-+        }
-+      }
-+    }
-+  },
-+
-+  criteria: {
-+    tagName:      'n = h.tagName(n, r, "#{1}", c);      c = false;',
-+    className:    'n = h.className(n, r, "#{1}", c);    c = false;',
-+    id:           'n = h.id(n, r, "#{1}", c);           c = false;',
-+    attrPresence: 'n = h.attrPresence(n, r, "#{1}", c); c = false;',
-+    attr: function(m) {
-+      m[3] = (m[5] || m[6]);
-+      return new Template('n = h.attr(n, r, "#{1}", "#{3}", "#{2}", c); c = false;').evaluate(m);
-+    },
-+    pseudo: function(m) {
-+      if (m[6]) m[6] = m[6].replace(/"/g, '\\"');
-+      return new Template('n = h.pseudo(n, "#{1}", "#{6}", r, c); c = false;').evaluate(m);
-+    },
-+    descendant:   'c = "descendant";',
-+    child:        'c = "child";',
-+    adjacent:     'c = "adjacent";',
-+    laterSibling: 'c = "laterSibling";'
-+  },
-+
-+  patterns: {
-+    // combinators must be listed first
-+    // (and descendant needs to be last combinator)
-+    laterSibling: /^\s*~\s*/,
-+    child:        /^\s*>\s*/,
-+    adjacent:     /^\s*\+\s*/,
-+    descendant:   /^\s/,
-+
-+    // selectors follow
-+    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,
-+    id:           /^#([\w\-\*]+)(\b|$)/,
-+    className:    /^\.([\w\-\*]+)(\b|$)/,
-+    pseudo:
-+/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)abled|not)(\((.*?)\))?(\b|$|(?=\s|[:+~>]))/,
-+    attrPresence: /^\[([\w]+)\]/,
-+    attr:         /\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=)\s*((['"])([^\4]*?)\4|([^'"][^\]]*?)))?\]/
-+  },
-+
-+  // for Selector.match and Element#match
-+  assertions: {
-+    tagName: function(element, matches) {
-+      return matches[1].toUpperCase() == element.tagName.toUpperCase();
-+    },
-+
-+    className: function(element, matches) {
-+      return Element.hasClassName(element, matches[1]);
-+    },
-+
-+    id: function(element, matches) {
-+      return element.id === matches[1];
-+    },
-+
-+    attrPresence: function(element, matches) {
-+      return Element.hasAttribute(element, matches[1]);
-+    },
-+
-+    attr: function(element, matches) {
-+      var nodeValue = Element.readAttribute(element, matches[1]);
-+      return nodeValue && Selector.operators[matches[2]](nodeValue, matches[5] || matches[6]);
-+    }
-+  },
-+
-+  handlers: {
-+    // UTILITY FUNCTIONS
-+    // joins two collections
-+    concat: function(a, b) {
-+      for (var i = 0, node; node = b[i]; i++)
-+        a.push(node);
-+      return a;
-+    },
-+
-+    // marks an array of nodes for counting
-+    mark: function(nodes) {
-+      var _true = Prototype.emptyFunction;
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        node._countedByPrototype = _true;
-+      return nodes;
-+    },
-+
-+    unmark: function(nodes) {
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        node._countedByPrototype = undefined;
-+      return nodes;
-+    },
-+
-+    // mark each child node with its position (for nth calls)
-+    // "ofType" flag indicates whether we're indexing for nth-of-type
-+    // rather than nth-child
-+    index: function(parentNode, reverse, ofType) {
-+      parentNode._countedByPrototype = Prototype.emptyFunction;
-+      if (reverse) {
-+        for (var nodes = parentNode.childNodes, i = nodes.length - 1, j = 1; i >= 0; i--) {
-+          var node = nodes[i];
-+          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
-+        }
-+      } else {
-+        for (var i = 0, j = 1, nodes = parentNode.childNodes; node = nodes[i]; i++)
-+          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;
-+      }
-+    },
-+
-+    // filters out duplicates and extends all nodes
-+    unique: function(nodes) {
-+      if (nodes.length == 0) return nodes;
-+      var results = [], n;
-+      for (var i = 0, l = nodes.length; i &lt; l; i++)
-+        if (!(n = nodes[i])._countedByPrototype) {
-+          n._countedByPrototype = Prototype.emptyFunction;
-+          results.push(Element.extend(n));
-+        }
-+      return Selector.handlers.unmark(results);
-+    },
-+
-+    // COMBINATOR FUNCTIONS
-+    descendant: function(nodes) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        h.concat(results, node.getElementsByTagName('*'));
-+      return results;
-+    },
-+
-+    child: function(nodes) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        for (var j = 0, child; child = node.childNodes[j]; j++)
-+          if (child.nodeType == 1 && child.tagName != '!') results.push(child);
-+      }
-+      return results;
-+    },
-+
-+    adjacent: function(nodes) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        var next = this.nextElementSibling(node);
-+        if (next) results.push(next);
-+      }
-+      return results;
-+    },
-+
-+    laterSibling: function(nodes) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        h.concat(results, Element.nextSiblings(node));
-+      return results;
-+    },
-+
-+    nextElementSibling: function(node) {
-+      while (node = node.nextSibling)
-+	      if (node.nodeType == 1) return node;
-+      return null;
-+    },
-+
-+    previousElementSibling: function(node) {
-+      while (node = node.previousSibling)
-+        if (node.nodeType == 1) return node;
-+      return null;
-+    },
-+
-+    // TOKEN FUNCTIONS
-+    tagName: function(nodes, root, tagName, combinator) {
-+      var uTagName = tagName.toUpperCase();
-+      var results = [], h = Selector.handlers;
-+      if (nodes) {
-+        if (combinator) {
-+          // fastlane for ordinary descendant combinators
-+          if (combinator == "descendant") {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              h.concat(results, node.getElementsByTagName(tagName));
-+            return results;
-+          } else nodes = this[combinator](nodes);
-+          if (tagName == "*") return nodes;
-+        }
-+        for (var i = 0, node; node = nodes[i]; i++)
-+          if (node.tagName.toUpperCase() === uTagName) results.push(node);
-+        return results;
-+      } else return root.getElementsByTagName(tagName);
-+    },
-+
-+    id: function(nodes, root, id, combinator) {
-+      var targetNode = $(id), h = Selector.handlers;
-+      if (!targetNode) return [];
-+      if (!nodes && root == document) return [targetNode];
-+      if (nodes) {
-+        if (combinator) {
-+          if (combinator == 'child') {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              if (targetNode.parentNode == node) return [targetNode];
-+          } else if (combinator == 'descendant') {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              if (Element.descendantOf(targetNode, node)) return [targetNode];
-+          } else if (combinator == 'adjacent') {
-+            for (var i = 0, node; node = nodes[i]; i++)
-+              if (Selector.handlers.previousElementSibling(targetNode) == node)
-+                return [targetNode];
-+          } else nodes = h[combinator](nodes);
-+        }
-+        for (var i = 0, node; node = nodes[i]; i++)
-+          if (node == targetNode) return [targetNode];
-+        return [];
-+      }
-+      return (targetNode && Element.descendantOf(targetNode, root)) ? [targetNode] : [];
-+    },
-+
-+    className: function(nodes, root, className, combinator) {
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      return Selector.handlers.byClassName(nodes, root, className);
-+    },
-+
-+    byClassName: function(nodes, root, className) {
-+      if (!nodes) nodes = Selector.handlers.descendant([root]);
-+      var needle = ' ' + className + ' ';
-+      for (var i = 0, results = [], node, nodeClassName; node = nodes[i]; i++) {
-+        nodeClassName = node.className;
-+        if (nodeClassName.length == 0) continue;
-+        if (nodeClassName == className || (' ' + nodeClassName + ' ').include(needle))
-+          results.push(node);
-+      }
-+      return results;
-+    },
-+
-+    attrPresence: function(nodes, root, attr, combinator) {
-+      if (!nodes) nodes = root.getElementsByTagName("*");
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      var results = [];
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        if (Element.hasAttribute(node, attr)) results.push(node);
-+      return results;
-+    },
-+
-+    attr: function(nodes, root, attr, value, operator, combinator) {
-+      if (!nodes) nodes = root.getElementsByTagName("*");
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      var handler = Selector.operators[operator], results = [];
-+      for (var i = 0, node; node = nodes[i]; i++) {
-+        var nodeValue = Element.readAttribute(node, attr);
-+        if (nodeValue === null) continue;
-+        if (handler(nodeValue, value)) results.push(node);
-+      }
-+      return results;
-+    },
-+
-+    pseudo: function(nodes, name, value, root, combinator) {
-+      if (nodes && combinator) nodes = this[combinator](nodes);
-+      if (!nodes) nodes = root.getElementsByTagName("*");
-+      return Selector.pseudos[name](nodes, value, root);
-+    }
-+  },
-+
-+  pseudos: {
-+    'first-child': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        if (Selector.handlers.previousElementSibling(node)) continue;
-+          results.push(node);
-+      }
-+      return results;
-+    },
-+    'last-child': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        if (Selector.handlers.nextElementSibling(node)) continue;
-+          results.push(node);
-+      }
-+      return results;
-+    },
-+    'only-child': function(nodes, value, root) {
-+      var h = Selector.handlers;
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (!h.previousElementSibling(node) && !h.nextElementSibling(node))
-+          results.push(node);
-+      return results;
-+    },
-+    'nth-child':        function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root);
-+    },
-+    'nth-last-child':   function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root, true);
-+    },
-+    'nth-of-type':      function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root, false, true);
-+    },
-+    'nth-last-of-type': function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, formula, root, true, true);
-+    },
-+    'first-of-type':    function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, "1", root, false, true);
-+    },
-+    'last-of-type':     function(nodes, formula, root) {
-+      return Selector.pseudos.nth(nodes, "1", root, true, true);
-+    },
-+    'only-of-type':     function(nodes, formula, root) {
-+      var p = Selector.pseudos;
-+      return p['last-of-type'](p['first-of-type'](nodes, formula, root), formula, root);
-+    },
-+
-+    // handles the an+b logic
-+    getIndices: function(a, b, total) {
-+      if (a == 0) return b > 0 ? [b] : [];
-+      return $R(1, total).inject([], function(memo, i) {
-+        if (0 == (i - b) % a && (i - b) / a >= 0) memo.push(i);
-+        return memo;
-+      });
-+    },
-+
-+    // handles nth(-last)-child, nth(-last)-of-type, and (first|last)-of-type
-+    nth: function(nodes, formula, root, reverse, ofType) {
-+      if (nodes.length == 0) return [];
-+      if (formula == 'even') formula = '2n+0';
-+      if (formula == 'odd')  formula = '2n+1';
-+      var h = Selector.handlers, results = [], indexed = [], m;
-+      h.mark(nodes);
-+      for (var i = 0, node; node = nodes[i]; i++) {
-+        if (!node.parentNode._countedByPrototype) {
-+          h.index(node.parentNode, reverse, ofType);
-+          indexed.push(node.parentNode);
-+        }
-+      }
-+      if (formula.match(/^\d+$/)) { // just a number
-+        formula = Number(formula);
-+        for (var i = 0, node; node = nodes[i]; i++)
-+          if (node.nodeIndex == formula) results.push(node);
-+      } else if (m = formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
-+        if (m[1] == "-") m[1] = -1;
-+        var a = m[1] ? Number(m[1]) : 1;
-+        var b = m[2] ? Number(m[2]) : 0;
-+        var indices = Selector.pseudos.getIndices(a, b, nodes.length);
-+        for (var i = 0, node, l = indices.length; node = nodes[i]; i++) {
-+          for (var j = 0; j &lt; l; j++)
-+            if (node.nodeIndex == indices[j]) results.push(node);
-+        }
-+      }
-+      h.unmark(nodes);
-+      h.unmark(indexed);
-+      return results;
-+    },
-+
-+    'empty': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++) {
-+        // IE treats comments as element nodes
-+        if (node.tagName == '!' || (node.firstChild && !node.innerHTML.match(/^\s*$/))) continue;
-+        results.push(node);
-+      }
-+      return results;
-+    },
-+
-+    'not': function(nodes, selector, root) {
-+      var h = Selector.handlers, selectorType, m;
-+      var exclusions = new Selector(selector).findElements(root);
-+      h.mark(exclusions);
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (!node._countedByPrototype) results.push(node);
-+      h.unmark(exclusions);
-+      return results;
-+    },
-+
-+    'enabled': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (!node.disabled) results.push(node);
-+      return results;
-+    },
-+
-+    'disabled': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (node.disabled) results.push(node);
-+      return results;
-+    },
-+
-+    'checked': function(nodes, value, root) {
-+      for (var i = 0, results = [], node; node = nodes[i]; i++)
-+        if (node.checked) results.push(node);
-+      return results;
-+    }
-+  },
-+
-+  operators: {
-+    '=':  function(nv, v) { return nv == v; },
-+    '!=': function(nv, v) { return nv != v; },
-+    '^=': function(nv, v) { return nv.startsWith(v); },
-+    '$=': function(nv, v) { return nv.endsWith(v); },
-+    '*=': function(nv, v) { return nv.include(v); },
-+    '~=': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + ' '); },
-+    '|=': function(nv, v) { return ('-' + nv.toUpperCase() + '-').include('-' + v.toUpperCase() + '-'); }
-+  },
-+
-+  split: function(expression) {
-+    var expressions = [];
-+    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, function(m) {
-+      expressions.push(m[1].strip());
-+    });
-+    return expressions;
-+  },
-+
-+  matchElements: function(elements, expression) {
-+    var matches = $$(expression), h = Selector.handlers;
-+    h.mark(matches);
-+    for (var i = 0, results = [], element; element = elements[i]; i++)
-+      if (element._countedByPrototype) results.push(element);
-+    h.unmark(matches);
-+    return results;
-+  },
-+
-+  findElement: function(elements, expression, index) {
-+    if (Object.isNumber(expression)) {
-+      index = expression; expression = false;
-+    }
-+    return Selector.matchElements(elements, expression || '*')[index || 0];
-+  },
-+
-+  findChildElements: function(element, expressions) {
-+    expressions = Selector.split(expressions.join(','));
-+    var results = [], h = Selector.handlers;
-+    for (var i = 0, l = expressions.length, selector; i &lt; l; i++) {
-+      selector = new Selector(expressions[i].strip());
-+      h.concat(results, selector.findElements(element));
-+    }
-+    return (l > 1) ? h.unique(results) : results;
-+  }
-+});
-+
-+if (Prototype.Browser.IE) {
-+  Object.extend(Selector.handlers, {
-+    // IE returns comment nodes on getElementsByTagName("*").
-+    // Filter them out.
-+    concat: function(a, b) {
-+      for (var i = 0, node; node = b[i]; i++)
-+        if (node.tagName !== "!") a.push(node);
-+      return a;
-+    },
-+
-+    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.
-+    unmark: function(nodes) {
-+      for (var i = 0, node; node = nodes[i]; i++)
-+        node.removeAttribute('_countedByPrototype');
-+      return nodes;
-+    }
-+  });
-+}
-+
-+function $$() {
-+  return Selector.findChildElements(document, $A(arguments));
-+}
-+var Form = {
-+  reset: function(form) {
-+    $(form).reset();
-+    return form;
-+  },
-+
-+  serializeElements: function(elements, options) {
-+    if (typeof options != 'object') options = { hash: !!options };
-+    else if (Object.isUndefined(options.hash)) options.hash = true;
-+    var key, value, submitted = false, submit = options.submit;
-+
-+    var data = elements.inject({ }, function(result, element) {
-+      if (!element.disabled && element.name) {
-+        key = element.name; value = $(element).getValue();
-+        if (value != null && (element.type != 'submit' || (!submitted &&
-+            submit !== false && (!submit || key == submit) && (submitted = true)))) {
-+          if (key in result) {
-+            // a key is already present; construct an array of values
-+            if (!Object.isArray(result[key])) result[key] = [result[key]];
-+            result[key].push(value);
-+          }
-+          else result[key] = value;
-+        }
-+      }
-+      return result;
-+    });
-+
-+    return options.hash ? data : Object.toQueryString(data);
-+  }
-+};
-+
-+Form.Methods = {
-+  serialize: function(form, options) {
-+    return Form.serializeElements(Form.getElements(form), options);
-+  },
-+
-+  getElements: function(form) {
-+    return $A($(form).getElementsByTagName('*')).inject([],
-+      function(elements, child) {
-+        if (Form.Element.Serializers[child.tagName.toLowerCase()])
-+          elements.push(Element.extend(child));
-+        return elements;
-+      }
-+    );
-+  },
-+
-+  getInputs: function(form, typeName, name) {
-+    form = $(form);
-+    var inputs = form.getElementsByTagName('input');
-+
-+    if (!typeName && !name) return $A(inputs).map(Element.extend);
-+
-+    for (var i = 0, matchingInputs = [], length = inputs.length; i &lt; length; i++) {
-+      var input = inputs[i];
-+      if ((typeName && input.type != typeName) || (name && input.name != name))
-+        continue;
-+      matchingInputs.push(Element.extend(input));
-+    }
-+
-+    return matchingInputs;
-+  },
-+
-+  disable: function(form) {
-+    form = $(form);
-+    Form.getElements(form).invoke('disable');
-+    return form;
-+  },
-+
-+  enable: function(form) {
-+    form = $(form);
-+    Form.getElements(form).invoke('enable');
-+    return form;
-+  },
-+
-+  findFirstElement: function(form) {
-+    var elements = $(form).getElements().findAll(function(element) {
-+      return 'hidden' != element.type && !element.disabled;
-+    });
-+    var firstByIndex = elements.findAll(function(element) {
-+      return element.hasAttribute('tabIndex') && element.tabIndex >= 0;
-+    }).sortBy(function(element) { return element.tabIndex }).first();
-+
-+    return firstByIndex ? firstByIndex : elements.find(function(element) {
-+      return ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());
-+    });
-+  },
-+
-+  focusFirstElement: function(form) {
-+    form = $(form);
-+    form.findFirstElement().activate();
-+    return form;
-+  },
-+
-+  request: function(form, options) {
-+    form = $(form), options = Object.clone(options || { });
-+
-+    var params = options.parameters, action = form.readAttribute('action') || '';
-+    if (action.blank()) action = window.location.href;
-+    options.parameters = form.serialize(true);
-+
-+    if (params) {
-+      if (Object.isString(params)) params = params.toQueryParams();
-+      Object.extend(options.parameters, params);
-+    }
-+
-+    if (form.hasAttribute('method') && !options.method)
-+      options.method = form.method;
-+
-+    return new Ajax.Request(action, options);
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Form.Element = {
-+  focus: function(element) {
-+    $(element).focus();
-+    return element;
-+  },
-+
-+  select: function(element) {
-+    $(element).select();
-+    return element;
-+  }
-+};
-+
-+Form.Element.Methods = {
-+  serialize: function(element) {
-+    element = $(element);
-+    if (!element.disabled && element.name) {
-+      var value = element.getValue();
-+      if (value != undefined) {
-+        var pair = { };
-+        pair[element.name] = value;
-+        return Object.toQueryString(pair);
-+      }
-+    }
-+    return '';
-+  },
-+
-+  getValue: function(element) {
-+    element = $(element);
-+    var method = element.tagName.toLowerCase();
-+    return Form.Element.Serializers[method](element);
-+  },
-+
-+  setValue: function(element, value) {
-+    element = $(element);
-+    var method = element.tagName.toLowerCase();
-+    Form.Element.Serializers[method](element, value);
-+    return element;
-+  },
-+
-+  clear: function(element) {
-+    $(element).value = '';
-+    return element;
-+  },
-+
-+  present: function(element) {
-+    return $(element).value != '';
-+  },
-+
-+  activate: function(element) {
-+    element = $(element);
-+    try {
-+      element.focus();
-+      if (element.select && (element.tagName.toLowerCase() != 'input' ||
-+          !['button', 'reset', 'submit'].include(element.type)))
-+        element.select();
-+    } catch (e) { }
-+    return element;
-+  },
-+
-+  disable: function(element) {
-+    element = $(element);
-+    element.blur();
-+    element.disabled = true;
-+    return element;
-+  },
-+
-+  enable: function(element) {
-+    element = $(element);
-+    element.disabled = false;
-+    return element;
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+var Field = Form.Element;
-+var $F = Form.Element.Methods.getValue;
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Form.Element.Serializers = {
-+  input: function(element, value) {
-+    switch (element.type.toLowerCase()) {
-+      case 'checkbox':
-+      case 'radio':
-+        return Form.Element.Serializers.inputSelector(element, value);
-+      default:
-+        return Form.Element.Serializers.textarea(element, value);
-+    }
-+  },
-+
-+  inputSelector: function(element, value) {
-+    if (Object.isUndefined(value)) return element.checked ? element.value : null;
-+    else element.checked = !!value;
-+  },
-+
-+  textarea: function(element, value) {
-+    if (Object.isUndefined(value)) return element.value;
-+    else element.value = value;
-+  },
-+
-+  select: function(element, index) {
-+    if (Object.isUndefined(index))
-+      return this[element.type == 'select-one' ?
-+        'selectOne' : 'selectMany'](element);
-+    else {
-+      var opt, value, single = !Object.isArray(index);
-+      for (var i = 0, length = element.length; i &lt; length; i++) {
-+        opt = element.options[i];
-+        value = this.optionValue(opt);
-+        if (single) {
-+          if (value == index) {
-+            opt.selected = true;
-+            return;
-+          }
-+        }
-+        else opt.selected = index.include(value);
-+      }
-+    }
-+  },
-+
-+  selectOne: function(element) {
-+    var index = element.selectedIndex;
-+    return index >= 0 ? this.optionValue(element.options[index]) : null;
-+  },
-+
-+  selectMany: function(element) {
-+    var values, length = element.length;
-+    if (!length) return null;
-+
-+    for (var i = 0, values = []; i &lt; length; i++) {
-+      var opt = element.options[i];
-+      if (opt.selected) values.push(this.optionValue(opt));
-+    }
-+    return values;
-+  },
-+
-+  optionValue: function(opt) {
-+    // extend element because hasAttribute may not be native
-+    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Abstract.TimedObserver = Class.create(PeriodicalExecuter, {
-+  initialize: function($super, element, frequency, callback) {
-+    $super(callback, frequency);
-+    this.element   = $(element);
-+    this.lastValue = this.getValue();
-+  },
-+
-+  execute: function() {
-+    var value = this.getValue();
-+    if (Object.isString(this.lastValue) && Object.isString(value) ?
-+        this.lastValue != value : String(this.lastValue) != String(value)) {
-+      this.callback(this.element, value);
-+      this.lastValue = value;
-+    }
-+  }
-+});
-+
-+Form.Element.Observer = Class.create(Abstract.TimedObserver, {
-+  getValue: function() {
-+    return Form.Element.getValue(this.element);
-+  }
-+});
-+
-+Form.Observer = Class.create(Abstract.TimedObserver, {
-+  getValue: function() {
-+    return Form.serialize(this.element);
-+  }
-+});
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Abstract.EventObserver = Class.create({
-+  initialize: function(element, callback) {
-+    this.element  = $(element);
-+    this.callback = callback;
-+
-+    this.lastValue = this.getValue();
-+    if (this.element.tagName.toLowerCase() == 'form')
-+      this.registerFormCallbacks();
-+    else
-+      this.registerCallback(this.element);
-+  },
-+
-+  onElementEvent: function() {
-+    var value = this.getValue();
-+    if (this.lastValue != value) {
-+      this.callback(this.element, value);
-+      this.lastValue = value;
-+    }
-+  },
-+
-+  registerFormCallbacks: function() {
-+    Form.getElements(this.element).each(this.registerCallback, this);
-+  },
-+
-+  registerCallback: function(element) {
-+    if (element.type) {
-+      switch (element.type.toLowerCase()) {
-+        case 'checkbox':
-+        case 'radio':
-+          Event.observe(element, 'click', this.onElementEvent.bind(this));
-+          break;
-+        default:
-+          Event.observe(element, 'change', this.onElementEvent.bind(this));
-+          break;
-+      }
-+    }
-+  }
-+});
-+
-+Form.Element.EventObserver = Class.create(Abstract.EventObserver, {
-+  getValue: function() {
-+    return Form.Element.getValue(this.element);
-+  }
-+});
-+
-+Form.EventObserver = Class.create(Abstract.EventObserver, {
-+  getValue: function() {
-+    return Form.serialize(this.element);
-+  }
-+});
-+if (!window.Event) var Event = { };
-+
-+Object.extend(Event, {
-+  KEY_BACKSPACE: 8,
-+  KEY_TAB:       9,
-+  KEY_RETURN:   13,
-+  KEY_ESC:      27,
-+  KEY_LEFT:     37,
-+  KEY_UP:       38,
-+  KEY_RIGHT:    39,
-+  KEY_DOWN:     40,
-+  KEY_DELETE:   46,
-+  KEY_HOME:     36,
-+  KEY_END:      35,
-+  KEY_PAGEUP:   33,
-+  KEY_PAGEDOWN: 34,
-+  KEY_INSERT:   45,
-+
-+  cache: { },
-+
-+  relatedTarget: function(event) {
-+    var element;
-+    switch(event.type) {
-+      case 'mouseover': element = event.fromElement; break;
-+      case 'mouseout':  element = event.toElement;   break;
-+      default: return null;
-+    }
-+    return Element.extend(element);
-+  }
-+});
-+
-+Event.Methods = (function() {
-+  var isButton;
-+
-+  if (Prototype.Browser.IE) {
-+    var buttonMap = { 0: 1, 1: 4, 2: 2 };
-+    isButton = function(event, code) {
-+      return event.button == buttonMap[code];
-+    };
-+
-+  } else if (Prototype.Browser.WebKit) {
-+    isButton = function(event, code) {
-+      switch (code) {
-+        case 0: return event.which == 1 && !event.metaKey;
-+        case 1: return event.which == 1 && event.metaKey;
-+        default: return false;
-+      }
-+    };
-+
-+  } else {
-+    isButton = function(event, code) {
-+      return event.which ? (event.which === code + 1) : (event.button === code);
-+    };
-+  }
-+
-+  return {
-+    isLeftClick:   function(event) { return isButton(event, 0) },
-+    isMiddleClick: function(event) { return isButton(event, 1) },
-+    isRightClick:  function(event) { return isButton(event, 2) },
-+
-+    element: function(event) {
-+      var node = Event.extend(event).target;
-+      return Element.extend(node.nodeType == Node.TEXT_NODE ? node.parentNode : node);
-+    },
-+
-+    findElement: function(event, expression) {
-+      var element = Event.element(event);
-+      if (!expression) return element;
-+      var elements = [element].concat(element.ancestors());
-+      return Selector.findElement(elements, expression, 0);
-+    },
-+
-+    pointer: function(event) {
-+      return {
-+        x: event.pageX || (event.clientX +
-+          (document.documentElement.scrollLeft || document.body.scrollLeft)),
-+        y: event.pageY || (event.clientY +
-+          (document.documentElement.scrollTop || document.body.scrollTop))
-+      };
-+    },
-+
-+    pointerX: function(event) { return Event.pointer(event).x },
-+    pointerY: function(event) { return Event.pointer(event).y },
-+
-+    stop: function(event) {
-+      Event.extend(event);
-+      event.preventDefault();
-+      event.stopPropagation();
-+      event.stopped = true;
-+    }
-+  };
-+})();
-+
-+Event.extend = (function() {
-+  var methods = Object.keys(Event.Methods).inject({ }, function(m, name) {
-+    m[name] = Event.Methods[name].methodize();
-+    return m;
-+  });
-+
-+  if (Prototype.Browser.IE) {
-+    Object.extend(methods, {
-+      stopPropagation: function() { this.cancelBubble = true },
-+      preventDefault:  function() { this.returnValue = false },
-+      inspect: function() { return "[object Event]" }
-+    });
-+
-+    return function(event) {
-+      if (!event) return false;
-+      if (event._extendedByPrototype) return event;
-+
-+      event._extendedByPrototype = Prototype.emptyFunction;
-+      var pointer = Event.pointer(event);
-+      Object.extend(event, {
-+        target: event.srcElement,
-+        relatedTarget: Event.relatedTarget(event),
-+        pageX:  pointer.x,
-+        pageY:  pointer.y
-+      });
-+      return Object.extend(event, methods);
-+    };
-+
-+  } else {
-+    Event.prototype = Event.prototype || document.createEvent("HTMLEvents").__proto__;
-+    Object.extend(Event.prototype, methods);
-+    return Prototype.K;
-+  }
-+})();
-+
-+Object.extend(Event, (function() {
-+  var cache = Event.cache;
-+
-+  function getEventID(element) {
-+    if (element._prototypeEventID) return element._prototypeEventID[0];
-+    arguments.callee.id = arguments.callee.id || 1;
-+    return element._prototypeEventID = [++arguments.callee.id];
-+  }
-+
-+  function getDOMEventName(eventName) {
-+    if (eventName && eventName.include(':')) return "dataavailable";
-+    return eventName;
-+  }
-+
-+  function getCacheForID(id) {
-+    return cache[id] = cache[id] || { };
-+  }
-+
-+  function getWrappersForEventName(id, eventName) {
-+    var c = getCacheForID(id);
-+    return c[eventName] = c[eventName] || [];
-+  }
-+
-+  function createWrapper(element, eventName, handler) {
-+    var id = getEventID(element);
-+    var c = getWrappersForEventName(id, eventName);
-+    if (c.pluck("handler").include(handler)) return false;
-+
-+    var wrapper = function(event) {
-+      if (!Event || !Event.extend ||
-+        (event.eventName && event.eventName != eventName))
-+          return false;
-+
-+      Event.extend(event);
-+      handler.call(element, event);
-+    };
-+
-+    wrapper.handler = handler;
-+    c.push(wrapper);
-+    return wrapper;
-+  }
-+
-+  function findWrapper(id, eventName, handler) {
-+    var c = getWrappersForEventName(id, eventName);
-+    return c.find(function(wrapper) { return wrapper.handler == handler });
-+  }
-+
-+  function destroyWrapper(id, eventName, handler) {
-+    var c = getCacheForID(id);
-+    if (!c[eventName]) return false;
-+    c[eventName] = c[eventName].without(findWrapper(id, eventName, handler));
-+  }
-+
-+  function destroyCache() {
-+    for (var id in cache)
-+      for (var eventName in cache[id])
-+        cache[id][eventName] = null;
-+  }
-+
-+  if (window.attachEvent) {
-+    window.attachEvent("onunload", destroyCache);
-+  }
-+
-+  return {
-+    observe: function(element, eventName, handler) {
-+      element = $(element);
-+      var name = getDOMEventName(eventName);
-+
-+      var wrapper = createWrapper(element, eventName, handler);
-+      if (!wrapper) return element;
-+
-+      if (element.addEventListener) {
-+        element.addEventListener(name, wrapper, false);
-+      } else {
-+        element.attachEvent("on" + name, wrapper);
-+      }
-+
-+      return element;
-+    },
-+
-+    stopObserving: function(element, eventName, handler) {
-+      element = $(element);
-+      var id = getEventID(element), name = getDOMEventName(eventName);
-+
-+      if (!handler && eventName) {
-+        getWrappersForEventName(id, eventName).each(function(wrapper) {
-+          element.stopObserving(eventName, wrapper.handler);
-+        });
-+        return element;
-+
-+      } else if (!eventName) {
-+        Object.keys(getCacheForID(id)).each(function(eventName) {
-+          element.stopObserving(eventName);
-+        });
-+        return element;
-+      }
-+
-+      var wrapper = findWrapper(id, eventName, handler);
-+      if (!wrapper) return element;
-+
-+      if (element.removeEventListener) {
-+        element.removeEventListener(name, wrapper, false);
-+      } else {
-+        element.detachEvent("on" + name, wrapper);
-+      }
-+
-+      destroyWrapper(id, eventName, handler);
-+
-+      return element;
-+    },
-+
-+    fire: function(element, eventName, memo) {
-+      element = $(element);
-+      if (element == document && document.createEvent && !element.dispatchEvent)
-+        element = document.documentElement;
-+
-+      var event;
-+      if (document.createEvent) {
-+        event = document.createEvent("HTMLEvents");
-+        event.initEvent("dataavailable", true, true);
-+      } else {
-+        event = document.createEventObject();
-+        event.eventType = "ondataavailable";
-+      }
-+
-+      event.eventName = eventName;
-+      event.memo = memo || { };
-+
-+      if (document.createEvent) {
-+        element.dispatchEvent(event);
-+      } else {
-+        element.fireEvent(event.eventType, event);
-+      }
-+
-+      return Event.extend(event);
-+    }
-+  };
-+})());
-+
-+Object.extend(Event, Event.Methods);
-+
-+Element.addMethods({
-+  fire:          Event.fire,
-+  observe:       Event.observe,
-+  stopObserving: Event.stopObserving
-+});
-+
-+Object.extend(document, {
-+  fire:          Element.Methods.fire.methodize(),
-+  observe:       Element.Methods.observe.methodize(),
-+  stopObserving: Element.Methods.stopObserving.methodize(),
-+  loaded:        false
-+});
-+
-+(function() {
-+  /* Support for the DOMContentLoaded event is based on work by Dan Webb,
-+     Matthias Miller, Dean Edwards and John Resig. */
-+
-+  var timer;
-+
-+  function fireContentLoadedEvent() {
-+    if (document.loaded) return;
-+    if (timer) window.clearInterval(timer);
-+    document.fire("dom:loaded");
-+    document.loaded = true;
-+  }
-+
-+  if (document.addEventListener) {
-+    if (Prototype.Browser.WebKit) {
-+      timer = window.setInterval(function() {
-+        if (/loaded|complete/.test(document.readyState))
-+          fireContentLoadedEvent();
-+      }, 0);
-+
-+      Event.observe(window, "load", fireContentLoadedEvent);
-+
-+    } else {
-+      document.addEventListener("DOMContentLoaded",
-+        fireContentLoadedEvent, false);
-+    }
-+
-+  } else {
-+    document.write("&lt;script id=__onDOMContentLoaded defer src=//:>&lt;\/script>");
-+    $("__onDOMContentLoaded").onreadystatechange = function() {
-+      if (this.readyState == "complete") {
-+        this.onreadystatechange = null;
-+        fireContentLoadedEvent();
-+      }
-+    };
-+  }
-+})();
-+/*------------------------------- DEPRECATED -------------------------------*/
-+
-+Hash.toQueryString = Object.toQueryString;
-+
-+var Toggle = { display: Element.toggle };
-+
-+Element.Methods.childOf = Element.Methods.descendantOf;
-+
-+var Insertion = {
-+  Before: function(element, content) {
-+    return Element.insert(element, {before:content});
-+  },
-+
-+  Top: function(element, content) {
-+    return Element.insert(element, {top:content});
-+  },
-+
-+  Bottom: function(element, content) {
-+    return Element.insert(element, {bottom:content});
-+  },
-+
-+  After: function(element, content) {
-+    return Element.insert(element, {after:content});
-+  }
-+};
-+
-+var $continue = new Error('"throw $continue" is deprecated, use "return" instead');
-+
-+// This should be moved to script.aculo.us; notice the deprecated methods
-+// further below, that map to the newer Element methods.
-+var Position = {
-+  // set to true if needed, warning: firefox performance problems
-+  // NOT neeeded for page scrolling, only if draggable contained in
-+  // scrollable elements
-+  includeScrollOffsets: false,
-+
-+  // must be called before calling withinIncludingScrolloffset, every time the
-+  // page is scrolled
-+  prepare: function() {
-+    this.deltaX =  window.pageXOffset
-+                || document.documentElement.scrollLeft
-+                || document.body.scrollLeft
-+                || 0;
-+    this.deltaY =  window.pageYOffset
-+                || document.documentElement.scrollTop
-+                || document.body.scrollTop
-+                || 0;
-+  },
-+
-+  // caches x/y coordinate pair to use with overlap
-+  within: function(element, x, y) {
-+    if (this.includeScrollOffsets)
-+      return this.withinIncludingScrolloffsets(element, x, y);
-+    this.xcomp = x;
-+    this.ycomp = y;
-+    this.offset = Element.cumulativeOffset(element);
-+
-+    return (y >= this.offset[1] &&
-+            y &lt;  this.offset[1] + element.offsetHeight &&
-+            x >= this.offset[0] &&
-+            x &lt;  this.offset[0] + element.offsetWidth);
-+  },
-+
-+  withinIncludingScrolloffsets: function(element, x, y) {
-+    var offsetcache = Element.cumulativeScrollOffset(element);
-+
-+    this.xcomp = x + offsetcache[0] - this.deltaX;
-+    this.ycomp = y + offsetcache[1] - this.deltaY;
-+    this.offset = Element.cumulativeOffset(element);
-+
-+    return (this.ycomp >= this.offset[1] &&
-+            this.ycomp &lt;  this.offset[1] + element.offsetHeight &&
-+            this.xcomp >= this.offset[0] &&
-+            this.xcomp &lt;  this.offset[0] + element.offsetWidth);
-+  },
-+
-+  // within must be called directly before
-+  overlap: function(mode, element) {
-+    if (!mode) return 0;
-+    if (mode == 'vertical')
-+      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
-+        element.offsetHeight;
-+    if (mode == 'horizontal')
-+      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
-+        element.offsetWidth;
-+  },
-+
-+  // Deprecation layer -- use newer Element methods now (1.5.2).
-+
-+  cumulativeOffset: Element.Methods.cumulativeOffset,
-+
-+  positionedOffset: Element.Methods.positionedOffset,
-+
-+  absolutize: function(element) {
-+    Position.prepare();
-+    return Element.absolutize(element);
-+  },
-+
-+  relativize: function(element) {
-+    Position.prepare();
-+    return Element.relativize(element);
-+  },
-+
-+  realOffset: Element.Methods.cumulativeScrollOffset,
-+
-+  offsetParent: Element.Methods.getOffsetParent,
-+
-+  page: Element.Methods.viewportOffset,
-+
-+  clone: function(source, target, options) {
-+    options = options || { };
-+    return Element.clonePosition(target, source, options);
-+  }
-+};
-+
-+/*--------------------------------------------------------------------------*/
-+
-+if (!document.getElementsByClassName) document.getElementsByClassName = function(instanceMethods){
-+  function iter(name) {
-+    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + name + " ')]";
-+  }
-+
-+  instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ?
-+  function(element, className) {
-+    className = className.toString().strip();
-+    var cond = /\s/.test(className) ? $w(className).map(iter).join('') : iter(className);
-+    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
-+  } : function(element, className) {
-+    className = className.toString().strip();
-+    var elements = [], classNames = (/\s/.test(className) ? $w(className) : null);
-+    if (!classNames && !className) return elements;
-+
-+    var nodes = $(element).getElementsByTagName('*');
-+    className = ' ' + className + ' ';
-+
-+    for (var i = 0, child, cn; child = nodes[i]; i++) {
-+      if (child.className && (cn = ' ' + child.className + ' ') && (cn.include(className) ||
-+          (classNames && classNames.all(function(name) {
-+            return !name.toString().blank() && cn.include(' ' + name + ' ');
-+          }))))
-+        elements.push(Element.extend(child));
-+    }
-+    return elements;
-+  };
-+
-+  return function(className, parentElement) {
-+    return $(parentElement || document.body).getElementsByClassName(className);
-+  };
-+}(Element.Methods);
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Element.ClassNames = Class.create();
-+Element.ClassNames.prototype = {
-+  initialize: function(element) {
-+    this.element = $(element);
-+  },
-+
-+  _each: function(iterator) {
-+    this.element.className.split(/\s+/).select(function(name) {
-+      return name.length > 0;
-+    })._each(iterator);
-+  },
-+
-+  set: function(className) {
-+    this.element.className = className;
-+  },
-+
-+  add: function(classNameToAdd) {
-+    if (this.include(classNameToAdd)) return;
-+    this.set($A(this).concat(classNameToAdd).join(' '));
-+  },
-+
-+  remove: function(classNameToRemove) {
-+    if (!this.include(classNameToRemove)) return;
-+    this.set($A(this).without(classNameToRemove).join(' '));
-+  },
-+
-+  toString: function() {
-+    return $A(this).join(' ');
-+  }
-+};
-+
-+Object.extend(Element.ClassNames.prototype, Enumerable);
-+
-+/*--------------------------------------------------------------------------*/
-+
-+Element.addMethods();
-\ No newline at end of file
-diff --git a/diff/content/diff.css b/diff/content/diff.css
-new file mode 100755
-index 0000000..670344d
---- /dev/null
-+++ b/diff/content/diff.css
-@@ -0,0 +1,105 @@
-+.difftextarea {
-+	display:none;
-+	width:1px;
-+	height:1px;
-+}
-+
-+code .delline, code .oldfile {
-+	background-color:#fef3f3;
-+  color:#B00;
-+	display:block;
-+}
-+
-+code .addline, code .newfile {
-+	background-color:#eafee9;
-+  color: #080;
-+}
-+
-+table,table tr,table tr td {
-+	margin:0;
-+	padding:0;
-+}
-+
-+body {
-+	margin:0;
-+	width:100%;
-+}
-+
-+.fileHeader {
-+	height:17px;
-+	line-height:18px;
-+	color:white;
-+	display:block;
-+	margin-top:15px;
-+	border-top:solid 1px #ddd;
-+	padding-left:8px;
-+	background:transparent url("filebg2.png") repeat-x;
-+}
-+
-+.firstFileHeader {
-+	height:17px;
-+	line-height:18px;
-+	color:white;
-+	display:block;
-+	padding-left:8px;
-+	background:transparent url("filebg2.png") repeat-x;
-+}
-+
-+code .firsthunkheader {
-+  background-color:#f7f7f7;
-+  color: #111;
-+	height:17px;
-+	line-height:18px;
-+	padding-left:8px;
-+	font-size:9px;
-+	margin-bottom:8px;
-+	border-top:solid 1px #ddd;
-+	border-bottom:solid 1px #ddd;
-+}
-+
-+code .hunkheader {
-+  background-color:#f7f7f7;
-+  color: #111;
-+	height:17px;
-+	line-height:18px;
-+	padding-left:8px;
-+	font-size:9px;
-+	margin-bottom:8px;
-+	margin-top:8px;
-+	border-top:solid 1px #ddd;
-+	border-bottom:solid 1px #ddd;
-+}
-+
-+.line {
-+	padding-left:5px;
-+}
-+
-+pre {
-+  width: 100%;
-+	font-family:Monaco;
-+  font-size:11px;
-+	line-height:16px;
-+}
-+
-+pre code {
-+  width: 100%;
-+}
-+
-+.whitespace {
-+	background-color:rgba(255,0,0,0.5);
-+}
-+
-+table.diff {
-+	border-spacing: 0;
-+}
-+
-+.lineno {
-+	padding-right: 2px;
-+	background-color: #ECECEC;
-+	color: #A9A9A9;
-+	border-right: 1px solid #DDDDDD;
-+	text-align: right;
-+}
-+/**
-+modified on nov 16 2009.
-+**/
-diff --git a/diff/content/filebg.png b/diff/content/filebg.png
-new file mode 100644
-index 0000000..3c9a394
-Binary files /dev/null and b/diff/content/filebg.png differ
-diff --git a/diff/content/filebg2.png b/diff/content/filebg2.png
-new file mode 100644
-index 0000000..d692464
-Binary files /dev/null and b/diff/content/filebg2.png differ
-diff --git a/diff/content/gity.js b/diff/content/gity.js
-new file mode 100755
-index 0000000..e75a185
---- /dev/null
-+++ b/diff/content/gity.js
-@@ -0,0 +1,104 @@
-+function startDiff()
-+{
-+	var diff=$("#diff")
-+	var safeDiff=diff.val().replace(/&lt;/g, "&lt;");
-+	$("#updateddiff").html(safeDiff);
-+	highlightDiffs();
-+}
-+
-+function highlightDiffs()
-+{
-+	var diffs=$("#updateddiff");
-+	var diffn=0;
-+	for(diffn;diffn&lt;diffs.length;diffn++)
-+	{
-+		var diff=diffs[diffn];
-+		var content=diff.innerHTML.replace(/\t/g, "    ");
-+		var line1 = "";
-+		var line2 = "";
-+		var diffContent = "";
-+		var lines = content.split('\n');
-+		var hunk_start_line_1 = -1;
-+		var hunk_start_line_2 = -1;
-+		var firstHunkHeader = true;
-+		var firstFileLine = true;
-+		var header = false;
-+		var lineno=0;
-+		for(lineno;lineno&lt;lines.length;lineno++)
-+		{
-+			var l=lines[lineno];
-+			var firstChar=l.charAt(0);
-+			
-+			if(firstChar != "d" && firstChar != "+" && firstChar != "-" && firstChar != "@" && firstChar != " ") continue;
-+			
-+			/*if(l.indexOf("index") == 0)
-+			{
-+				nl = lines[lineno+1]
-+				if(nl.indexOf("Binary") == 0)
-+				{
-+					diffContent+='&lt;div class="line">Binary file has changes&lt;/div>';
-+					lineno++;
-+				}
-+				continue;
-+			}*/
-+			
-+			if(header)
-+			{
-+				if(firstChar=="+"||firstChar=="-") continue;
-+			}
-+			if(firstChar=="d")
-+			{
-+				header=true;
-+				line1+='\n';
-+				line2+='\n';
-+				pieces=l.split(" ")
-+				file=pieces[pieces.length-1];
-+				file = file.replace("b/","");
-+				firstHunkHeader=true;
-+				if(firstFileLine) diffContent+='&lt;div class="firstFileHeader">'+file+'&lt;/div>';
-+				else diffContent+='&lt;div class="fileHeader">'+file+'&lt;/div>';
-+				firstFileLine=false;
-+				continue;
-+			}
-+			if(firstChar=="+")
-+			{
-+				//highlight trailing whitespace
-+				if(m=l.match(/\s+$/)) l=l.replace(/\s+$/,"&lt;span class='whitespace line'>"+m+"&lt;/span>");
-+				line1+="\n";
-+				line2+=++hunk_start_line_2+"\n";
-+				diffContent+="&lt;div class='addline line'>"+l+"&lt;/div>";
-+			}
-+			if (firstChar=="-")
-+			{
-+				line1+=++hunk_start_line_1+"\n";
-+				line2+="\n";
-+				diffContent+="&lt;div class='delline line'>"+l+"&lt;/div>";
-+			}
-+			if(firstChar == "@")
-+			{
-+				header=false;
-+				if(m=l.match(/@@ \-([0-9]+),\d+ \+(\d+),\d+ @@/))
-+				{
-+					hunk_start_line_1=parseInt(m[1])-1;
-+					hunk_start_line_2=parseInt(m[2])-1;
-+				}
-+				line1+="\n";
-+				line2+="\n";
-+				if(firstHunkHeader) diffContent+="&lt;div class='firsthunkheader'>"+l+"&lt;/div>";
-+				else diffContent+="&lt;div class='hunkheader'>"+l+"&lt;/div>";
-+				firstHunkHeader=false;
-+			}
-+			if(firstChar == " ")
-+			{
-+				line1 += ++hunk_start_line_1 + "\n";
-+				line2 += ++hunk_start_line_2 + "\n";
-+				diffContent += "&lt;span class='line'>" + l + "&lt;/span>\n";
-+			}
-+		}
-+		diff.innerHTML="&lt;table class='diff' width='100%'>&lt;td width='100%' class='test'>&lt;pre class='test'>" + diffContent + "&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>";
-+	}
-+}
-+
-+/**
-+modified on nov 16 2009.
-+**/
-\ No newline at end of file
-diff --git a/diff/content/jquery.js b/diff/content/jquery.js
-new file mode 100644
-index 0000000..b1ae21d
---- /dev/null
-+++ b/diff/content/jquery.js
-@@ -0,0 +1,19 @@
-+/*
-+ * jQuery JavaScript Library v1.3.2
-+ * http://jquery.com/
-+ *
-+ * Copyright (c) 2009 John Resig
-+ * Dual licensed under the MIT and GPL licenses.
-+ * http://docs.jquery.com/License
-+ *
-+ * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)
-+ * Revision: 6246
-+ */
-+(function(){var l=this,g,y=l.jQuery,p=l.$,o=l.jQuery=l.$=function(E,F){return new o.fn.init(E,F)},D=/^[^&lt;]*(&lt;(.|\s)+>)[^>]*$|^#([\w-]+)$/,f=/^.[^:#\[\.,]*$/;o.fn=o.prototype={init:function(E,H){E=E||document;if(E.nodeType){this[0]=E;this.length=1;this.context=E;return this}if(typeof E==="string"){var G=D.exec(E);if(G&&(G[1]||!H)){if(G[1]){E=o.clean([G[1]],H)}else{var I=document.getElementById(G[3]);if(I&&I.id!=G[3]){return o().find(E)}var F=o(I||[]);F.context=document;F.selector=E;return F}}else{return o(H).find(E)}}else{if(o.isFunction(E)){return o(document).ready(E)}}if(E.selector&&E.context){this.selector=E.selector;this.context=E.context}return this.setArray(o.isArray(E)?E:o.makeArray(E))},selector:"",jquery:"1.3.2",size:function(){return this.length},get:function(E){return E===g?Array.prototype.slice.call(this):this[E]},pushStack:function(F,H,E){var G=o(F);G.prevObject=this;G.context=this.context;if(H==="find"){G.selector=this.selector+(this.selector?" ":"")+E}else{if(H){G.selector=this.selector+"."+H+"("+E+")"}}return G},setArray:function(E){this.length=0;Array.prototype.push.apply(this,E);return this},each:function(F,E){return o.each(this,F,E)},index:function(E){return o.inArray(E&&E.jquery?E[0]:E,this)},attr:function(F,H,G){var E=F;if(typeof F==="string"){if(H===g){return this[0]&&o[G||"attr"](this[0],F)}else{E={};E[F]=H}}return this.each(function(I){for(F in E){o.attr(G?this.style:this,F,o.prop(this,E[F],G,I,F))}})},css:function(E,F){if((E=="width"||E=="height")&&parseFloat(F)&lt;0){F=g}return this.attr(E,F,"curCSS")},text:function(F){if(typeof F!=="object"&&F!=null){return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(F))}var E="";o.each(F||this,function(){o.each(this.childNodes,function(){if(this.nodeType!=8){E+=this.nodeType!=1?this.nodeValue:o.fn.text([this])}})});return E},wrapAll:function(E){if(this[0]){var F=o(E,this[0].ownerDocument).clone();if(this[0].parentNode){F.insertBefore(this[0])}F.map(function(){var G=this;while(G.firstChild){G=G.firstChild}return G}).append(this)}return this},wrapInner:function(E){return this.each(function(){o(this).contents().wrapAll(E)})},wrap:function(E){return this.each(function(){o(this).wrapAll(E)})},append:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.appendChild(E)}})},prepend:function(){return this.domManip(arguments,true,function(E){if(this.nodeType==1){this.insertBefore(E,this.firstChild)}})},before:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this)})},after:function(){return this.domManip(arguments,false,function(E){this.parentNode.insertBefore(E,this.nextSibling)})},end:function(){return this.prevObject||o([])},push:[].push,sort:[].sort,splice:[].splice,find:function(E){if(this.length===1){var F=this.pushStack([],"find",E);F.length=0;o.find(E,this[0],F);return F}else{return this.pushStack(o.unique(o.map(this,function(G){return o.find(E,G)})),"find",E)}},clone:function(G){var E=this.map(function(){if(!o.support.noCloneEvent&&!o.isXMLDoc(this)){var I=this.outerHTML;if(!I){var J=this.ownerDocument.createElement("div");J.appendChild(this.cloneNode(true));I=J.innerHTML}return o.clean([I.replace(/ jQuery\d+="(?:\d+|null)"/g,"").replace(/^\s*/,"")])[0]}else{return this.cloneNode(true)}});if(G===true){var H=this.find("*").andSelf(),F=0;E.find("*").andSelf().each(function(){if(this.nodeName!==H[F].nodeName){return}var I=o.data(H[F],"events");for(var K in I){for(var J in I[K]){o.event.add(this,K,I[K][J],I[K][J].data)}}F++})}return E},filter:function(E){return this.pushStack(o.isFunction(E)&&o.grep(this,function(G,F){return E.call(G,F)})||o.multiFilter(E,o.grep(this,function(F){return F.nodeType===1})),"filter",E)},closest:function(E){var G=o.expr.match.POS.test(E)?o(E):null,F=0;return this.map(function(){var H=this;while(H&&H.ownerDocument){if(G?G.index(H)>-1:o(H).is(E)){o.data(H,"closest",F);return H}H=H.parentNode;F++}})},not:function(E){if(typeof E==="string"){if(f.test(E)){return this.pushStack(o.multiFilter(E,this,true),"not",E)}else{E=o.multiFilter(E,this)}}var F=E.length&&E[E.length-1]!==g&&!E.nodeType;return this.filter(function(){return F?o.inArray(this,E)&lt;0:this!=E})},add:function(E){return this.pushStack(o.unique(o.merge(this.get(),typeof E==="string"?o(E):o.makeArray(E))))},is:function(E){return !!E&&o.multiFilter(E,this).length>0},hasClass:function(E){return !!E&&this.is("."+E)},val:function(K){if(K===g){var E=this[0];if(E){if(o.nodeName(E,"option")){return(E.attributes.value||{}).specified?E.value:E.text}if(o.nodeName(E,"select")){var I=E.selectedIndex,L=[],M=E.options,H=E.type=="select-one";if(I&lt;0){return null}for(var F=H?I:0,J=H?I+1:M.length;F&lt;J;F++){var G=M[F];if(G.selected){K=o(G).val();if(H){return K}L.push(K)}}return L}return(E.value||"").replace(/\r/g,"")}return g}if(typeof K==="number"){K+=""}return this.each(function(){if(this.nodeType!=1){return}if(o.isArray(K)&&/radio|checkbox/.test(this.type)){this.checked=(o.inArray(this.value,K)>=0||o.inArray(this.name,K)>=0)}else{if(o.nodeName(this,"select")){var N=o.makeArray(K);o("option",this).each(function(){this.selected=(o.inArray(this.value,N)>=0||o.inArray(this.text,N)>=0)});if(!N.length){this.selectedIndex=-1}}else{this.value=K}}})},html:function(E){return E===g?(this[0]?this[0].innerHTML.replace(/ jQuery\d+="(?:\d+|null)"/g,""):null):this.empty().append(E)},replaceWith:function(E){return this.after(E).remove()},eq:function(E){return this.slice(E,+E+1)},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments),"slice",Array.prototype.slice.call(arguments).join(","))},map:function(E){return this.pushStack(o.map(this,function(G,F){return E.call(G,F,G)}))},andSelf:function(){return this.add(this.prevObject)},domManip:function(J,M,L){if(this[0]){var I=(this[0].ownerDocument||this[0]).createDocumentFragment(),F=o.clean(J,(this[0].ownerDocument||this[0]),I),H=I.firstChild;if(H){for(var G=0,E=this.length;G&lt;E;G++){L.call(K(this[G],H),this.length>1||G>0?I.cloneNode(true):I)}}if(F){o.each(F,z)}}return this;function K(N,O){return M&&o.nodeName(N,"table")&&o.nodeName(O,"tr")?(N.getElementsByTagName("tbody")[0]||N.appendChild(N.ownerDocument.createElement("tbody"))):N}}};o.fn.init.prototype=o.fn;function z(E,F){if(F.src){o.ajax({url:F.src,async:false,dataType:"script"})}else{o.globalEval(F.text||F.textContent||F.innerHTML||"")}if(F.parentNode){F.parentNode.removeChild(F)}}function e(){return +new Date}o.extend=o.fn.extend=function(){var J=arguments[0]||{},H=1,I=arguments.length,E=false,G;if(typeof J==="boolean"){E=J;J=arguments[1]||{};H=2}if(typeof J!=="object"&&!o.isFunction(J)){J={}}if(I==H){J=this;--H}for(;H&lt;I;H++){if((G=arguments[H])!=null){for(var F in G){var K=J[F],L=G[F];if(J===L){continue}if(E&&L&&typeof L==="object"&&!L.nodeType){J[F]=o.extend(E,K||(L.length!=null?[]:{}),L)}else{if(L!==g){J[F]=L}}}}}return J};var b=/z-?index|font-?weight|opacity|zoom|line-?height/i,q=document.defaultView||{},s=Object.prototype.toString;o.extend({noConflict:function(E){l.$=p;if(E){l.jQuery=y}return o},isFunction:function(E){return s.call(E)==="[object Function]"},isArray:function(E){return s.call(E)==="[object Array]"},isXMLDoc:function(E){return E.nodeType===9&&E.documentElement.nodeName!=="HTML"||!!E.ownerDocument&&o.isXMLDoc(E.ownerDocument)},globalEval:function(G){if(G&&/\S/.test(G)){var F=document.getElementsByTagName("head")[0]||document.documentElement,E=document.createElement("script");E.type="text/javascript";if(o.support.scriptEval){E.appendChild(document.createTextNode(G))}else{E.text=G}F.insertBefore(E,F.firstChild);F.removeChild(E)}},nodeName:function(F,E){return F.nodeName&&F.nodeName.toUpperCase()==E.toUpperCase()},each:function(G,K,F){var E,H=0,I=G.length;if(F){if(I===g){for(E in G){if(K.apply(G[E],F)===false){break}}}else{for(;H&lt;I;){if(K.apply(G[H++],F)===false){break}}}}else{if(I===g){for(E in G){if(K.call(G[E],E,G[E])===false){break}}}else{for(var J=G[0];H&lt;I&&K.call(J,H,J)!==false;J=G[++H]){}}}return G},prop:function(H,I,G,F,E){if(o.isFunction(I)){I=I.call(H,F)}return typeof I==="number"&&G=="curCSS"&&!b.test(E)?I+"px":I},className:{add:function(E,F){o.each((F||"").split(/\s+/),function(G,H){if(E.nodeType==1&&!o.className.has(E.className,H)){E.className+=(E.className?" ":"")+H}})},remove:function(E,F){if(E.nodeType==1){E.className=F!==g?o.grep(E.className.split(/\s+/),function(G){return !o.className.has(F,G)}).join(" "):""}},has:function(F,E){return F&&o.inArray(E,(F.className||F).toString().split(/\s+/))>-1}},swap:function(H,G,I){var E={};for(var F in G){E[F]=H.style[F];H.style[F]=G[F]}I.call(H);for(var F in G){H.style[F]=E[F]}},css:function(H,F,J,E){if(F=="width"||F=="height"){var L,G={position:"absolute",visibility:"hidden",display:"block"},K=F=="width"?["Left","Right"]:["Top","Bottom"];function I(){L=F=="width"?H.offsetWidth:H.offsetHeight;if(E==="border"){return}o.each(K,function(){if(!E){L-=parseFloat(o.curCSS(H,"padding"+this,true))||0}if(E==="margin"){L+=parseFloat(o.curCSS(H,"margin"+this,true))||0}else{L-=parseFloat(o.curCSS(H,"border"+this+"Width",true))||0}})}if(H.offsetWidth!==0){I()}else{o.swap(H,G,I)}return Math.max(0,Math.round(L))}return o.curCSS(H,F,J)},curCSS:function(I,F,G){var L,E=I.style;if(F=="opacity"&&!o.support.opacity){L=o.attr(E,"opacity");return L==""?"1":L}if(F.match(/float/i)){F=w}if(!G&&E&&E[F]){L=E[F]}else{if(q.getComputedStyle){if(F.match(/float/i)){F="float"}F=F.replace(/([A-Z])/g,"-$1").toLowerCase();var M=q.getComputedStyle(I,null);if(M){L=M.getPropertyValue(F)}if(F=="opacity"&&L==""){L="1"}}else{if(I.currentStyle){var J=F.replace(/\-(\w)/g,function(N,O){return O.toUpperCase()});L=I.currentStyle[F]||I.currentStyle[J];if(!/^\d+(px)?$/i.test(L)&&/^\d/.test(L)){var H=E.left,K=I.runtimeStyle.left;I.runtimeStyle.left=I.currentStyle.left;E.left=L||0;L=E.pixelLeft+"px";E.left=H;I.runtimeStyle.left=K}}}}return L},clean:function(F,K,I){K=K||document;if(typeof K.createElement==="undefined"){K=K.ownerDocument||K[0]&&K[0].ownerDocument||document}if(!I&&F.length===1&&typeof F[0]==="string"){var H=/^&lt;(\w+)\s*\/?>$/.exec(F[0]);if(H){return[K.createElement(H[1])]}}var G=[],E=[],L=K.createElement("div");o.each(F,function(P,S){if(typeof S==="number"){S+=""}if(!S){return}if(typeof S==="string"){S=S.replace(/(&lt;(\w+)[^>]*?)\/>/g,function(U,V,T){return T.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?U:V+">&lt;/"+T+">"});var O=S.replace(/^\s+/,"").substring(0,10).toLowerCase();var Q=!O.indexOf("&lt;opt")&&[1,"&lt;select multiple='multiple'>","&lt;/select>"]||!O.indexOf("&lt;leg")&&[1,"&lt;fieldset>","&lt;/fieldset>"]||O.match(/^&lt;(thead|tbody|tfoot|colg|cap)/)&&[1,"&lt;table>","&lt;/table>"]||!O.indexOf("&lt;tr")&&[2,"&lt;table>&lt;tbody>","&lt;/tbody>&lt;/table>"]||(!O.indexOf("&lt;td")||!O.indexOf("&lt;th"))&&[3,"&lt;table>&lt;tbody>&lt;tr>","&lt;/tr>&lt;/tbody>&lt;/table>"]||!O.indexOf("&lt;col")&&[2,"&lt;table>&lt;tbody>&lt;/tbody>&lt;colgroup>","&lt;/colgroup>&lt;/table>"]||!o.support.htmlSerialize&&[1,"div&lt;div>","&lt;/div>"]||[0,"",""];L.innerHTML=Q[1]+S+Q[2];while(Q[0]--){L=L.lastChild}if(!o.support.tbody){var R=/&lt;tbody/i.test(S),N=!O.indexOf("&lt;table")&&!R?L.firstChild&&L.firstChild.childNodes:Q[1]=="&lt;table>"&&!R?L.childNodes:[];for(var M=N.length-1;M>=0;--M){if(o.nodeName(N[M],"tbody")&&!N[M].childNodes.length){N[M].parentNode.removeChild(N[M])}}}if(!o.support.leadingWhitespace&&/^\s/.test(S)){L.insertBefore(K.createTextNode(S.match(/^\s*/)[0]),L.firstChild)}S=o.makeArray(L.childNodes)}if(S.nodeType){G.push(S)}else{G=o.merge(G,S)}});if(I){for(var J=0;G[J];J++){if(o.nodeName(G[J],"script")&&(!G[J].type||G[J].type.toLowerCase()==="text/javascript")){E.push(G[J].parentNode?G[J].parentNode.removeChild(G[J]):G[J])}else{if(G[J].nodeType===1){G.splice.apply(G,[J+1,0].concat(o.makeArray(G[J].getElementsByTagName("script"))))}I.appendChild(G[J])}}return E}return G},attr:function(J,G,K){if(!J||J.nodeType==3||J.nodeType==8){return g}var H=!o.isXMLDoc(J),L=K!==g;G=H&&o.props[G]||G;if(J.tagName){var F=/href|src|style/.test(G);if(G=="selected"&&J.parentNode){J.parentNode.selectedIndex}if(G in J&&H&&!F){if(L){if(G=="type"&&o.nodeName(J,"input")&&J.parentNode){throw"type property can't be changed"}J[G]=K}if(o.nodeName(J,"form")&&J.getAttributeNode(G)){return J.getAttributeNode(G).nodeValue}if(G=="tabIndex"){var I=J.getAttributeNode("tabIndex");return I&&I.specified?I.value:J.nodeName.match(/(button|input|object|select|textarea)/i)?0:J.nodeName.match(/^(a|area)$/i)&&J.href?0:g}return J[G]}if(!o.support.style&&H&&G=="style"){return o.attr(J.style,"cssText",K)}if(L){J.setAttribute(G,""+K)}var E=!o.support.hrefNormalized&&H&&F?J.getAttribute(G,2):J.getAttribute(G);return E===null?g:E}if(!o.support.opacity&&G=="opacity"){if(L){J.zoom=1;J.filter=(J.filter||"").replace(/alpha\([^)]*\)/,"")+(parseInt(K)+""=="NaN"?"":"alpha(opacity="+K*100+")")}return J.filter&&J.filter.indexOf("opacity=")>=0?(parseFloat(J.filter.match(/opacity=([^)]*)/)[1])/100)+"":""}G=G.replace(/-([a-z])/ig,function(M,N){return N.toUpperCase()});if(L){J[G]=K}return J[G]},trim:function(E){return(E||"").replace(/^\s+|\s+$/g,"")},makeArray:function(G){var E=[];if(G!=null){var F=G.length;if(F==null||typeof G==="string"||o.isFunction(G)||G.setInterval){E[0]=G}else{while(F){E[--F]=G[F]}}}return E},inArray:function(G,H){for(var E=0,F=H.length;E&lt;F;E++){if(H[E]===G){return E}}return -1},merge:function(H,E){var F=0,G,I=H.length;if(!o.support.getAll){while((G=E[F++])!=null){if(G.nodeType!=8){H[I++]=G}}}else{while((G=E[F++])!=null){H[I++]=G}}return H},unique:function(K){var F=[],E={};try{for(var G=0,H=K.length;G&lt;H;G++){var J=o.data(K[G]);if(!E[J]){E[J]=true;F.push(K[G])}}}catch(I){F=K}return F},grep:function(F,J,E){var G=[];for(var H=0,I=F.length;H&lt;I;H++){if(!E!=!J(F[H],H)){G.push(F[H])}}return G},map:function(E,J){var F=[];for(var G=0,H=E.length;G&lt;H;G++){var I=J(E[G],G);if(I!=null){F[F.length]=I}}return F.concat.apply([],F)}});var C=navigator.userAgent.toLowerCase();o.browser={version:(C.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/)||[0,"0"])[1],safari:/webkit/.test(C),opera:/opera/.test(C),msie:/msie/.test(C)&&!/opera/.test(C),mozilla:/mozilla/.test(C)&&!/(compatible|webkit)/.test(C)};o.each({parent:function(E){return E.parentNode},parents:function(E){return o.dir(E,"parentNode")},next:function(E){return o.nth(E,2,"nextSibling")},prev:function(E){return o.nth(E,2,"previousSibling")},nextAll:function(E){return o.dir(E,"nextSibling")},prevAll:function(E){return o.dir(E,"previousSibling")},siblings:function(E){return o.sibling(E.parentNode.firstChild,E)},children:function(E){return o.sibling(E.firstChild)},contents:function(E){return o.nodeName(E,"iframe")?E.contentDocument||E.contentWindow.document:o.makeArray(E.childNodes)}},function(E,F){o.fn[E]=function(G){var H=o.map(this,F);if(G&&typeof G=="string"){H=o.multiFilter(G,H)}return this.pushStack(o.unique(H),E,G)}});o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(E,F){o.fn[E]=function(G){var J=[],L=o(G);for(var K=0,H=L.length;K&lt;H;K++){var I=(K>0?this.clone(true):this).get();o.fn[F].apply(o(L[K]),I);J=J.concat(I)}return this.pushStack(J,E,G)}});o.each({removeAttr:function(E){o.attr(this,E,"");if(this.nodeType==1){this.removeAttribute(E)}},addClass:function(E){o.className.add(this,E)},removeClass:function(E){o.className.remove(this,E)},toggleClass:function(F,E){if(typeof E!=="boolean"){E=!o.className.has(this,F)}o.className[E?"add":"remove"](this,F)},remove:function(E){if(!E||o.filter(E,[this]).length){o("*",this).add([this]).each(function(){o.event.remove(this);o.removeData(this)});if(this.parentNode){this.parentNode.removeChild(this)}}},empty:function(){o(this).children().remove();while(this.firstChild){this.removeChild(this.firstChild)}}},function(E,F){o.fn[E]=function(){return this.each(F,arguments)}});function j(E,F){return E[0]&&parseInt(o.curCSS(E[0],F,true),10)||0}var h="jQuery"+e(),v=0,A={};o.extend({cache:{},data:function(F,E,G){F=F==l?A:F;var H=F[h];if(!H){H=F[h]=++v}if(E&&!o.cache[H]){o.cache[H]={}}if(G!==g){o.cache[H][E]=G}return E?o.cache[H][E]:H},removeData:function(F,E){F=F==l?A:F;var H=F[h];if(E){if(o.cache[H]){delete o.cache[H][E];E="";for(E in o.cache[H]){break}if(!E){o.removeData(F)}}}else{try{delete F[h]}catch(G){if(F.removeAttribute){F.removeAttribute(h)}}delete o.cache[H]}},queue:function(F,E,H){if(F){E=(E||"fx")+"queue";var G=o.data(F,E);if(!G||o.isArray(H)){G=o.data(F,E,o.makeArray(H))}else{if(H){G.push(H)}}}return G},dequeue:function(H,G){var E=o.queue(H,G),F=E.shift();if(!G||G==="fx"){F=E[0]}if(F!==g){F.call(H)}}});o.fn.extend({data:function(E,G){var H=E.split(".");H[1]=H[1]?"."+H[1]:"";if(G===g){var F=this.triggerHandler("getData"+H[1]+"!",[H[0]]);if(F===g&&this.length){F=o.data(this[0],E)}return F===g&&H[1]?this.data(H[0]):F}else{return this.trigger("setData"+H[1]+"!",[H[0],G]).each(function(){o.data(this,E,G)})}},removeData:function(E){return this.each(function(){o.removeData(this,E)})},queue:function(E,F){if(typeof E!=="string"){F=E;E="fx"}if(F===g){return o.queue(this[0],E)}return this.each(function(){var G=o.queue(this,E,F);if(E=="fx"&&G.length==1){G[0].call(this)}})},dequeue:function(E){return this.each(function(){o.dequeue(this,E)})}});
-+/*
-+ * Sizzle CSS Selector Engine - v0.9.3
-+ *  Copyright 2009, The Dojo Foundation
-+ *  Released under the MIT, BSD, and GPL Licenses.
-+ *  More information: http://sizzlejs.com/
-+ */
-+(function(){var R=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?/g,L=0,H=Object.prototype.toString;var F=function(Y,U,ab,ac){ab=ab||[];U=U||document;if(U.nodeType!==1&&U.nodeType!==9){return[]}if(!Y||typeof Y!=="string"){return ab}var Z=[],W,af,ai,T,ad,V,X=true;R.lastIndex=0;while((W=R.exec(Y))!==null){Z.push(W[1]);if(W[2]){V=RegExp.rightContext;break}}if(Z.length>1&&M.exec(Y)){if(Z.length===2&&I.relative[Z[0]]){af=J(Z[0]+Z[1],U)}else{af=I.relative[Z[0]]?[U]:F(Z.shift(),U);while(Z.length){Y=Z.shift();if(I.relative[Y]){Y+=Z.shift()}af=J(Y,af)}}}else{var ae=ac?{expr:Z.pop(),set:E(ac)}:F.find(Z.pop(),Z.length===1&&U.parentNode?U.parentNode:U,Q(U));af=F.filter(ae.expr,ae.set);if(Z.length>0){ai=E(af)}else{X=false}while(Z.length){var ah=Z.pop(),ag=ah;if(!I.relative[ah]){ah=""}else{ag=Z.pop()}if(ag==null){ag=U}I.relative[ah](ai,ag,Q(U))}}if(!ai){ai=af}if(!ai){throw"Syntax error, unrecognized expression: "+(ah||Y)}if(H.call(ai)==="[object Array]"){if(!X){ab.push.apply(ab,ai)}else{if(U.nodeType===1){for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&(ai[aa]===true||ai[aa].nodeType===1&&K(U,ai[aa]))){ab.push(af[aa])}}}else{for(var aa=0;ai[aa]!=null;aa++){if(ai[aa]&&ai[aa].nodeType===1){ab.push(af[aa])}}}}}else{E(ai,ab)}if(V){F(V,U,ab,ac);if(G){hasDuplicate=false;ab.sort(G);if(hasDuplicate){for(var aa=1;aa&lt;ab.length;aa++){if(ab[aa]===ab[aa-1]){ab.splice(aa--,1)}}}}}return ab};F.matches=function(T,U){return F(T,null,null,U)};F.find=function(aa,T,ab){var Z,X;if(!aa){return[]}for(var W=0,V=I.order.length;W&lt;V;W++){var Y=I.order[W],X;if((X=I.match[Y].exec(aa))){var U=RegExp.leftContext;if(U.substr(U.length-1)!=="\\"){X[1]=(X[1]||"").replace(/\\/g,"");Z=I.find[Y](X,T,ab);if(Z!=null){aa=aa.replace(I.match[Y],"");break}}}}if(!Z){Z=T.getElementsByTagName("*")}return{set:Z,expr:aa}};F.filter=function(ad,ac,ag,W){var V=ad,ai=[],aa=ac,Y,T,Z=ac&&ac[0]&&Q(ac[0]);while(ad&&ac.length){for(var ab in I.filter){if((Y=I.match[ab].exec(ad))!=null){var U=I.filter[ab],ah,af;T=false;if(aa==ai){ai=[]}if(I.preFilter[ab]){Y=I.preFilter[ab](Y,aa,ag,ai,W,Z);if(!Y){T=ah=true}else{if(Y===true){continue}}}if(Y){for(var X=0;(af=aa[X])!=null;X++){if(af){ah=U(af,Y,X,aa);var ae=W^!!ah;if(ag&&ah!=null){if(ae){T=true}else{aa[X]=false}}else{if(ae){ai.push(af);T=true}}}}}if(ah!==g){if(!ag){aa=ai}ad=ad.replace(I.match[ab],"");if(!T){return[]}break}}}if(ad==V){if(T==null){throw"Syntax error, unrecognized expression: "+ad}else{break}}V=ad}return aa};var I=F.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(T){return T.getAttribute("href")}},relative:{"+":function(aa,T,Z){var X=typeof T==="string",ab=X&&!/\W/.test(T),Y=X&&!ab;if(ab&&!Z){T=T.toUpperCase()}for(var W=0,V=aa.length,U;W&lt;V;W++){if((U=aa[W])){while((U=U.previousSibling)&&U.nodeType!==1){}aa[W]=Y||U&&U.nodeName===T?U||false:U===T}}if(Y){F.filter(T,aa,true)}},">":function(Z,U,aa){var X=typeof U==="string";if(X&&!/\W/.test(U)){U=aa?U:U.toUpperCase();for(var V=0,T=Z.length;V&lt;T;V++){var Y=Z[V];if(Y){var W=Y.parentNode;Z[V]=W.nodeName===U?W:false}}}else{for(var V=0,T=Z.length;V&lt;T;V++){var Y=Z[V];if(Y){Z[V]=X?Y.parentNode:Y.parentNode===U}}if(X){F.filter(U,Z,true)}}},"":function(W,U,Y){var V=L++,T=S;if(!U.match(/\W/)){var X=U=Y?U:U.toUpperCase();T=P}T("parentNode",U,V,W,X,Y)},"~":function(W,U,Y){var V=L++,T=S;if(typeof U==="string"&&!U.match(/\W/)){var X=U=Y?U:U.toUpperCase();T=P}T("previousSibling",U,V,W,X,Y)}},find:{ID:function(U,V,W){if(typeof V.getElementById!=="undefined"&&!W){var T=V.getElementById(U[1]);return T?[T]:[]}},NAME:function(V,Y,Z){if(typeof Y.getElementsByName!=="undefined"){var U=[],X=Y.getElementsByName(V[1]);for(var W=0,T=X.length;W&lt;T;W++){if(X[W].getAttribute("name")===V[1]){U.push(X[W])}}return U.length===0?null:U}},TAG:function(T,U){return U.getElementsByTagName(T[1])}},preFilter:{CLASS:function(W,U,V,T,Z,aa){W=" "+W[1].replace(/\\/g,"")+" ";if(aa){return W}for(var X=0,Y;(Y=U[X])!=null;X++){if(Y){if(Z^(Y.className&&(" "+Y.className+" ").indexOf(W)>=0)){if(!V){T.push(Y)}}else{if(V){U[X]=false}}}}return false},ID:function(T){return T[1].replace(/\\/g,"")},TAG:function(U,T){for(var V=0;T[V]===false;V++){}return T[V]&&Q(T[V])?U[1]:U[1].toUpperCase()},CHILD:function(T){if(T[1]=="nth"){var U=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(T[2]=="even"&&"2n"||T[2]=="odd"&&"2n+1"||!/\D/.test(T[2])&&"0n+"+T[2]||T[2]);T[2]=(U[1]+(U[2]||1))-0;T[3]=U[3]-0}T[0]=L++;return T},ATTR:function(X,U,V,T,Y,Z){var W=X[1].replace(/\\/g,"");if(!Z&&I.attrMap[W]){X[1]=I.attrMap[W]}if(X[2]==="~="){X[4]=" "+X[4]+" "}return X},PSEUDO:function(X,U,V,T,Y){if(X[1]==="not"){if(X[3].match(R).length>1||/^\w/.test(X[3])){X[3]=F(X[3],null,null,U)}else{var W=F.filter(X[3],U,V,true^Y);if(!V){T.push.apply(T,W)}return false}}else{if(I.match.POS.test(X[0])||I.match.CHILD.test(X[0])){return true}}return X},POS:function(T){T.unshift(true);return T}},filters:{enabled:function(T){return T.disabled===false&&T.type!=="hidden"},disabled:function(T){return T.disabled===true},checked:function(T){return T.checked===true},selected:function(T){T.parentNode.selectedIndex;return T.selected===true},parent:function(T){return !!T.firstChild},empty:function(T){return !T.firstChild},has:function(V,U,T){return !!F(T[3],V).length},header:function(T){return/h\d/i.test(T.nodeName)},text:function(T){return"text"===T.type},radio:function(T){return"radio"===T.type},checkbox:function(T){return"checkbox"===T.type},file:function(T){return"file"===T.type},password:function(T){return"password"===T.type},submit:function(T){return"submit"===T.type},image:function(T){return"image"===T.type},reset:function(T){return"reset"===T.type},button:function(T){return"button"===T.type||T.nodeName.toUpperCase()==="BUTTON"},input:function(T){return/input|select|textarea|button/i.test(T.nodeName)}},setFilters:{first:function(U,T){return T===0},last:function(V,U,T,W){return U===W.length-1},even:function(U,T){return T%2===0},odd:function(U,T){return T%2===1},lt:function(V,U,T){return U&lt;T[3]-0},gt:function(V,U,T){return U>T[3]-0},nth:function(V,U,T){return T[3]-0==U},eq:function(V,U,T){return T[3]-0==U}},filter:{PSEUDO:function(Z,V,W,aa){var U=V[1],X=I.filters[U];if(X){return X(Z,W,V,aa)}else{if(U==="contains"){return(Z.textContent||Z.innerText||"").indexOf(V[3])>=0}else{if(U==="not"){var Y=V[3];for(var W=0,T=Y.length;W&lt;T;W++){if(Y[W]===Z){return false}}return true}}}},CHILD:function(T,W){var Z=W[1],U=T;switch(Z){case"only":case"first":while(U=U.previousSibling){if(U.nodeType===1){return false}}if(Z=="first"){return true}U=T;case"last":while(U=U.nextSibling){if(U.nodeType===1){return false}}return true;case"nth":var V=W[2],ac=W[3];if(V==1&&ac==0){return true}var Y=W[0],ab=T.parentNode;if(ab&&(ab.sizcache!==Y||!T.nodeIndex)){var X=0;for(U=ab.firstChild;U;U=U.nextSibling){if(U.nodeType===1){U.nodeIndex=++X}}ab.sizcache=Y}var aa=T.nodeIndex-ac;if(V==0){return aa==0}else{return(aa%V==0&&aa/V>=0)}}},ID:function(U,T){return U.nodeType===1&&U.getAttribute("id")===T},TAG:function(U,T){return(T==="*"&&U.nodeType===1)||U.nodeName===T},CLASS:function(U,T){return(" "+(U.className||U.getAttribute("class"))+" ").indexOf(T)>-1},ATTR:function(Y,W){var V=W[1],T=I.attrHandle[V]?I.attrHandle[V](Y):Y[V]!=null?Y[V]:Y.getAttribute(V),Z=T+"",X=W[2],U=W[4];return T==null?X==="!=":X==="="?Z===U:X==="*="?Z.indexOf(U)>=0:X==="~="?(" "+Z+" ").indexOf(U)>=0:!U?Z&&T!==false:X==="!="?Z!=U:X==="^="?Z.indexOf(U)===0:X==="$="?Z.substr(Z.length-U.length)===U:X==="|="?Z===U||Z.substr(0,U.length+1)===U+"-":false},POS:function(X,U,V,Y){var T=U[2],W=I.setFilters[T];if(W){return W(X,V,U,Y)}}}};var M=I.match.POS;for(var O in I.match){I.match[O]=RegExp(I.match[O].source+/(?![^\[]*\])(?![^\(]*\))/.source)}var E=function(U,T){U=Array.prototype.slice.call(U);if(T){T.push.apply(T,U);return T}return U};try{Array.prototype.slice.call(document.documentElement.childNodes)}catch(N){E=function(X,W){var U=W||[];if(H.call(X)==="[object Array]"){Array.prototype.push.apply(U,X)}else{if(typeof X.length==="number"){for(var V=0,T=X.length;V&lt;T;V++){U.push(X[V])}}else{for(var V=0;X[V];V++){U.push(X[V])}}}return U}}var G;if(document.documentElement.compareDocumentPosition){G=function(U,T){var V=U.compareDocumentPosition(T)&4?-1:U===T?0:1;if(V===0){hasDuplicate=true}return V}}else{if("sourceIndex" in document.documentElement){G=function(U,T){var V=U.sourceIndex-T.sourceIndex;if(V===0){hasDuplicate=true}return V}}else{if(document.createRange){G=function(W,U){var V=W.ownerDocument.createRange(),T=U.ownerDocument.createRange();V.selectNode(W);V.collapse(true);T.selectNode(U);T.collapse(true);var X=V.compareBoundaryPoints(Range.START_TO_END,T);if(X===0){hasDuplicate=true}return X}}}}(function(){var U=document.createElement("form"),V="script"+(new Date).getTime();U.innerHTML="&lt;input name='"+V+"'/>";var T=document.documentElement;T.insertBefore(U,T.firstChild);if(!!document.getElementById(V)){I.find.ID=function(X,Y,Z){if(typeof Y.getElementById!=="undefined"&&!Z){var W=Y.getElementById(X[1]);return W?W.id===X[1]||typeof W.getAttributeNode!=="undefined"&&W.getAttributeNode("id").nodeValue===X[1]?[W]:g:[]}};I.filter.ID=function(Y,W){var X=typeof Y.getAttributeNode!=="undefined"&&Y.getAttributeNode("id");return Y.nodeType===1&&X&&X.nodeValue===W}}T.removeChild(U)})();(function(){var T=document.createElement("div");T.appendChild(document.createComment(""));if(T.getElementsByTagName("*").length>0){I.find.TAG=function(U,Y){var X=Y.getElementsByTagName(U[1]);if(U[1]==="*"){var W=[];for(var V=0;X[V];V++){if(X[V].nodeType===1){W.push(X[V])}}X=W}return X}}T.innerHTML="&lt;a href='#'>&lt;/a>";if(T.firstChild&&typeof T.firstChild.getAttribute!=="undefined"&&T.firstChild.getAttribute("href")!=="#"){I.attrHandle.href=function(U){return U.getAttribute("href",2)}}})();if(document.querySelectorAll){(function(){var T=F,U=document.createElement("div");U.innerHTML="&lt;p class='TEST'>&lt;/p>";if(U.querySelectorAll&&U.querySelectorAll(".TEST").length===0){return}F=function(Y,X,V,W){X=X||document;if(!W&&X.nodeType===9&&!Q(X)){try{return E(X.querySelectorAll(Y),V)}catch(Z){}}return T(Y,X,V,W)};F.find=T.find;F.filter=T.filter;F.selectors=T.selectors;F.matches=T.matches})()}if(document.getElementsByClassName&&document.documentElement.getElementsByClassName){(function(){var T=document.createElement("div");T.innerHTML="&lt;div class='test e'>&lt;/div>&lt;div class='test'>&lt;/div>";if(T.getElementsByClassName("e").length===0){return}T.lastChild.className="e";if(T.getElementsByClassName("e").length===1){return}I.order.splice(1,0,"CLASS");I.find.CLASS=function(U,V,W){if(typeof V.getElementsByClassName!=="undefined"&&!W){return V.getElementsByClassName(U[1])}}})()}function P(U,Z,Y,ad,aa,ac){var ab=U=="previousSibling"&&!ac;for(var W=0,V=ad.length;W&lt;V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1&&!ac){T.sizcache=Y;T.sizset=W}if(T.nodeName===Z){X=T;break}T=T[U]}ad[W]=X}}}function S(U,Z,Y,ad,aa,ac){var ab=U=="previousSibling"&&!ac;for(var W=0,V=ad.length;W&lt;V;W++){var T=ad[W];if(T){if(ab&&T.nodeType===1){T.sizcache=Y;T.sizset=W}T=T[U];var X=false;while(T){if(T.sizcache===Y){X=ad[T.sizset];break}if(T.nodeType===1){if(!ac){T.sizcache=Y;T.sizset=W}if(typeof Z!=="string"){if(T===Z){X=true;break}}else{if(F.filter(Z,[T]).length>0){X=T;break}}}T=T[U]}ad[W]=X}}}var K=document.compareDocumentPosition?function(U,T){return U.compareDocumentPosition(T)&16}:function(U,T){return U!==T&&(U.contains?U.contains(T):true)};var Q=function(T){return T.nodeType===9&&T.documentElement.nodeName!=="HTML"||!!T.ownerDocument&&Q(T.ownerDocument)};var J=function(T,aa){var W=[],X="",Y,V=aa.nodeType?[aa]:aa;while((Y=I.match.PSEUDO.exec(T))){X+=Y[0];T=T.replace(I.match.PSEUDO,"")}T=I.relative[T]?T+"*":T;for(var Z=0,U=V.length;Z&lt;U;Z++){F(T,V[Z],W)}return F.filter(X,W)};o.find=F;o.filter=F.filter;o.expr=F.selectors;o.expr[":"]=o.expr.filters;F.selectors.filters.hidden=function(T){return T.offsetWidth===0||T.offsetHeight===0};F.selectors.filters.visible=function(T){return T.offsetWidth>0||T.offsetHeight>0};F.selectors.filters.animated=function(T){return o.grep(o.timers,function(U){return T===U.elem}).length};o.multiFilter=function(V,T,U){if(U){V=":not("+V+")"}return F.matches(V,T)};o.dir=function(V,U){var T=[],W=V[U];while(W&&W!=document){if(W.nodeType==1){T.push(W)}W=W[U]}return T};o.nth=function(X,T,V,W){T=T||1;var U=0;for(;X;X=X[V]){if(X.nodeType==1&&++U==T){break}}return X};o.sibling=function(V,U){var T=[];for(;V;V=V.nextSibling){if(V.nodeType==1&&V!=U){T.push(V)}}return T};return;l.Sizzle=F})();o.event={add:function(I,F,H,K){if(I.nodeType==3||I.nodeType==8){return}if(I.setInterval&&I!=l){I=l}if(!H.guid){H.guid=this.guid++}if(K!==g){var G=H;H=this.proxy(G);H.data=K}var E=o.data(I,"events")||o.data(I,"events",{}),J=o.data(I,"handle")||o.data(I,"handle",function(){return typeof o!=="undefined"&&!o.event.triggered?o.event.handle.apply(arguments.callee.elem,arguments):g});J.elem=I;o.each(F.split(/\s+/),function(M,N){var O=N.split(".");N=O.shift();H.type=O.slice().sort().join(".");var L=E[N];if(o.event.specialAll[N]){o.event.specialAll[N].setup.call(I,K,O)}if(!L){L=E[N]={};if(!o.event.special[N]||o.event.special[N].setup.call(I,K,O)===false){if(I.addEventListener){I.addEventListener(N,J,false)}else{if(I.attachEvent){I.attachEvent("on"+N,J)}}}}L[H.guid]=H;o.event.global[N]=true});I=null},guid:1,global:{},remove:function(K,H,J){if(K.nodeType==3||K.nodeType==8){return}var G=o.data(K,"events"),F,E;if(G){if(H===g||(typeof H==="string"&&H.charAt(0)==".")){for(var I in G){this.remove(K,I+(H||""))}}else{if(H.type){J=H.handler;H=H.type}o.each(H.split(/\s+/),function(M,O){var Q=O.split(".");O=Q.shift();var N=RegExp("(^|\\.)"+Q.slice().sort().join(".*\\.")+"(\\.|$)");if(G[O]){if(J){delete G[O][J.guid]}else{for(var P in G[O]){if(N.test(G[O][P].type)){delete G[O][P]}}}if(o.event.specialAll[O]){o.event.specialAll[O].teardown.call(K,Q)}for(F in G[O]){break}if(!F){if(!o.event.special[O]||o.event.special[O].teardown.call(K,Q)===false){if(K.removeEventListener){K.removeEventListener(O,o.data(K,"handle"),false)}else{if(K.detachEvent){K.detachEvent("on"+O,o.data(K,"handle"))}}}F=null;delete G[O]}}})}for(F in G){break}if(!F){var L=o.data(K,"handle");if(L){L.elem=null}o.removeData(K,"events");o.removeData(K,"handle")}}},trigger:function(I,K,H,E){var G=I.type||I;if(!E){I=typeof I==="object"?I[h]?I:o.extend(o.Event(G),I):o.Event(G);if(G.indexOf("!")>=0){I.type=G=G.slice(0,-1);I.exclusive=true}if(!H){I.stopPropagation();if(this.global[G]){o.each(o.cache,function(){if(this.events&&this.events[G]){o.event.trigger(I,K,this.handle.elem)}})}}if(!H||H.nodeType==3||H.nodeType==8){return g}I.result=g;I.target=H;K=o.makeArray(K);K.unshift(I)}I.currentTarget=H;var J=o.data(H,"handle");if(J){J.apply(H,K)}if((!H[G]||(o.nodeName(H,"a")&&G=="click"))&&H["on"+G]&&H["on"+G].apply(H,K)===false){I.result=false}if(!E&&H[G]&&!I.isDefaultPrevented()&&!(o.nodeName(H,"a")&&G=="click")){this.triggered=true;try{H[G]()}catch(L){}}this.triggered=false;if(!I.isPropagationStopped()){var F=H.parentNode||H.ownerDocument;if(F){o.event.trigger(I,K,F,true)}}},handle:function(K){var J,E;K=arguments[0]=o.event.fix(K||l.event);K.currentTarget=this;var L=K.type.split(".");K.type=L.shift();J=!L.length&&!K.exclusive;var I=RegExp("(^|\\.)"+L.slice().sort().join(".*\\.")+"(\\.|$)");E=(o.data(this,"events")||{})[K.type];for(var G in E){var H=E[G];if(J||I.test(H.type)){K.handler=H;K.data=H.data;var F=H.apply(this,arguments);if(F!==g){K.result=F;if(F===false){K.preventDefault();K.stopPropagation()}}if(K.isImmediatePropagationStopped()){break}}}},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(H){if(H[h]){return H}var F=H;H=o.Event(F);for(var G=this.props.length,J;G;){J=this.props[--G];H[J]=F[J]}if(!H.target){H.target=H.srcElement||document}if(H.target.nodeType==3){H.target=H.target.parentNode}if(!H.relatedTarget&&H.fromElement){H.relatedTarget=H.fromElement==H.target?H.toElement:H.fromElement}if(H.pageX==null&&H.clientX!=null){var I=document.documentElement,E=document.body;H.pageX=H.clientX+(I&&I.scrollLeft||E&&E.scrollLeft||0)-(I.clientLeft||0);H.pageY=H.clientY+(I&&I.scrollTop||E&&E.scrollTop||0)-(I.clientTop||0)}if(!H.which&&((H.charCode||H.charCode===0)?H.charCode:H.keyCode)){H.which=H.charCode||H.keyCode}if(!H.metaKey&&H.ctrlKey){H.metaKey=H.ctrlKey}if(!H.which&&H.button){H.which=(H.button&1?1:(H.button&2?3:(H.button&4?2:0)))}return H},proxy:function(F,E){E=E||function(){return F.apply(this,arguments)};E.guid=F.guid=F.guid||E.guid||this.guid++;return E},special:{ready:{setup:B,teardown:function(){}}},specialAll:{live:{setup:function(E,F){o.event.add(this,F[0],c)},teardown:function(G){if(G.length){var E=0,F=RegExp("(^|\\.)"+G[0]+"(\\.|$)");o.each((o.data(this,"events").live||{}),function(){if(F.test(this.type)){E++}});if(E&lt;1){o.event.remove(this,G[0],c)}}}}}};o.Event=function(E){if(!this.preventDefault){return new o.Event(E)}if(E&&E.type){this.originalEvent=E;this.type=E.type}else{this.type=E}this.timeStamp=e();this[h]=true};function k(){return false}function u(){return true}o.Event.prototype={preventDefault:function(){this.isDefaultPrevented=u;var E=this.originalEvent;if(!E){return}if(E.preventDefault){E.preventDefault()}E.returnValue=false},stopPropagation:function(){this.isPropagationStopped=u;var E=this.originalEvent;if(!E){return}if(E.stopPropagation){E.stopPropagation()}E.cancelBubble=true},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=u;this.stopPropagation()},isDefaultPrevented:k,isPropagationStopped:k,isImmediatePropagationStopped:k};var a=function(F){var E=F.relatedTarget;while(E&&E!=this){try{E=E.parentNode}catch(G){E=this}}if(E!=this){F.type=F.data;o.event.handle.apply(this,arguments)}};o.each({mouseover:"mouseenter",mouseout:"mouseleave"},function(F,E){o.event.special[E]={setup:function(){o.event.add(this,F,a,E)},teardown:function(){o.event.remove(this,F,a)}}});o.fn.extend({bind:function(F,G,E){return F=="unload"?this.one(F,G,E):this.each(function(){o.event.add(this,F,E||G,E&&G)})},one:function(G,H,F){var E=o.event.proxy(F||H,function(I){o(this).unbind(I,E);return(F||H).apply(this,arguments)});return this.each(function(){o.event.add(this,G,E,F&&H)})},unbind:function(F,E){return this.each(function(){o.event.remove(this,F,E)})},trigger:function(E,F){return this.each(function(){o.event.trigger(E,F,this)})},triggerHandler:function(E,G){if(this[0]){var F=o.Event(E);F.preventDefault();F.stopPropagation();o.event.trigger(F,G,this[0]);return F.result}},toggle:function(G){var E=arguments,F=1;while(F&lt;E.length){o.event.proxy(G,E[F++])}return this.click(o.event.proxy(G,function(H){this.lastToggle=(this.lastToggle||0)%F;H.preventDefault();return E[this.lastToggle++].apply(this,arguments)||false}))},hover:function(E,F){return this.mouseenter(E).mouseleave(F)},ready:function(E){B();if(o.isReady){E.call(document,o)}else{o.readyList.push(E)}return this},live:function(G,F){var E=o.event.proxy(F);E.guid+=this.selector+G;o(document).bind(i(G,this.selector),this.selector,E);return this},die:function(F,E){o(document).unbind(i(F,this.selector),E?{guid:E.guid+this.selector+F}:null);return this}});function c(H){var E=RegExp("(^|\\.)"+H.type+"(\\.|$)"),G=true,F=[];o.each(o.data(this,"events").live||[],function(I,J){if(E.test(J.type)){var K=o(H.target).closest(J.data)[0];if(K){F.push({elem:K,fn:J})}}});F.sort(function(J,I){return o.data(J.elem,"closest")-o.data(I.elem,"closest")});o.each(F,function(){if(this.fn.call(this.elem,H,this.fn.data)===false){return(G=false)}});return G}function i(F,E){return["live",F,E.replace(/\./g,"`").replace(/ /g,"|")].join(".")}o.extend({isReady:false,readyList:[],ready:function(){if(!o.isReady){o.isReady=true;if(o.readyList){o.each(o.readyList,function(){this.call(document,o)});o.readyList=null}o(document).triggerHandler("ready")}}});var x=false;function B(){if(x){return}x=true;if(document.addEventListener){document.addEventListener("DOMContentLoaded",function(){document.removeEventListener("DOMContentLoaded",arguments.callee,false);o.ready()},false)}else{if(document.attachEvent){document.attachEvent("onreadystatechange",function(){if(document.readyState==="complete"){document.detachEvent("onreadystatechange",arguments.callee);o.ready()}});if(document.documentElement.doScroll&&l==l.top){(function(){if(o.isReady){return}try{document.documentElement.doScroll("left")}catch(E){setTimeout(arguments.callee,0);return}o.ready()})()}}}o.event.add(l,"load",o.ready)}o.each(("blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error").split(","),function(F,E){o.fn[E]=function(G){return G?this.bind(E,G):this.trigger(E)}});o(l).bind("unload",function(){for(var E in o.cache){if(E!=1&&o.cache[E].handle){o.event.remove(o.cache[E].handle.elem)}}});(function(){o.support={};var F=document.documentElement,G=document.createElement("script"),K=document.createElement("div"),J="script"+(new Date).getTime();K.style.display="none";K.innerHTML='   &lt;link/>&lt;table>&lt;/table>&lt;a href="/a" style="color:red;float:left;opacity:.5;">a&lt;/a>&lt;select>&lt;option>text&lt;/option>&lt;/select>&lt;object>&lt;param/>&lt;/object>';var H=K.getElementsByTagName("*"),E=K.getElementsByTagName("a")[0];if(!H||!H.length||!E){return}o.support={leadingWhitespace:K.firstChild.nodeType==3,tbody:!K.getElementsByTagName("tbody").length,objectAll:!!K.getElementsByTagName("object")[0].getElementsByTagName("*").length,htmlSerialize:!!K.getElementsByTagName("link").length,style:/red/.test(E.getAttribute("style")),hrefNormalized:E.getAttribute("href")==="/a",opacity:E.style.opacity==="0.5",cssFloat:!!E.style.cssFloat,scriptEval:false,noCloneEvent:true,boxModel:null};G.type="text/javascript";try{G.appendChild(document.createTextNode("window."+J+"=1;"))}catch(I){}F.insertBefore(G,F.firstChild);if(l[J]){o.support.scriptEval=true;delete l[J]}F.removeChild(G);if(K.attachEvent&&K.fireEvent){K.attachEvent("onclick",function(){o.support.noCloneEvent=false;K.detachEvent("onclick",arguments.callee)});K.cloneNode(true).fireEvent("onclick")}o(function(){var L=document.createElement("div");L.style.width=L.style.paddingLeft="1px";document.body.appendChild(L);o.boxModel=o.support.boxModel=L.offsetWidth===2;document.body.removeChild(L).style.display="none"})})();var w=o.support.cssFloat?"cssFloat":"styleFloat";o.props={"for":"htmlFor","class":"className","float":w,cssFloat:w,styleFloat:w,readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",tabindex:"tabIndex"};o.fn.extend({_load:o.fn.load,load:function(G,J,K){if(typeof G!=="string"){return this._load(G)}var I=G.indexOf(" ");if(I>=0){var E=G.slice(I,G.length);G=G.slice(0,I)}var H="GET";if(J){if(o.isFunction(J)){K=J;J=null}else{if(typeof J==="object"){J=o.param(J);H="POST"}}}var F=this;o.ajax({url:G,type:H,dataType:"html",data:J,complete:function(M,L){if(L=="success"||L=="notmodified"){F.html(E?o("&lt;div/>").append(M.responseText.replace(/&lt;script(.|\s)*?\/script>/g,"")).find(E):M.responseText)}if(K){F.each(K,[M.responseText,L,M])}}});return this},serialize:function(){return o.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?o.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password|search/i.test(this.type))}).map(function(E,F){var G=o(this).val();return G==null?null:o.isArray(G)?o.map(G,function(I,H){return{name:F.name,value:I}}):{name:F.name,value:G}}).get()}});o.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","),function(E,F){o.fn[F]=function(G){return this.bind(F,G)}});var r=e();o.extend({get:function(E,G,H,F){if(o.isFunction(G)){H=G;G=null}return o.ajax({type:"GET",url:E,data:G,success:H,dataType:F})},getScript:function(E,F){return o.get(E,null,F,"script")},getJSON:function(E,F,G){return o.get(E,F,G,"json")},post:function(E,G,H,F){if(o.isFunction(G)){H=G;G={}}return o.ajax({type:"POST",url:E,data:G,success:H,dataType:F})},ajaxSetup:function(E){o.extend(o.ajaxSettings,E)},ajaxSettings:{url:location.href,global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:function(){return l.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest()},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:function(M){M=o.extend(true,M,o.extend(true,{},o.ajaxSettings,M));var W,F=/=\?(&|$)/g,R,V,G=M.type.toUpperCase();if(M.data&&M.processData&&typeof M.data!=="string"){M.data=o.param(M.data)}if(M.dataType=="jsonp"){if(G=="GET"){if(!M.url.match(F)){M.url+=(M.url.match(/\?/)?"&":"?")+(M.jsonp||"callback")+"=?"}}else{if(!M.data||!M.data.match(F)){M.data=(M.data?M.data+"&":"")+(M.jsonp||"callback")+"=?"}}M.dataType="json"}if(M.dataType=="json"&&(M.data&&M.data.match(F)||M.url.match(F))){W="jsonp"+r++;if(M.data){M.data=(M.data+"").replace(F,"="+W+"$1")}M.url=M.url.replace(F,"="+W+"$1");M.dataType="script";l[W]=function(X){V=X;I();L();l[W]=g;try{delete l[W]}catch(Y){}if(H){H.removeChild(T)}}}if(M.dataType=="script"&&M.cache==null){M.cache=false}if(M.cache===false&&G=="GET"){var E=e();var U=M.url.replace(/(\?|&)_=.*?(&|$)/,"$1_="+E+"$2");M.url=U+((U==M.url)?(M.url.match(/\?/)?"&":"?")+"_="+E:"")}if(M.data&&G=="GET"){M.url+=(M.url.match(/\?/)?"&":"?")+M.data;M.data=null}if(M.global&&!o.active++){o.event.trigger("ajaxStart")}var Q=/^(\w+:)?\/\/([^\/?#]+)/.exec(M.url);if(M.dataType=="script"&&G=="GET"&&Q&&(Q[1]&&Q[1]!=location.protocol||Q[2]!=location.host)){var H=document.getElementsByTagName("head")[0];var T=document.createElement("script");T.src=M.url;if(M.scriptCharset){T.charset=M.scriptCharset}if(!W){var O=false;T.onload=T.onreadystatechange=function(){if(!O&&(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")){O=true;I();L();T.onload=T.onreadystatechange=null;H.removeChild(T)}}}H.appendChild(T);return g}var K=false;var J=M.xhr();if(M.username){J.open(G,M.url,M.async,M.username,M.password)}else{J.open(G,M.url,M.async)}try{if(M.data){J.setRequestHeader("Content-Type",M.contentType)}if(M.ifModified){J.setRequestHeader("If-Modified-Since",o.lastModified[M.url]||"Thu, 01 Jan 1970 00:00:00 GMT")}J.setRequestHeader("X-Requested-With","XMLHttpRequest");J.setRequestHeader("Accept",M.dataType&&M.accepts[M.dataType]?M.accepts[M.dataType]+", */*":M.accepts._default)}catch(S){}if(M.beforeSend&&M.beforeSend(J,M)===false){if(M.global&&!--o.active){o.event.trigger("ajaxStop")}J.abort();return false}if(M.global){o.event.trigger("ajaxSend",[J,M])}var N=function(X){if(J.readyState==0){if(P){clearInterval(P);P=null;if(M.global&&!--o.active){o.event.trigger("ajaxStop")}}}else{if(!K&&J&&(J.readyState==4||X=="timeout")){K=true;if(P){clearInterval(P);P=null}R=X=="timeout"?"timeout":!o.httpSuccess(J)?"error":M.ifModified&&o.httpNotModified(J,M.url)?"notmodified":"success";if(R=="success"){try{V=o.httpData(J,M.dataType,M)}catch(Z){R="parsererror"}}if(R=="success"){var Y;try{Y=J.getResponseHeader("Last-Modified")}catch(Z){}if(M.ifModified&&Y){o.lastModified[M.url]=Y}if(!W){I()}}else{o.handleError(M,J,R)}L();if(X){J.abort()}if(M.async){J=null}}}};if(M.async){var P=setInterval(N,13);if(M.timeout>0){setTimeout(function(){if(J&&!K){N("timeout")}},M.timeout)}}try{J.send(M.data)}catch(S){o.handleError(M,J,null,S)}if(!M.async){N()}function I(){if(M.success){M.success(V,R)}if(M.global){o.event.trigger("ajaxSuccess",[J,M])}}function L(){if(M.complete){M.complete(J,R)}if(M.global){o.event.trigger("ajaxComplete",[J,M])}if(M.global&&!--o.active){o.event.trigger("ajaxStop")}}return J},handleError:function(F,H,E,G){if(F.error){F.error(H,E,G)}if(F.global){o.event.trigger("ajaxError",[H,F,G])}},active:0,httpSuccess:function(F){try{return !F.status&&location.protocol=="file:"||(F.status>=200&&F.status&lt;300)||F.status==304||F.status==1223}catch(E){}return false},httpNotModified:function(G,E){try{var H=G.getResponseHeader("Last-Modified");return G.status==304||H==o.lastModified[E]}catch(F){}return false},httpData:function(J,H,G){var F=J.getResponseHeader("content-type"),E=H=="xml"||!H&&F&&F.indexOf("xml")>=0,I=E?J.responseXML:J.responseText;if(E&&I.documentElement.tagName=="parsererror"){throw"parsererror"}if(G&&G.dataFilter){I=G.dataFilter(I,H)}if(typeof I==="string"){if(H=="script"){o.globalEval(I)}if(H=="json"){I=l["eval"]("("+I+")")}}return I},param:function(E){var G=[];function H(I,J){G[G.length]=encodeURIComponent(I)+"="+encodeURIComponent(J)}if(o.isArray(E)||E.jquery){o.each(E,function(){H(this.name,this.value)})}else{for(var F in E){if(o.isArray(E[F])){o.each(E[F],function(){H(F,this)})}else{H(F,o.isFunction(E[F])?E[F]():E[F])}}}return G.join("&").replace(/%20/g,"+")}});var m={},n,d=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];function t(F,E){var G={};o.each(d.concat.apply([],d.slice(0,E)),function(){G[this]=F});return G}o.fn.extend({show:function(J,L){if(J){return this.animate(t("show",3),J,L)}else{for(var H=0,F=this.length;H&lt;F;H++){var E=o.data(this[H],"olddisplay");this[H].style.display=E||"";if(o.css(this[H],"display")==="none"){var G=this[H].tagName,K;if(m[G]){K=m[G]}else{var I=o("&lt;"+G+" />").appendTo("body");K=I.css("display");if(K==="none"){K="block"}I.remove();m[G]=K}o.data(this[H],"olddisplay",K)}}for(var H=0,F=this.length;H&lt;F;H++){this[H].style.display=o.data(this[H],"olddisplay")||""}return this}},hide:function(H,I){if(H){return this.animate(t("hide",3),H,I)}else{for(var G=0,F=this.length;G&lt;F;G++){var E=o.data(this[G],"olddisplay");if(!E&&E!=="none"){o.data(this[G],"olddisplay",o.css(this[G],"display"))}}for(var G=0,F=this.length;G&lt;F;G++){this[G].style.display="none"}return this}},_toggle:o.fn.toggle,toggle:function(G,F){var E=typeof G==="boolean";return o.isFunction(G)&&o.isFunction(F)?this._toggle.apply(this,arguments):G==null||E?this.each(function(){var H=E?G:o(this).is(":hidden");o(this)[H?"show":"hide"]()}):this.animate(t("toggle",3),G,F)},fadeTo:function(E,G,F){return this.animate({opacity:G},E,F)},animate:function(I,F,H,G){var E=o.speed(F,H,G);return this[E.queue===false?"each":"queue"](function(){var K=o.extend({},E),M,L=this.nodeType==1&&o(this).is(":hidden"),J=this;for(M in I){if(I[M]=="hide"&&L||I[M]=="show"&&!L){return K.complete.call(this)}if((M=="height"||M=="width")&&this.style){K.display=o.css(this,"display");K.overflow=this.style.overflow}}if(K.overflow!=null){this.style.overflow="hidden"}K.curAnim=o.extend({},I);o.each(I,function(O,S){var R=new o.fx(J,K,O);if(/toggle|show|hide/.test(S)){R[S=="toggle"?L?"show":"hide":S](I)}else{var Q=S.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),T=R.cur(true)||0;if(Q){var N=parseFloat(Q[2]),P=Q[3]||"px";if(P!="px"){J.style[O]=(N||1)+P;T=((N||1)/R.cur(true))*T;J.style[O]=T+P}if(Q[1]){N=((Q[1]=="-="?-1:1)*N)+T}R.custom(T,N,P)}else{R.custom(T,S,"")}}});return true})},stop:function(F,E){var G=o.timers;if(F){this.queue([])}this.each(function(){for(var H=G.length-1;H>=0;H--){if(G[H].elem==this){if(E){G[H](true)}G.splice(H,1)}}});if(!E){this.dequeue()}return this}});o.each({slideDown:t("show",1),slideUp:t("hide",1),slideToggle:t("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(E,F){o.fn[E]=function(G,H){return this.animate(F,G,H)}});o.extend({speed:function(G,H,F){var E=typeof G==="object"?G:{complete:F||!F&&H||o.isFunction(G)&&G,duration:G,easing:F&&H||H&&!o.isFunction(H)&&H};E.duration=o.fx.off?0:typeof E.duration==="number"?E.duration:o.fx.speeds[E.duration]||o.fx.speeds._default;E.old=E.complete;E.complete=function(){if(E.queue!==false){o(this).dequeue()}if(o.isFunction(E.old)){E.old.call(this)}};return E},easing:{linear:function(G,H,E,F){return E+F*G},swing:function(G,H,E,F){return((-Math.cos(G*Math.PI)/2)+0.5)*F+E}},timers:[],fx:function(F,E,G){this.options=E;this.elem=F;this.prop=G;if(!E.orig){E.orig={}}}});o.fx.prototype={update:function(){if(this.options.step){this.options.step.call(this.elem,this.now,this)}(o.fx.step[this.prop]||o.fx.step._default)(this);if((this.prop=="height"||this.prop=="width")&&this.elem.style){this.elem.style.display="block"}},cur:function(F){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null)){return this.elem[this.prop]}var E=parseFloat(o.css(this.elem,this.prop,F));return E&&E>-10000?E:parseFloat(o.curCSS(this.elem,this.prop))||0},custom:function(I,H,G){this.startTime=e();this.start=I;this.end=H;this.unit=G||this.unit||"px";this.now=this.start;this.pos=this.state=0;var E=this;function F(J){return E.step(J)}F.elem=this.elem;if(F()&&o.timers.push(F)&&!n){n=setInterval(function(){var K=o.timers;for(var J=0;J&lt;K.length;J++){if(!K[J]()){K.splice(J--,1)}}if(!K.length){clearInterval(n);n=g}},13)}},show:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.show=true;this.custom(this.prop=="width"||this.prop=="height"?1:0,this.cur());o(this.elem).show()},hide:function(){this.options.orig[this.prop]=o.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(H){var G=e();if(H||G>=this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var E=true;for(var F in this.options.curAnim){if(this.options.curAnim[F]!==true){E=false}}if(E){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(o.css(this.elem,"display")=="none"){this.elem.style.display="block"}}if(this.options.hide){o(this.elem).hide()}if(this.options.hide||this.options.show){for(var I in this.options.curAnim){o.attr(this.elem.style,I,this.options.orig[I])}}this.options.complete.call(this.elem)}return false}else{var J=G-this.startTime;this.state=J/this.options.duration;this.pos=o.easing[this.options.easing||(o.easing.swing?"swing":"linear")](this.state,J,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update()}return true}};o.extend(o.fx,{speeds:{slow:600,fast:200,_default:400},step:{opacity:function(E){o.attr(E.elem.style,"opacity",E.now)},_default:function(E){if(E.elem.style&&E.elem.style[E.prop]!=null){E.elem.style[E.prop]=E.now+E.unit}else{E.elem[E.prop]=E.now}}}});if(document.documentElement.getBoundingClientRect){o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}var G=this[0].getBoundingClientRect(),J=this[0].ownerDocument,F=J.body,E=J.documentElement,L=E.clientTop||F.clientTop||0,K=E.clientLeft||F.clientLeft||0,I=G.top+(self.pageYOffset||o.boxModel&&E.scrollTop||F.scrollTop)-L,H=G.left+(self.pageXOffset||o.boxModel&&E.scrollLeft||F.scrollLeft)-K;return{top:I,left:H}}}else{o.fn.offset=function(){if(!this[0]){return{top:0,left:0}}if(this[0]===this[0].ownerDocument.body){return o.offset.bodyOffset(this[0])}o.offset.initialized||o.offset.initialize();var J=this[0],G=J.offsetParent,F=J,O=J.ownerDocument,M,H=O.documentElement,K=O.body,L=O.defaultView,E=L.getComputedStyle(J,null),N=J.offsetTop,I=J.offsetLeft;while((J=J.parentNode)&&J!==K&&J!==H){M=L.getComputedStyle(J,null);N-=J.scrollTop,I-=J.scrollLeft;if(J===G){N+=J.offsetTop,I+=J.offsetLeft;if(o.offset.doesNotAddBorder&&!(o.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(J.tagName))){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}F=G,G=J.offsetParent}if(o.offset.subtractsBorderForOverflowNotVisible&&M.overflow!=="visible"){N+=parseInt(M.borderTopWidth,10)||0,I+=parseInt(M.borderLeftWidth,10)||0}E=M}if(E.position==="relative"||E.position==="static"){N+=K.offsetTop,I+=K.offsetLeft}if(E.position==="fixed"){N+=Math.max(H.scrollTop,K.scrollTop),I+=Math.max(H.scrollLeft,K.scrollLeft)}return{top:N,left:I}}}o.offset={initialize:function(){if(this.initialized){return}var L=document.body,F=document.createElement("div"),H,G,N,I,M,E,J=L.style.marginTop,K='&lt;div style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;">&lt;div>&lt;/div>&lt;/div>&lt;table style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;" cellpadding="0" cellspacing="0">&lt;tr>&lt;td>&lt;/td>&lt;/tr>&lt;/table>';M={position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"};for(E in M){F.style[E]=M[E]}F.innerHTML=K;L.insertBefore(F,L.firstChild);H=F.firstChild,G=H.firstChild,I=H.nextSibling.firstChild.firstChild;this.doesNotAddBorder=(G.offsetTop!==5);this.doesAddBorderForTableAndCells=(I.offsetTop===5);H.style.overflow="hidden",H.style.position="relative";this.subtractsBorderForOverflowNotVisible=(G.offsetTop===-5);L.style.marginTop="1px";this.doesNotIncludeMarginInBodyOffset=(L.offsetTop===0);L.style.marginTop=J;L.removeChild(F);this.initialized=true},bodyOffset:function(E){o.offset.initialized||o.offset.initialize();var G=E.offsetTop,F=E.offsetLeft;if(o.offset.doesNotIncludeMarginInBodyOffset){G+=parseInt(o.curCSS(E,"marginTop",true),10)||0,F+=parseInt(o.curCSS(E,"marginLeft",true),10)||0}return{top:G,left:F}}};o.fn.extend({position:function(){var I=0,H=0,F;if(this[0]){var G=this.offsetParent(),J=this.offset(),E=/^body|html$/i.test(G[0].tagName)?{top:0,left:0}:G.offset();J.top-=j(this,"marginTop");J.left-=j(this,"marginLeft");E.top+=j(G,"borderTopWidth");E.left+=j(G,"borderLeftWidth");F={top:J.top-E.top,left:J.left-E.left}}return F},offsetParent:function(){var E=this[0].offsetParent||document.body;while(E&&(!/^body|html$/i.test(E.tagName)&&o.css(E,"position")=="static")){E=E.offsetParent}return o(E)}});o.each(["Left","Top"],function(F,E){var G="scroll"+E;o.fn[G]=function(H){if(!this[0]){return null}return H!==g?this.each(function(){this==l||this==document?l.scrollTo(!F?H:o(l).scrollLeft(),F?H:o(l).scrollTop()):this[G]=H}):this[0]==l||this[0]==document?self[F?"pageYOffset":"pageXOffset"]||o.boxModel&&document.documentElement[G]||document.body[G]:this[0][G]}});o.each(["Height","Width"],function(I,G){var E=I?"Left":"Top",H=I?"Right":"Bottom",F=G.toLowerCase();o.fn["inner"+G]=function(){return this[0]?o.css(this[0],F,false,"padding"):null};o.fn["outer"+G]=function(K){return this[0]?o.css(this[0],F,false,K?"margin":"border"):null};var J=G.toLowerCase();o.fn[J]=function(K){return this[0]==l?document.compatMode=="CSS1Compat"&&document.documentElement["client"+G]||document.body["client"+G]:this[0]==document?Math.max(document.documentElement["client"+G],document.body["scroll"+G],document.documentElement["scroll"+G],document.body["offset"+G],document.documentElement["offset"+G]):K===g?(this.length?o.css(this[0],J):null):this.css(J,typeof K==="string"?K:K+"px")}})})();
-\ No newline at end of file
-diff --git a/diff/content/template.html b/diff/content/template.html
-new file mode 100644
-index 0000000..a863760
---- /dev/null
-+++ b/diff/content/template.html
-@@ -0,0 +1,20 @@
-+&lt;html>
-+&lt;head>
-+	&lt;link rel="stylesheet" href="content/diff.css" type="text/css" media="screen" charset="utf-8">
-+	&lt;script src="content/jquery.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="content/gity.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script type="text/javascript" charset="utf-8">
-+		$(document).ready(startDiff);
-+	&lt;/script>
-+&lt;/head>
-+&lt;body>
-+	&lt;textarea id="diff" class="difftextarea">
-+{content}
-+	&lt;/textarea>
-+	&lt;pre>&lt;code id='updateddiff'>&lt;/code>&lt;/pre>
-+&lt;/body>
-+&lt;!--
-+/**
-+modified on nov 16 2009.
-+**/
-+-->
-diff --git a/diff/license b/diff/license
-new file mode 100644
-index 0000000..e960991
---- /dev/null
-+++ b/diff/license
-@@ -0,0 +1,348 @@
-+***********************************************************************************************************
-+This license applies ONLY to the "diff" folder that's included in gity (Gity.app/Contents/Resources/diff/*)
-+***********************************************************************************************************
-+
-+Please note that this project is currently licensed under the GPL version 2,
-+not version 2 or later.
-+----------------------------------------
-+
-+		    GNU GENERAL PUBLIC LICENSE
-+		       Version 2, June 1991
-+
-+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.
-+                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-+ Everyone is permitted to copy and distribute verbatim copies
-+ of this license document, but changing it is not allowed.
-+
-+			    Preamble
-+
-+  The licenses for most software are designed to take away your
-+freedom to share and change it.  By contrast, the GNU General Public
-+License is intended to guarantee your freedom to share and change free
-+software--to make sure the software is free for all its users.  This
-+General Public License applies to most of the Free Software
-+Foundation's software and to any other program whose authors commit to
-+using it.  (Some other Free Software Foundation software is covered by
-+the GNU Library General Public License instead.)  You can apply it to
-+your programs, too.
-+
-+  When we speak of free software, we are referring to freedom, not
-+price.  Our General Public Licenses are designed to make sure that you
-+have the freedom to distribute copies of free software (and charge for
-+this service if you wish), that you receive source code or can get it
-+if you want it, that you can change the software or use pieces of it
-+in new free programs; and that you know you can do these things.
-+
-+  To protect your rights, we need to make restrictions that forbid
-+anyone to deny you these rights or to ask you to surrender the rights.
-+These restrictions translate to certain responsibilities for you if you
-+distribute copies of the software, or if you modify it.
-+
-+  For example, if you distribute copies of such a program, whether
-+gratis or for a fee, you must give the recipients all the rights that
-+you have.  You must make sure that they, too, receive or can get the
-+source code.  And you must show them these terms so they know their
-+rights.
-+
-+  We protect your rights with two steps: (1) copyright the software, and
-+(2) offer you this license which gives you legal permission to copy,
-+distribute and/or modify the software.
-+
-+  Also, for each author's protection and ours, we want to make certain
-+that everyone understands that there is no warranty for this free
-+software.  If the software is modified by someone else and passed on, we
-+want its recipients to know that what they have is not the original, so
-+that any problems introduced by others will not reflect on the original
-+authors' reputations.
-+
-+  Finally, any free program is threatened constantly by software
-+patents.  We wish to avoid the danger that redistributors of a free
-+program will individually obtain patent licenses, in effect making the
-+program proprietary.  To prevent this, we have made it clear that any
-+patent must be licensed for everyone's free use or not licensed at all.
-+
-+  The precise terms and conditions for copying, distribution and
-+modification follow.
-+
-+		    GNU GENERAL PUBLIC LICENSE
-+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
-+
-+  0. This License applies to any program or other work which contains
-+a notice placed by the copyright holder saying it may be distributed
-+under the terms of this General Public License.  The "Program", below,
-+refers to any such program or work, and a "work based on the Program"
-+means either the Program or any derivative work under copyright law:
-+that is to say, a work containing the Program or a portion of it,
-+either verbatim or with modifications and/or translated into another
-+language.  (Hereinafter, translation is included without limitation in
-+the term "modification".)  Each licensee is addressed as "you".
-+
-+Activities other than copying, distribution and modification are not
-+covered by this License; they are outside its scope.  The act of
-+running the Program is not restricted, and the output from the Program
-+is covered only if its contents constitute a work based on the
-+Program (independent of having been made by running the Program).
-+Whether that is true depends on what the Program does.
-+
-+  1. You may copy and distribute verbatim copies of the Program's
-+source code as you receive it, in any medium, provided that you
-+conspicuously and appropriately publish on each copy an appropriate
-+copyright notice and disclaimer of warranty; keep intact all the
-+notices that refer to this License and to the absence of any warranty;
-+and give any other recipients of the Program a copy of this License
-+along with the Program.
-+
-+You may charge a fee for the physical act of transferring a copy, and
-+you may at your option offer warranty protection in exchange for a fee.
-+
-+  2. You may modify your copy or copies of the Program or any portion
-+of it, thus forming a work based on the Program, and copy and
-+distribute such modifications or work under the terms of Section 1
-+above, provided that you also meet all of these conditions:
-+
-+    a) You must cause the modified files to carry prominent notices
-+    stating that you changed the files and the date of any change.
-+
-+    b) You must cause any work that you distribute or publish, that in
-+    whole or in part contains or is derived from the Program or any
-+    part thereof, to be licensed as a whole at no charge to all third
-+    parties under the terms of this License.
-+
-+    c) If the modified program normally reads commands interactively
-+    when run, you must cause it, when started running for such
-+    interactive use in the most ordinary way, to print or display an
-+    announcement including an appropriate copyright notice and a
-+    notice that there is no warranty (or else, saying that you provide
-+    a warranty) and that users may redistribute the program under
-+    these conditions, and telling the user how to view a copy of this
-+    License.  (Exception: if the Program itself is interactive but
-+    does not normally print such an announcement, your work based on
-+    the Program is not required to print an announcement.)
-+
-+These requirements apply to the modified work as a whole.  If
-+identifiable sections of that work are not derived from the Program,
-+and can be reasonably considered independent and separate works in
-+themselves, then this License, and its terms, do not apply to those
-+sections when you distribute them as separate works.  But when you
-+distribute the same sections as part of a whole which is a work based
-+on the Program, the distribution of the whole must be on the terms of
-+this License, whose permissions for other licensees extend to the
-+entire whole, and thus to each and every part regardless of who wrote it.
-+
-+Thus, it is not the intent of this section to claim rights or contest
-+your rights to work written entirely by you; rather, the intent is to
-+exercise the right to control the distribution of derivative or
-+collective works based on the Program.
-+
-+In addition, mere aggregation of another work not based on the Program
-+with the Program (or with a work based on the Program) on a volume of
-+a storage or distribution medium does not bring the other work under
-+the scope of this License.
-+
-+  3. You may copy and distribute the Program (or a work based on it,
-+under Section 2) in object code or executable form under the terms of
-+Sections 1 and 2 above provided that you also do one of the following:
-+
-+    a) Accompany it with the complete corresponding machine-readable
-+    source code, which must be distributed under the terms of Sections
-+    1 and 2 above on a medium customarily used for software interchange; or,
-+
-+    b) Accompany it with a written offer, valid for at least three
-+    years, to give any third party, for a charge no more than your
-+    cost of physically performing source distribution, a complete
-+    machine-readable copy of the corresponding source code, to be
-+    distributed under the terms of Sections 1 and 2 above on a medium
-+    customarily used for software interchange; or,
-+
-+    c) Accompany it with the information you received as to the offer
-+    to distribute corresponding source code.  (This alternative is
-+    allowed only for noncommercial distribution and only if you
-+    received the program in object code or executable form with such
-+    an offer, in accord with Subsection b above.)
-+
-+The source code for a work means the preferred form of the work for
-+making modifications to it.  For an executable work, complete source
-+code means all the source code for all modules it contains, plus any
-+associated interface definition files, plus the scripts used to
-+control compilation and installation of the executable.  However, as a
-+special exception, the source code distributed need not include
-+anything that is normally distributed (in either source or binary
-+form) with the major components (compiler, kernel, and so on) of the
-+operating system on which the executable runs, unless that component
-+itself accompanies the executable.
-+
-+If distribution of executable or object code is made by offering
-+access to copy from a designated place, then offering equivalent
-+access to copy the source code from the same place counts as
-+distribution of the source code, even though third parties are not
-+compelled to copy the source along with the object code.
-+
-+  4. You may not copy, modify, sublicense, or distribute the Program
-+except as expressly provided under this License.  Any attempt
-+otherwise to copy, modify, sublicense or distribute the Program is
-+void, and will automatically terminate your rights under this License.
-+However, parties who have received copies, or rights, from you under
-+this License will not have their licenses terminated so long as such
-+parties remain in full compliance.
-+
-+  5. You are not required to accept this License, since you have not
-+signed it.  However, nothing else grants you permission to modify or
-+distribute the Program or its derivative works.  These actions are
-+prohibited by law if you do not accept this License.  Therefore, by
-+modifying or distributing the Program (or any work based on the
-+Program), you indicate your acceptance of this License to do so, and
-+all its terms and conditions for copying, distributing or modifying
-+the Program or works based on it.
-+
-+  6. Each time you redistribute the Program (or any work based on the
-+Program), the recipient automatically receives a license from the
-+original licensor to copy, distribute or modify the Program subject to
-+these terms and conditions.  You may not impose any further
-+restrictions on the recipients' exercise of the rights granted herein.
-+You are not responsible for enforcing compliance by third parties to
-+this License.
-+
-+  7. If, as a consequence of a court judgment or allegation of patent
-+infringement or for any other reason (not limited to patent issues),
-+conditions are imposed on you (whether by court order, agreement or
-+otherwise) that contradict the conditions of this License, they do not
-+excuse you from the conditions of this License.  If you cannot
-+distribute so as to satisfy simultaneously your obligations under this
-+License and any other pertinent obligations, then as a consequence you
-+may not distribute the Program at all.  For example, if a patent
-+license would not permit royalty-free redistribution of the Program by
-+all those who receive copies directly or indirectly through you, then
-+the only way you could satisfy both it and this License would be to
-+refrain entirely from distribution of the Program.
-+
-+If any portion of this section is held invalid or unenforceable under
-+any particular circumstance, the balance of the section is intended to
-+apply and the section as a whole is intended to apply in other
-+circumstances.
-+
-+It is not the purpose of this section to induce you to infringe any
-+patents or other property right claims or to contest validity of any
-+such claims; this section has the sole purpose of protecting the
-+integrity of the free software distribution system, which is
-+implemented by public license practices.  Many people have made
-+generous contributions to the wide range of software distributed
-+through that system in reliance on consistent application of that
-+system; it is up to the author/donor to decide if he or she is willing
-+to distribute software through any other system and a licensee cannot
-+impose that choice.
-+
-+This section is intended to make thoroughly clear what is believed to
-+be a consequence of the rest of this License.
-+
-+  8. If the distribution and/or use of the Program is restricted in
-+certain countries either by patents or by copyrighted interfaces, the
-+original copyright holder who places the Program under this License
-+may add an explicit geographical distribution limitation excluding
-+those countries, so that distribution is permitted only in or among
-+countries not thus excluded.  In such case, this License incorporates
-+the limitation as if written in the body of this License.
-+
-+  9. The Free Software Foundation may publish revised and/or new versions
-+of the General Public License from time to time.  Such new versions will
-+be similar in spirit to the present version, but may differ in detail to
-+address new problems or concerns.
-+
-+Each version is given a distinguishing version number.  If the Program
-+specifies a version number of this License which applies to it and "any
-+later version", you have the option of following the terms and conditions
-+either of that version or of any later version published by the Free
-+Software Foundation.  If the Program does not specify a version number of
-+this License, you may choose any version ever published by the Free Software
-+Foundation.
-+
-+  10. If you wish to incorporate parts of the Program into other free
-+programs whose distribution conditions are different, write to the author
-+to ask for permission.  For software which is copyrighted by the Free
-+Software Foundation, write to the Free Software Foundation; we sometimes
-+make exceptions for this.  Our decision will be guided by the two goals
-+of preserving the free status of all derivatives of our free software and
-+of promoting the sharing and reuse of software generally.
-+
-+			    NO WARRANTY
-+
-+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
-+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
-+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
-+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
-+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
-+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
-+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
-+REPAIR OR CORRECTION.
-+
-+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
-+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
-+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
-+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
-+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
-+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
-+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
-+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
-+POSSIBILITY OF SUCH DAMAGES.
-+
-+		     END OF TERMS AND CONDITIONS
-+
-+	    How to Apply These Terms to Your New Programs
-+
-+  If you develop a new program, and you want it to be of the greatest
-+possible use to the public, the best way to achieve this is to make it
-+free software which everyone can redistribute and change under these terms.
-+
-+  To do so, attach the following notices to the program.  It is safest
-+to attach them to the start of each source file to most effectively
-+convey the exclusion of warranty; and each file should have at least
-+the "copyright" line and a pointer to where the full notice is found.
-+
-+    &lt;one line to give the program's name and a brief idea of what it does.>
-+    Copyright (C) &lt;year>  &lt;name of author>
-+
-+    This program is free software; you can redistribute it and/or modify
-+    it under the terms of the GNU General Public License as published by
-+    the Free Software Foundation; either version 2 of the License, or
-+    (at your option) any later version.
-+
-+    This program is distributed in the hope that it will be useful,
-+    but WITHOUT ANY WARRANTY; without even the implied warranty of
-+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-+    GNU General Public License for more details.
-+
-+    You should have received a copy of the GNU General Public License
-+    along with this program; if not, write to the Free Software
-+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-+
-+
-+Also add information on how to contact you by electronic and paper mail.
-+
-+If the program is interactive, make it output a short notice like this
-+when it starts in an interactive mode:
-+
-+    Gnomovision version 69, Copyright (C) year name of author
-+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
-+    This is free software, and you are welcome to redistribute it
-+    under certain conditions; type `show c' for details.
-+
-+The hypothetical commands `show w' and `show c' should show the appropriate
-+parts of the General Public License.  Of course, the commands you use may
-+be called something other than `show w' and `show c'; they could even be
-+mouse-clicks or menu items--whatever suits your program.
-+
-+You should also get your employer (if you work as a programmer) or your
-+school, if any, to sign a "copyright disclaimer" for the program, if
-+necessary.  Here is a sample; alter the names:
-+
-+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
-+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
-+
-+  &lt;signature of Ty Coon>, 1 April 1989
-+  Ty Coon, President of Vice
-+
-+This General Public License does not permit incorporating your program into
-+proprietary programs.  If your program is a subroutine library, you may
-+consider it more useful to permit linking proprietary applications with the
-+library.  If this is what you want to do, use the GNU Library General
-+Public License instead of this License.
-diff --git a/diff/stagevshead.html b/diff/stagevshead.html
-new file mode 100644
-index 0000000..e69de29
-diff --git a/diff/tests/test.html b/diff/tests/test.html
-new file mode 100755
-index 0000000..abb36dc
---- /dev/null
-+++ b/diff/tests/test.html
-@@ -0,0 +1,862 @@
-+&lt;html>
-+&lt;head>
-+	&lt;title>Details for commit&lt;/title>
-+	&lt;link rel="stylesheet" href="commits.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;link rel="stylesheet" href="diff_style.css" type="text/css" media="screen" title="no title" charset="utf-8">
-+	&lt;!--&lt;script src="prototype.js" type="text/javascript" charset="utf-8">&lt;/script>-->
-+	&lt;script src="jquery.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="diffHighlighter.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script type="text/javascript" charset="utf-8">
-+
-+	var doeHet = function() {
-+		document.getElementById("details").innerHTML = document.getElementById("diff").value.replace(/&lt;/g, "&lt;");
-+		highlightDiffs();
-+	}
-+	&lt;/script>
-+&lt;/head>
-+&lt;body style="padding: 0px; border: 0px" onLoad="doeHet()">
-+	&lt;textarea style='display:none' id="diff" rows="8" cols="40">
-+diff --git a/English.lproj/RepositoryWindow.xib b/English.lproj/RepositoryWindow.xib
-+index 6cd49fa..7474752 100644
-+--- a/English.lproj/RepositoryWindow.xib
-++++ b/English.lproj/RepositoryWindow.xib
-+@@ -538,55 +538,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes>
-+ 				&lt;string key="NSMaxSize"&gt;{3.40282e+38, 3.40282e+38}&lt;/string&gt;
-+ 				&lt;string key="NSFrameAutosaveName"&gt;GitX&lt;/string&gt;
-+ 			&lt;/object&gt;
-+-			&lt;object class="NSToolbarItem" id="562497830"&gt;
-+-				&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-+-					&lt;characters key="NS.bytes"&gt;B6D80172-2D01-49BD-8E3A-2F1D9F672390&lt;/characters&gt;
-+-				&lt;/object&gt;
-+-				&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-+-				&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-+-				&lt;nil key="NSToolbarItemToolTip"/&gt;
-+-				&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="469221894"&gt;
-+-					&lt;nil key="NSNextResponder"/&gt;
-+-					&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-+-					&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-+-					&lt;int key="NSTag"&gt;3&lt;/int&gt;
-+-					&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-+-					&lt;object class="NSSegmentedCell" key="NSCell" id="1071657361"&gt;
-+-						&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-+-						&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-+-						&lt;object class="NSFont" key="NSSupport"&gt;
-+-							&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-+-							&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-+-							&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="NSControlView" ref="469221894"/&gt;
-+-						&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;object class="NSSegmentItem"&gt;
-+-								&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-+-								&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-+-							&lt;/object&gt;
-+-							&lt;object class="NSSegmentItem"&gt;
-+-								&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-+-								&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-+-								&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-+-							&lt;/object&gt;
-+-						&lt;/object&gt;
-+-						&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-+-						&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-+-					&lt;/object&gt;
-+-				&lt;/object&gt;
-+-				&lt;nil key="NSToolbarItemImage"/&gt;
-+-				&lt;nil key="NSToolbarItemTarget"/&gt;
-+-				&lt;nil key="NSToolbarItemAction"/&gt;
-+-				&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-+-				&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-+-				&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-+-				&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-+-				&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-+-				&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-+-				&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-+-			&lt;/object&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBObjectContainer" key="IBDocument.Objects"&gt;
-+ 			&lt;object class="NSMutableArray" key="connectionRecords"&gt;
-+@@ -607,30 +558,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;int key="connectionID"&gt;292&lt;/int&gt;
-+ 				&lt;/object&gt;
-+-				&lt;object class="IBConnectionRecord"&gt;
-+-					&lt;object class="IBBindingConnection" key="connection"&gt;
-+-						&lt;string key="label"&gt;selectedIndex: selectedViewIndex&lt;/string&gt;
-+-						&lt;reference key="source" ref="469221894"/&gt;
-+-						&lt;reference key="destination" ref="1001"/&gt;
-+-						&lt;object class="NSNibBindingConnector" key="connector"&gt;
-+-							&lt;reference key="NSSource" ref="469221894"/&gt;
-+-							&lt;reference key="NSDestination" ref="1001"/&gt;
-+-							&lt;string key="NSLabel"&gt;selectedIndex: selectedViewIndex&lt;/string&gt;
-+-							&lt;string key="NSBinding"&gt;selectedIndex&lt;/string&gt;
-+-							&lt;string key="NSKeyPath"&gt;selectedViewIndex&lt;/string&gt;
-+-							&lt;int key="NSNibBindingConnectorVersion"&gt;2&lt;/int&gt;
-+-						&lt;/object&gt;
-+-					&lt;/object&gt;
-+-					&lt;int key="connectionID"&gt;329&lt;/int&gt;
-+-				&lt;/object&gt;
-+-				&lt;object class="IBConnectionRecord"&gt;
-+-					&lt;object class="IBOutletConnection" key="connection"&gt;
-+-						&lt;string key="label"&gt;viewSelector&lt;/string&gt;
-+-						&lt;reference key="source" ref="1001"/&gt;
-+-						&lt;reference key="destination" ref="562497830"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;int key="connectionID"&gt;350&lt;/int&gt;
-+-				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="IBMutableOrderedSet" key="objectRecords"&gt;
-+ 				&lt;object class="NSArray" key="orderedObjects"&gt;
-+@@ -681,29 +608,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 						&lt;reference key="parent" ref="491121796"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;324&lt;/int&gt;
-+-						&lt;reference key="object" ref="562497830"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="469221894"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="1002"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;325&lt;/int&gt;
-+-						&lt;reference key="object" ref="469221894"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="1071657361"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="562497830"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;326&lt;/int&gt;
-+-						&lt;reference key="object" ref="1071657361"/&gt;
-+-						&lt;reference key="parent" ref="469221894"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;342&lt;/int&gt;
-+ 						&lt;reference key="object" ref="283658631"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -772,8 +676,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;3.windowTemplate.hasMinSize&lt;/string&gt;
-+ 					&lt;string&gt;3.windowTemplate.maxSize&lt;/string&gt;
-+ 					&lt;string&gt;3.windowTemplate.minSize&lt;/string&gt;
-+-					&lt;string&gt;325.IBPluginDependency&lt;/string&gt;
-+-					&lt;string&gt;326.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;342.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;343.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;344.IBPluginDependency&lt;/string&gt;
-+@@ -790,9 +692,9 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+-					&lt;string&gt;{{312, 315}, {850, 418}}&lt;/string&gt;
-++					&lt;string&gt;{{1047, -144}, {850, 418}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;{{312, 315}, {850, 418}}&lt;/string&gt;
-++					&lt;string&gt;{{1047, -144}, {850, 418}}&lt;/string&gt;
-+ 					&lt;integer value="1" id="9"/&gt;
-+ 					&lt;reference ref="9"/&gt;
-+ 					&lt;string&gt;{{15, 196}, {850, 418}}&lt;/string&gt;
-+@@ -809,8 +711,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;reference ref="9"/&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+diff --git a/PBGitCommitView.xib b/PBGitCommitView.xib
-+index 0260e41..007010b 100644
-+--- a/PBGitCommitView.xib
-++++ b/PBGitCommitView.xib
-+@@ -898,6 +898,120 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 			&lt;object class="NSCustomObject" id="1007648253"&gt;
-+ 				&lt;string key="NSClassName"&gt;PBWebChangesController&lt;/string&gt;
-+ 			&lt;/object&gt;
-++			&lt;object class="NSToolbar" id="570289088"&gt;
-++				&lt;object class="NSMutableString" key="NSToolbarIdentifier"&gt;
-++					&lt;characters key="NS.bytes"&gt;F94591D2-A188-4B08-A8B2-8C8CEC03CB14&lt;/characters&gt;
-++				&lt;/object&gt;
-++				&lt;nil key="NSToolbarDelegate"/&gt;
-++				&lt;bool key="NSToolbarPrefersToBeShown"&gt;YES&lt;/bool&gt;
-++				&lt;bool key="NSToolbarShowsBaselineSeparator"&gt;YES&lt;/bool&gt;
-++				&lt;bool key="NSToolbarAllowsUserCustomization"&gt;NO&lt;/bool&gt;
-++				&lt;bool key="NSToolbarAutosavesConfiguration"&gt;NO&lt;/bool&gt;
-++				&lt;int key="NSToolbarDisplayMode"&gt;1&lt;/int&gt;
-++				&lt;int key="NSToolbarSizeMode"&gt;1&lt;/int&gt;
-++				&lt;object class="NSMutableDictionary" key="NSToolbarIBIdentifiedItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;object class="NSMutableArray" key="dict.sortedKeys"&gt;
-++						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;string&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/string&gt;
-++						&lt;string&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="NSMutableArray" key="dict.values"&gt;
-++						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;object class="NSToolbarItem" id="271300712"&gt;
-++							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-++								&lt;characters key="NS.bytes"&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/characters&gt;
-++							&lt;/object&gt;
-++							&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="20026036"&gt;
-++								&lt;nil key="NSNextResponder"/&gt;
-++								&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-++								&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-++								&lt;int key="NSTag"&gt;3&lt;/int&gt;
-++								&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-++								&lt;object class="NSSegmentedCell" key="NSCell" id="796615469"&gt;
-++									&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-++									&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-++									&lt;reference key="NSSupport" ref="554612341"/&gt;
-++									&lt;reference key="NSControlView" ref="20026036"/&gt;
-++									&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-++										&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-++											&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++									&lt;/object&gt;
-++									&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-++									&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++						&lt;/object&gt;
-++						&lt;object class="NSToolbarSeparatorItem" id="354340151"&gt;
-++							&lt;string key="NSToolbarItemIdentifier"&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++							&lt;string key="NSToolbarItemLabel"/&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;Separator&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;nil key="NSToolbarItemView"/&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{12, 5}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{12, 1000}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;-1&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++							&lt;object class="NSMenuItem" key="NSToolbarItemMenuFormRepresentation"&gt;
-++								&lt;bool key="NSIsDisabled"&gt;YES&lt;/bool&gt;
-++								&lt;bool key="NSIsSeparator"&gt;YES&lt;/bool&gt;
-++								&lt;string key="NSTitle"/&gt;
-++								&lt;string key="NSKeyEquiv"/&gt;
-++								&lt;int key="NSKeyEquivModMask"&gt;1048576&lt;/int&gt;
-++								&lt;int key="NSMnemonicLoc"&gt;2147483647&lt;/int&gt;
-++								&lt;object class="NSCustomResource" key="NSOnImage"&gt;
-++									&lt;string key="NSClassName"&gt;NSImage&lt;/string&gt;
-++									&lt;string key="NSResourceName"&gt;NSMenuCheckmark&lt;/string&gt;
-++								&lt;/object&gt;
-++								&lt;object class="NSCustomResource" key="NSMixedImage"&gt;
-++									&lt;string key="NSClassName"&gt;NSImage&lt;/string&gt;
-++									&lt;string key="NSResourceName"&gt;NSMenuMixedState&lt;/string&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++						&lt;/object&gt;
-++					&lt;/object&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSArray" key="NSToolbarIBAllowedItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="271300712"/&gt;
-++					&lt;reference ref="354340151"/&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSMutableArray" key="NSToolbarIBDefaultItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="271300712"/&gt;
-++					&lt;reference ref="354340151"/&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSMutableArray" key="NSToolbarIBSelectableItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++				&lt;/object&gt;
-++			&lt;/object&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBObjectContainer" key="IBDocument.Objects"&gt;
-+ 			&lt;object class="NSMutableArray" key="connectionRecords"&gt;
-+@@ -1126,6 +1240,14 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;int key="connectionID"&gt;224&lt;/int&gt;
-+ 				&lt;/object&gt;
-++				&lt;object class="IBConnectionRecord"&gt;
-++					&lt;object class="IBOutletConnection" key="connection"&gt;
-++						&lt;string key="label"&gt;viewToolbar&lt;/string&gt;
-++						&lt;reference key="source" ref="1001"/&gt;
-++						&lt;reference key="destination" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;int key="connectionID"&gt;241&lt;/int&gt;
-++				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="IBMutableOrderedSet" key="objectRecords"&gt;
-+ 				&lt;object class="NSArray" key="orderedObjects"&gt;
-+@@ -1419,6 +1541,45 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 						&lt;reference key="object" ref="221814497"/&gt;
-+ 						&lt;reference key="parent" ref="750704519"/&gt;
-+ 					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;225&lt;/int&gt;
-++						&lt;reference key="object" ref="570289088"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="271300712"/&gt;
-++							&lt;reference ref="354340151"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="1002"/&gt;
-++						&lt;string key="objectName"&gt;Commit Toolbar&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;226&lt;/int&gt;
-++						&lt;reference key="object" ref="271300712"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="20026036"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;227&lt;/int&gt;
-++						&lt;reference key="object" ref="354340151"/&gt;
-++						&lt;reference key="parent" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;239&lt;/int&gt;
-++						&lt;reference key="object" ref="20026036"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="796615469"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="271300712"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;240&lt;/int&gt;
-++						&lt;reference key="object" ref="796615469"/&gt;
-++						&lt;reference key="parent" ref="20026036"/&gt;
-++					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSMutableDictionary" key="flattenedProperties"&gt;
-+@@ -1446,6 +1607,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;string&gt;164.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;2.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;217.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.IBEditorWindowLastContentRect&lt;/string&gt;
-++					&lt;string&gt;225.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.editorWindowContentRectSynchronizationRect&lt;/string&gt;
-++					&lt;string&gt;227.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;239.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;240.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;42.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;45.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;46.IBPluginDependency&lt;/string&gt;
-+@@ -1482,6 +1649,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;{{341, 837}, {616, 169}}&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;{{132, 614}, {616, 0}}&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+@@ -1516,7 +1689,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;nil key="sourceID"/&gt;
-+-			&lt;int key="maxID"&gt;224&lt;/int&gt;
-++			&lt;int key="maxID"&gt;241&lt;/int&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBClassDescriber" key="IBDocument.Classes"&gt;
-+ 			&lt;object class="NSMutableArray" key="referencedPartialClassDescriptions"&gt;
-+diff --git a/PBGitHistoryView.xib b/PBGitHistoryView.xib
-+index e008bb9..4df97b3 100644
-+--- a/PBGitHistoryView.xib
-++++ b/PBGitHistoryView.xib
-+@@ -95,7 +95,7 @@
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSToolbar" id="65173285"&gt;
-+ 				&lt;object class="NSMutableString" key="NSToolbarIdentifier"&gt;
-+-					&lt;characters key="NS.bytes"&gt;B9F1B847-0DC3-4C13-A685-5F5A2D64BC93&lt;/characters&gt;
-++					&lt;characters key="NS.bytes"&gt;F94591D2-A188-4B08-A8B2-8C8CEC03CB14&lt;/characters&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;nil key="NSToolbarDelegate"/&gt;
-+ 				&lt;bool key="NSToolbarPrefersToBeShown"&gt;YES&lt;/bool&gt;
-+@@ -108,12 +108,63 @@
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+ 					&lt;object class="NSMutableArray" key="dict.sortedKeys"&gt;
-+ 						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;string&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/string&gt;
-+ 						&lt;string&gt;7FFB691C-2D2F-49A9-997F-AE1AE8BFF3F1&lt;/string&gt;
-+ 						&lt;string&gt;99C2C9EB-AE16-42A9-BE52-46CE903E9AF9&lt;/string&gt;
-+ 						&lt;string&gt;NSToolbarFlexibleSpaceItem&lt;/string&gt;
-++						&lt;string&gt;NSToolbarSeparatorItem&lt;/string&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="NSMutableArray" key="dict.values"&gt;
-+ 						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;object class="NSToolbarItem" id="215578734"&gt;
-++							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-++								&lt;characters key="NS.bytes"&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/characters&gt;
-++							&lt;/object&gt;
-++							&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="764711234"&gt;
-++								&lt;nil key="NSNextResponder"/&gt;
-++								&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-++								&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-++								&lt;int key="NSTag"&gt;3&lt;/int&gt;
-++								&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-++								&lt;object class="NSSegmentedCell" key="NSCell" id="266464607"&gt;
-++									&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-++									&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-++									&lt;object class="NSFont" key="NSSupport" id="924107556"&gt;
-++										&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-++										&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-++										&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-++									&lt;/object&gt;
-++									&lt;reference key="NSControlView" ref="764711234"/&gt;
-++									&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-++										&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-++											&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++									&lt;/object&gt;
-++									&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-++									&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++						&lt;/object&gt;
-+ 						&lt;object class="NSToolbarItem" id="479447135"&gt;
-+ 							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-+ 								&lt;characters key="NS.bytes"&gt;7FFB691C-2D2F-49A9-997F-AE1AE8BFF3F1&lt;/characters&gt;
-+@@ -131,11 +182,7 @@
-+ 								&lt;object class="NSSearchFieldCell" key="NSCell" id="449521666"&gt;
-+ 									&lt;int key="NSCellFlags"&gt;343014976&lt;/int&gt;
-+ 									&lt;int key="NSCellFlags2"&gt;268436480&lt;/int&gt;
-+-									&lt;object class="NSFont" key="NSSupport" id="924107556"&gt;
-+-										&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-+-										&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-+-										&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-+-									&lt;/object&gt;
-++									&lt;reference key="NSSupport" ref="924107556"/&gt;
-+ 									&lt;string key="NSPlaceholderString"&gt;Subject&lt;/string&gt;
-+ 									&lt;reference key="NSControlView" ref="845792858"/&gt;
-+ 									&lt;bool key="NSDrawsBackground"&gt;YES&lt;/bool&gt;
-+@@ -330,16 +377,47 @@
-+ 								&lt;reference key="NSMixedImage" ref="746375230"/&gt;
-+ 							&lt;/object&gt;
-+ 						&lt;/object&gt;
-++						&lt;object class="NSToolbarSeparatorItem" id="776753395"&gt;
-++							&lt;string key="NSToolbarItemIdentifier"&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++							&lt;string key="NSToolbarItemLabel"/&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;Separator&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;nil key="NSToolbarItemView"/&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{12, 5}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{12, 1000}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;-1&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++							&lt;object class="NSMenuItem" key="NSToolbarItemMenuFormRepresentation"&gt;
-++								&lt;bool key="NSIsDisabled"&gt;YES&lt;/bool&gt;
-++								&lt;bool key="NSIsSeparator"&gt;YES&lt;/bool&gt;
-++								&lt;string key="NSTitle"/&gt;
-++								&lt;string key="NSKeyEquiv"/&gt;
-++								&lt;int key="NSKeyEquivModMask"&gt;1048576&lt;/int&gt;
-++								&lt;int key="NSMnemonicLoc"&gt;2147483647&lt;/int&gt;
-++								&lt;reference key="NSOnImage" ref="908677745"/&gt;
-++								&lt;reference key="NSMixedImage" ref="746375230"/&gt;
-++							&lt;/object&gt;
-++						&lt;/object&gt;
-+ 					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;object class="NSArray" key="NSToolbarIBAllowedItems"&gt;
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="215578734"/&gt;
-++					&lt;reference ref="776753395"/&gt;
-+ 					&lt;reference ref="455812118"/&gt;
-+ 					&lt;reference ref="633367776"/&gt;
-+ 					&lt;reference ref="479447135"/&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;object class="NSMutableArray" key="NSToolbarIBDefaultItems"&gt;
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="215578734"/&gt;
-++					&lt;reference ref="776753395"/&gt;
-+ 					&lt;reference ref="455812118"/&gt;
-+ 					&lt;reference ref="633367776"/&gt;
-+ 					&lt;reference ref="479447135"/&gt;
-+@@ -2053,6 +2131,93 @@
-+ 						&lt;reference key="parent" ref="555671215"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;3&lt;/int&gt;
-++						&lt;reference key="object" ref="663765878"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="942510576"/&gt;
-++							&lt;reference ref="452331733"/&gt;
-++							&lt;reference ref="152625445"/&gt;
-++							&lt;reference ref="254268962"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="202620420"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;30&lt;/int&gt;
-++						&lt;reference key="object" ref="942510576"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;29&lt;/int&gt;
-++						&lt;reference key="object" ref="452331733"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;28&lt;/int&gt;
-++						&lt;reference key="object" ref="152625445"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;27&lt;/int&gt;
-++						&lt;reference key="object" ref="254268962"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="976830280"/&gt;
-++							&lt;reference ref="1025472344"/&gt;
-++							&lt;reference ref="792589327"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++						&lt;string key="objectName"&gt;Commit List&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;33&lt;/int&gt;
-++						&lt;reference key="object" ref="976830280"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="853819733"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;32&lt;/int&gt;
-++						&lt;reference key="object" ref="1025472344"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="977219207"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;31&lt;/int&gt;
-++						&lt;reference key="object" ref="792589327"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="746918365"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;36&lt;/int&gt;
-++						&lt;reference key="object" ref="746918365"/&gt;
-++						&lt;reference key="parent" ref="792589327"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;35&lt;/int&gt;
-++						&lt;reference key="object" ref="977219207"/&gt;
-++						&lt;reference key="parent" ref="1025472344"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;34&lt;/int&gt;
-++						&lt;reference key="object" ref="853819733"/&gt;
-++						&lt;reference key="parent" ref="976830280"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;190&lt;/int&gt;
-++						&lt;reference key="object" ref="886549521"/&gt;
-++						&lt;reference key="parent" ref="1002"/&gt;
-++						&lt;string key="objectName"&gt;Branches Controller&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;113&lt;/int&gt;
-+ 						&lt;reference key="object" ref="65173285"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -2060,6 +2225,8 @@
-+ 							&lt;reference ref="455812118"/&gt;
-+ 							&lt;reference ref="633367776"/&gt;
-+ 							&lt;reference ref="479447135"/&gt;
-++							&lt;reference ref="776753395"/&gt;
-++							&lt;reference ref="215578734"/&gt;
-+ 						&lt;/object&gt;
-+ 						&lt;reference key="parent" ref="1002"/&gt;
-+ 						&lt;string key="objectName"&gt;History Toolbar&lt;/string&gt;
-+@@ -2088,6 +2255,34 @@
-+ 						&lt;reference key="parent" ref="65173285"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;222&lt;/int&gt;
-++						&lt;reference key="object" ref="776753395"/&gt;
-++						&lt;reference key="parent" ref="65173285"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;223&lt;/int&gt;
-++						&lt;reference key="object" ref="215578734"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="764711234"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="65173285"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;224&lt;/int&gt;
-++						&lt;reference key="object" ref="764711234"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="266464607"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="215578734"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;225&lt;/int&gt;
-++						&lt;reference key="object" ref="266464607"/&gt;
-++						&lt;reference key="parent" ref="764711234"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;117&lt;/int&gt;
-+ 						&lt;reference key="object" ref="845792858"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -2145,93 +2340,6 @@
-+ 						&lt;reference key="object" ref="882172208"/&gt;
-+ 						&lt;reference key="parent" ref="604026377"/&gt;
-+ 					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;3&lt;/int&gt;
-+-						&lt;reference key="object" ref="663765878"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="942510576"/&gt;
-+-							&lt;reference ref="452331733"/&gt;
-+-							&lt;reference ref="152625445"/&gt;
-+-							&lt;reference ref="254268962"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="202620420"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;30&lt;/int&gt;
-+-						&lt;reference key="object" ref="942510576"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;29&lt;/int&gt;
-+-						&lt;reference key="object" ref="452331733"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;28&lt;/int&gt;
-+-						&lt;reference key="object" ref="152625445"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;27&lt;/int&gt;
-+-						&lt;reference key="object" ref="254268962"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="976830280"/&gt;
-+-							&lt;reference ref="1025472344"/&gt;
-+-							&lt;reference ref="792589327"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-						&lt;string key="objectName"&gt;Commit List&lt;/string&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;33&lt;/int&gt;
-+-						&lt;reference key="object" ref="976830280"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="853819733"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;32&lt;/int&gt;
-+-						&lt;reference key="object" ref="1025472344"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="977219207"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;31&lt;/int&gt;
-+-						&lt;reference key="object" ref="792589327"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="746918365"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;36&lt;/int&gt;
-+-						&lt;reference key="object" ref="746918365"/&gt;
-+-						&lt;reference key="parent" ref="792589327"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;35&lt;/int&gt;
-+-						&lt;reference key="object" ref="977219207"/&gt;
-+-						&lt;reference key="parent" ref="1025472344"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;34&lt;/int&gt;
-+-						&lt;reference key="object" ref="853819733"/&gt;
-+-						&lt;reference key="parent" ref="976830280"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;190&lt;/int&gt;
-+-						&lt;reference key="object" ref="886549521"/&gt;
-+-						&lt;reference key="parent" ref="1002"/&gt;
-+-						&lt;string key="objectName"&gt;Branches Controller&lt;/string&gt;
-+-					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSMutableDictionary" key="flattenedProperties"&gt;
-+@@ -2272,6 +2380,9 @@
-+ 					&lt;string&gt;2.ImportedFromIB2&lt;/string&gt;
-+ 					&lt;string&gt;21.IBAttributePlaceholdersKey&lt;/string&gt;
-+ 					&lt;string&gt;21.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;222.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;224.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;23.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;24.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;25.IBPluginDependency&lt;/string&gt;
-+@@ -2319,7 +2430,7 @@
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;{{244, 901}, {616, 0}}&lt;/string&gt;
-++					&lt;string&gt;{{341, 957}, {616, 0}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;{{132, 614}, {616, 0}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+@@ -2360,6 +2471,9 @@
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;PBCommitList&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;integer value="0" id="8"/&gt;
-+@@ -2425,7 +2539,7 @@
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;nil key="sourceID"/&gt;
-+-			&lt;int key="maxID"&gt;217&lt;/int&gt;
-++			&lt;int key="maxID"&gt;225&lt;/int&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBClassDescriber" key="IBDocument.Classes"&gt;
-+ 			&lt;object class="NSMutableArray" key="referencedPartialClassDescriptions"&gt;
-+diff --git a/PBGitWindowController.h b/PBGitWindowController.h
-+index accde05..d243a37 100644
-+--- a/PBGitWindowController.h
-++++ b/PBGitWindowController.h
-+@@ -14,8 +14,6 @@
-+ 	int selectedViewIndex;
-+ 	IBOutlet NSView* contentView;
-+ 	NSViewController* viewController;
-+-
-+-	IBOutlet NSToolbarItem *viewSelector;
-+ }
-+
-+ @property (assign) __weak PBGitRepository *repository;
-+diff --git a/PBGitWindowController.m b/PBGitWindowController.m
-+index db530c0..18c2393 100644
-+--- a/PBGitWindowController.m
-++++ b/PBGitWindowController.m
-+@@ -87,41 +87,11 @@
-+
-+ #pragma mark -
-+ #pragma mark Toolbar Delegates
-+-- (NSToolbarItem *) toolbar:(NSToolbar *)toolbar
-+-      itemForItemIdentifier:(NSString *)itemIdentifier
-+-  willBeInsertedIntoToolbar:(BOOL)flag
-+-{
-+-	if ([itemIdentifier isEqualToString:[viewSelector itemIdentifier]])
-+-		return viewSelector;
-+-
-+-	return nil;
-+-}
-+-
-+-- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)toolbar
-+-{
-+-	NSMutableArray *array = [NSMutableArray array];
-+-	for (NSToolbarItem *item in [toolbar items])
-+-		[array addObject:[item itemIdentifier]];
-+-	return array;
-+-}
-+-
-+-- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)toolbar
-+-{
-+-	NSMutableArray *array = [NSMutableArray array];
-+-	for (NSToolbarItem *item in [toolbar items])
-+-		[array addObject:[item itemIdentifier]];
-+-	return array;
-+-}
-+
-+ - (void) useToolbar:(NSToolbar *)toolbar
-+ {
-+-	[toolbar setDelegate:self];
-+-
-+-	[toolbar insertItemWithItemIdentifier:NSToolbarSeparatorItemIdentifier atIndex:0];
-+-	[toolbar insertItemWithItemIdentifier:[viewSelector itemIdentifier] atIndex:0];
-+-
-+-	NSSegmentedControl *viewSelect = (NSSegmentedControl *)[[[toolbar items] objectAtIndex:0] view];
-+-	[viewSelect bind:@"selectedIndex" toObject:self withKeyPath:@"selectedViewIndex" options:0];
-++	NSSegmentedControl *item = (NSSegmentedControl *)[[[toolbar items] objectAtIndex:0] view];
-++	[item bind:@"selectedIndex" toObject:self withKeyPath:@"selectedViewIndex" options:0];
-+
-+ 	[self.window setToolbar:toolbar];
-+ }
-+	&lt;/textarea>
-+	&lt;pre>&lt;code class="diffcode" id='details'>&lt;/code>&lt;/pre>
-+&lt;/body>
-diff --git a/diff/tests/test2.html b/diff/tests/test2.html
-new file mode 100644
-index 0000000..2133d56
---- /dev/null
-+++ b/diff/tests/test2.html
-@@ -0,0 +1,81 @@
-+&lt;html>
-+&lt;head>
-+	&lt;link rel="stylesheet" href="../content/diff.css" type="text/css" media="screen" charset="utf-8">
-+	&lt;script src="../content/jquery.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="../content/gity.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script type="text/javascript" charset="utf-8">
-+		$(document).ready(startDiff);
-+	&lt;/script>
-+&lt;/head>
-+&lt;body>
-+	&lt;textarea id="diff" class="difftextarea">
-+diff --git a/src/GTOperationsController.m b/src/GTOperationsController.m
-+index b27216b..2f07884 100644
-+--- a/src/GTOperationsController.m
-++++ b/src/GTOperationsController.m
-+@@ -740,7 +740,7 @@ static GTModalController * modals;
-+
-+ - (void) runSubmoduleSyncForSubmodule:(NSString *) _submodule {
-+ 	if(allCanceled || networkOpsCancelled) return;
-+-	[status showStatusIndicatorWithLabel:@"Syncing submodule, please wait"];
-++	[status showStatusIndicatorWithLabel:@"Synchronizing submodule, please wait"];
-+ 	GTOpSubmoduleSync * o = [[[GTOpSubmoduleSync alloc] initWithGD:gd andSubmodule:_submodule] autorelease];
-+ 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
-+ 	[o setCompletionBlock:^{
-+@@ -773,7 +773,7 @@ static GTModalController * modals;
-+
-+ - (void) runSubmoduleUpdateAll {
-+ 	if(allCanceled || networkOpsCancelled) return;
-+-	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-++	[status showStatusIndicatorWithLabel:@"Updating all submodules, please wait"];
-+ 	GTOpUpdateSubs * o = [[[GTOpUpdateSubs alloc] initWithGD:gd] autorelease];
-+ 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
-+ 	[o setCompletionBlock:^{
-+
-+diff --git a/versioning/_version b/versioning/_version
-+index bfb53fd..b38dd1f 100755
-+--- a/versioning/_version
-++++ b/versioning/_version
-+@@ -1,4 +1,4 @@
-+ 0
-+ 1
-+ 7
-+-2345
-+\ No newline at end of file
-++2347
-+\ No newline at end of file
-+
-+diff --git a/src/GTOperationsController.m b/src/GTOperationsController.m
-+index b27216b..2f07884 100644
-+--- a/src/GTOperationsController.m
-++++ b/src/GTOperationsController.m
-+@@ -740,7 +740,7 @@ static GTModalController * modals;
-+
-+ - (void) runSubmoduleSyncForSubmodule:(NSString *) _submodule {
-+ 	if(allCanceled || networkOpsCancelled) return;
-+-	[status showStatusIndicatorWithLabel:@"Syncing submodule, please wait"];
-++	[status showStatusIndicatorWithLabel:@"Synchronizing submodule, please wait"];
-+ 	GTOpSubmoduleSync * o = [[[GTOpSubmoduleSync alloc] initWithGD:gd andSubmodule:_submodule] autorelease];
-+ 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
-+ 	[o setCompletionBlock:^{
-+@@ -773,7 +773,7 @@ static GTModalController * modals;
-+
-+ - (void) runSubmoduleUpdateAll {
-+ 	if(allCanceled || networkOpsCancelled) return;
-+-	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-++	[status showStatusIndicatorWithLabel:@"Updating all submodules, please wait"];
-+ 	GTOpUpdateSubs * o = [[[GTOpUpdateSubs alloc] initWithGD:gd] autorelease];
-+ 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
-+ 	[o setCompletionBlock:^{
-+@@ -784,7 +784,7 @@ static GTModalController * modals;
-+
-+ - (void) runSubmoduleInitAll {
-+ 	if(allCanceled || networkOpsCancelled) return;
-+-	[status showStatusIndicatorWithLabel:@"Pulling submodule, please wait"];
-++	[status showStatusIndicatorWithLabel:@"Initializing all submodules, please wait"];
-+ 	GTOpInitializeSubs * o = [[[GTOpInitializeSubs alloc] initWithGD:gd] autorelease];
-+ 	NSOperationQueue * q = [self createCancelableQueueWithNetworkOperation:o];
-+ 	[o setCompletionBlock:^{
-+	&lt;/textarea>
-+	&lt;pre>&lt;code id='updateddiff'>&lt;/code>&lt;/pre>
-+&lt;/body>
-\ No newline at end of file
-diff --git a/diff/tests/test3.html b/diff/tests/test3.html
-new file mode 100644
-index 0000000..47fc312
---- /dev/null
-+++ b/diff/tests/test3.html
-@@ -0,0 +1,856 @@
-+&lt;html>
-+&lt;head>
-+	&lt;link rel="stylesheet" href="diff.css" type="text/css" media="screen" charset="utf-8">
-+	&lt;script src="jquery.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="gity.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script type="text/javascript" charset="utf-8">
-+		$(document).ready(startDiff);
-+	&lt;/script>
-+&lt;/head>
-+&lt;body>
-+	&lt;textarea id="diff" class="difftextarea">
-+diff --git a/English.lproj/RepositoryWindow.xib b/English.lproj/RepositoryWindow.xib
-+index 6cd49fa..7474752 100644
-+--- a/English.lproj/RepositoryWindow.xib
-++++ b/English.lproj/RepositoryWindow.xib
-+@@ -538,55 +538,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes>
-+ 				&lt;string key="NSMaxSize"&gt;{3.40282e+38, 3.40282e+38}&lt;/string&gt;
-+ 				&lt;string key="NSFrameAutosaveName"&gt;GitX&lt;/string&gt;
-+ 			&lt;/object&gt;
-+-			&lt;object class="NSToolbarItem" id="562497830"&gt;
-+-				&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-+-					&lt;characters key="NS.bytes"&gt;B6D80172-2D01-49BD-8E3A-2F1D9F672390&lt;/characters&gt;
-+-				&lt;/object&gt;
-+-				&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-+-				&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-+-				&lt;nil key="NSToolbarItemToolTip"/&gt;
-+-				&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="469221894"&gt;
-+-					&lt;nil key="NSNextResponder"/&gt;
-+-					&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-+-					&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-+-					&lt;int key="NSTag"&gt;3&lt;/int&gt;
-+-					&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-+-					&lt;object class="NSSegmentedCell" key="NSCell" id="1071657361"&gt;
-+-						&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-+-						&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-+-						&lt;object class="NSFont" key="NSSupport"&gt;
-+-							&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-+-							&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-+-							&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="NSControlView" ref="469221894"/&gt;
-+-						&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;object class="NSSegmentItem"&gt;
-+-								&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-+-								&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-+-							&lt;/object&gt;
-+-							&lt;object class="NSSegmentItem"&gt;
-+-								&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-+-								&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-+-								&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-+-							&lt;/object&gt;
-+-						&lt;/object&gt;
-+-						&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-+-						&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-+-					&lt;/object&gt;
-+-				&lt;/object&gt;
-+-				&lt;nil key="NSToolbarItemImage"/&gt;
-+-				&lt;nil key="NSToolbarItemTarget"/&gt;
-+-				&lt;nil key="NSToolbarItemAction"/&gt;
-+-				&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-+-				&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-+-				&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-+-				&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-+-				&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-+-				&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-+-				&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-+-			&lt;/object&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBObjectContainer" key="IBDocument.Objects"&gt;
-+ 			&lt;object class="NSMutableArray" key="connectionRecords"&gt;
-+@@ -607,30 +558,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;int key="connectionID"&gt;292&lt;/int&gt;
-+ 				&lt;/object&gt;
-+-				&lt;object class="IBConnectionRecord"&gt;
-+-					&lt;object class="IBBindingConnection" key="connection"&gt;
-+-						&lt;string key="label"&gt;selectedIndex: selectedViewIndex&lt;/string&gt;
-+-						&lt;reference key="source" ref="469221894"/&gt;
-+-						&lt;reference key="destination" ref="1001"/&gt;
-+-						&lt;object class="NSNibBindingConnector" key="connector"&gt;
-+-							&lt;reference key="NSSource" ref="469221894"/&gt;
-+-							&lt;reference key="NSDestination" ref="1001"/&gt;
-+-							&lt;string key="NSLabel"&gt;selectedIndex: selectedViewIndex&lt;/string&gt;
-+-							&lt;string key="NSBinding"&gt;selectedIndex&lt;/string&gt;
-+-							&lt;string key="NSKeyPath"&gt;selectedViewIndex&lt;/string&gt;
-+-							&lt;int key="NSNibBindingConnectorVersion"&gt;2&lt;/int&gt;
-+-						&lt;/object&gt;
-+-					&lt;/object&gt;
-+-					&lt;int key="connectionID"&gt;329&lt;/int&gt;
-+-				&lt;/object&gt;
-+-				&lt;object class="IBConnectionRecord"&gt;
-+-					&lt;object class="IBOutletConnection" key="connection"&gt;
-+-						&lt;string key="label"&gt;viewSelector&lt;/string&gt;
-+-						&lt;reference key="source" ref="1001"/&gt;
-+-						&lt;reference key="destination" ref="562497830"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;int key="connectionID"&gt;350&lt;/int&gt;
-+-				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="IBMutableOrderedSet" key="objectRecords"&gt;
-+ 				&lt;object class="NSArray" key="orderedObjects"&gt;
-+@@ -681,29 +608,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 						&lt;reference key="parent" ref="491121796"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;324&lt;/int&gt;
-+-						&lt;reference key="object" ref="562497830"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="469221894"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="1002"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;325&lt;/int&gt;
-+-						&lt;reference key="object" ref="469221894"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="1071657361"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="562497830"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;326&lt;/int&gt;
-+-						&lt;reference key="object" ref="1071657361"/&gt;
-+-						&lt;reference key="parent" ref="469221894"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;342&lt;/int&gt;
-+ 						&lt;reference key="object" ref="283658631"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -772,8 +676,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;3.windowTemplate.hasMinSize&lt;/string&gt;
-+ 					&lt;string&gt;3.windowTemplate.maxSize&lt;/string&gt;
-+ 					&lt;string&gt;3.windowTemplate.minSize&lt;/string&gt;
-+-					&lt;string&gt;325.IBPluginDependency&lt;/string&gt;
-+-					&lt;string&gt;326.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;342.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;343.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;344.IBPluginDependency&lt;/string&gt;
-+@@ -790,9 +692,9 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+-					&lt;string&gt;{{312, 315}, {850, 418}}&lt;/string&gt;
-++					&lt;string&gt;{{1047, -144}, {850, 418}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;{{312, 315}, {850, 418}}&lt;/string&gt;
-++					&lt;string&gt;{{1047, -144}, {850, 418}}&lt;/string&gt;
-+ 					&lt;integer value="1" id="9"/&gt;
-+ 					&lt;reference ref="9"/&gt;
-+ 					&lt;string&gt;{{15, 196}, {850, 418}}&lt;/string&gt;
-+@@ -809,8 +711,6 @@ ELIAAAAAAAgACAAIAAgAAQABAAEAAQ&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;reference ref="9"/&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+diff --git a/PBGitCommitView.xib b/PBGitCommitView.xib
-+index 0260e41..007010b 100644
-+--- a/PBGitCommitView.xib
-++++ b/PBGitCommitView.xib
-+@@ -898,6 +898,120 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 			&lt;object class="NSCustomObject" id="1007648253"&gt;
-+ 				&lt;string key="NSClassName"&gt;PBWebChangesController&lt;/string&gt;
-+ 			&lt;/object&gt;
-++			&lt;object class="NSToolbar" id="570289088"&gt;
-++				&lt;object class="NSMutableString" key="NSToolbarIdentifier"&gt;
-++					&lt;characters key="NS.bytes"&gt;F94591D2-A188-4B08-A8B2-8C8CEC03CB14&lt;/characters&gt;
-++				&lt;/object&gt;
-++				&lt;nil key="NSToolbarDelegate"/&gt;
-++				&lt;bool key="NSToolbarPrefersToBeShown"&gt;YES&lt;/bool&gt;
-++				&lt;bool key="NSToolbarShowsBaselineSeparator"&gt;YES&lt;/bool&gt;
-++				&lt;bool key="NSToolbarAllowsUserCustomization"&gt;NO&lt;/bool&gt;
-++				&lt;bool key="NSToolbarAutosavesConfiguration"&gt;NO&lt;/bool&gt;
-++				&lt;int key="NSToolbarDisplayMode"&gt;1&lt;/int&gt;
-++				&lt;int key="NSToolbarSizeMode"&gt;1&lt;/int&gt;
-++				&lt;object class="NSMutableDictionary" key="NSToolbarIBIdentifiedItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;object class="NSMutableArray" key="dict.sortedKeys"&gt;
-++						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;string&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/string&gt;
-++						&lt;string&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="NSMutableArray" key="dict.values"&gt;
-++						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;object class="NSToolbarItem" id="271300712"&gt;
-++							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-++								&lt;characters key="NS.bytes"&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/characters&gt;
-++							&lt;/object&gt;
-++							&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="20026036"&gt;
-++								&lt;nil key="NSNextResponder"/&gt;
-++								&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-++								&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-++								&lt;int key="NSTag"&gt;3&lt;/int&gt;
-++								&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-++								&lt;object class="NSSegmentedCell" key="NSCell" id="796615469"&gt;
-++									&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-++									&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-++									&lt;reference key="NSSupport" ref="554612341"/&gt;
-++									&lt;reference key="NSControlView" ref="20026036"/&gt;
-++									&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-++										&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-++											&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++									&lt;/object&gt;
-++									&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-++									&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++						&lt;/object&gt;
-++						&lt;object class="NSToolbarSeparatorItem" id="354340151"&gt;
-++							&lt;string key="NSToolbarItemIdentifier"&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++							&lt;string key="NSToolbarItemLabel"/&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;Separator&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;nil key="NSToolbarItemView"/&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{12, 5}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{12, 1000}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;-1&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++							&lt;object class="NSMenuItem" key="NSToolbarItemMenuFormRepresentation"&gt;
-++								&lt;bool key="NSIsDisabled"&gt;YES&lt;/bool&gt;
-++								&lt;bool key="NSIsSeparator"&gt;YES&lt;/bool&gt;
-++								&lt;string key="NSTitle"/&gt;
-++								&lt;string key="NSKeyEquiv"/&gt;
-++								&lt;int key="NSKeyEquivModMask"&gt;1048576&lt;/int&gt;
-++								&lt;int key="NSMnemonicLoc"&gt;2147483647&lt;/int&gt;
-++								&lt;object class="NSCustomResource" key="NSOnImage"&gt;
-++									&lt;string key="NSClassName"&gt;NSImage&lt;/string&gt;
-++									&lt;string key="NSResourceName"&gt;NSMenuCheckmark&lt;/string&gt;
-++								&lt;/object&gt;
-++								&lt;object class="NSCustomResource" key="NSMixedImage"&gt;
-++									&lt;string key="NSClassName"&gt;NSImage&lt;/string&gt;
-++									&lt;string key="NSResourceName"&gt;NSMenuMixedState&lt;/string&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++						&lt;/object&gt;
-++					&lt;/object&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSArray" key="NSToolbarIBAllowedItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="271300712"/&gt;
-++					&lt;reference ref="354340151"/&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSMutableArray" key="NSToolbarIBDefaultItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="271300712"/&gt;
-++					&lt;reference ref="354340151"/&gt;
-++				&lt;/object&gt;
-++				&lt;object class="NSMutableArray" key="NSToolbarIBSelectableItems"&gt;
-++					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++				&lt;/object&gt;
-++			&lt;/object&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBObjectContainer" key="IBDocument.Objects"&gt;
-+ 			&lt;object class="NSMutableArray" key="connectionRecords"&gt;
-+@@ -1126,6 +1240,14 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;int key="connectionID"&gt;224&lt;/int&gt;
-+ 				&lt;/object&gt;
-++				&lt;object class="IBConnectionRecord"&gt;
-++					&lt;object class="IBOutletConnection" key="connection"&gt;
-++						&lt;string key="label"&gt;viewToolbar&lt;/string&gt;
-++						&lt;reference key="source" ref="1001"/&gt;
-++						&lt;reference key="destination" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;int key="connectionID"&gt;241&lt;/int&gt;
-++				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="IBMutableOrderedSet" key="objectRecords"&gt;
-+ 				&lt;object class="NSArray" key="orderedObjects"&gt;
-+@@ -1419,6 +1541,45 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 						&lt;reference key="object" ref="221814497"/&gt;
-+ 						&lt;reference key="parent" ref="750704519"/&gt;
-+ 					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;225&lt;/int&gt;
-++						&lt;reference key="object" ref="570289088"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="271300712"/&gt;
-++							&lt;reference ref="354340151"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="1002"/&gt;
-++						&lt;string key="objectName"&gt;Commit Toolbar&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;226&lt;/int&gt;
-++						&lt;reference key="object" ref="271300712"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="20026036"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;227&lt;/int&gt;
-++						&lt;reference key="object" ref="354340151"/&gt;
-++						&lt;reference key="parent" ref="570289088"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;239&lt;/int&gt;
-++						&lt;reference key="object" ref="20026036"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="796615469"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="271300712"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;240&lt;/int&gt;
-++						&lt;reference key="object" ref="796615469"/&gt;
-++						&lt;reference key="parent" ref="20026036"/&gt;
-++					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSMutableDictionary" key="flattenedProperties"&gt;
-+@@ -1446,6 +1607,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;string&gt;164.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;2.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;217.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.IBEditorWindowLastContentRect&lt;/string&gt;
-++					&lt;string&gt;225.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.editorWindowContentRectSynchronizationRect&lt;/string&gt;
-++					&lt;string&gt;227.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;239.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;240.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;42.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;45.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;46.IBPluginDependency&lt;/string&gt;
-+@@ -1482,6 +1649,12 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;{{341, 837}, {616, 169}}&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;{{132, 614}, {616, 0}}&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+@@ -1516,7 +1689,7 @@ AAMAAAABAAEAAAFTAAMAAAAEAAAFwgAAAAAACAAIAAgACAABAAEAAQABA&lt;/bytes&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;nil key="sourceID"/&gt;
-+-			&lt;int key="maxID"&gt;224&lt;/int&gt;
-++			&lt;int key="maxID"&gt;241&lt;/int&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBClassDescriber" key="IBDocument.Classes"&gt;
-+ 			&lt;object class="NSMutableArray" key="referencedPartialClassDescriptions"&gt;
-+diff --git a/PBGitHistoryView.xib b/PBGitHistoryView.xib
-+index e008bb9..4df97b3 100644
-+--- a/PBGitHistoryView.xib
-++++ b/PBGitHistoryView.xib
-+@@ -95,7 +95,7 @@
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSToolbar" id="65173285"&gt;
-+ 				&lt;object class="NSMutableString" key="NSToolbarIdentifier"&gt;
-+-					&lt;characters key="NS.bytes"&gt;B9F1B847-0DC3-4C13-A685-5F5A2D64BC93&lt;/characters&gt;
-++					&lt;characters key="NS.bytes"&gt;F94591D2-A188-4B08-A8B2-8C8CEC03CB14&lt;/characters&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;nil key="NSToolbarDelegate"/&gt;
-+ 				&lt;bool key="NSToolbarPrefersToBeShown"&gt;YES&lt;/bool&gt;
-+@@ -108,12 +108,63 @@
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+ 					&lt;object class="NSMutableArray" key="dict.sortedKeys"&gt;
-+ 						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;string&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/string&gt;
-+ 						&lt;string&gt;7FFB691C-2D2F-49A9-997F-AE1AE8BFF3F1&lt;/string&gt;
-+ 						&lt;string&gt;99C2C9EB-AE16-42A9-BE52-46CE903E9AF9&lt;/string&gt;
-+ 						&lt;string&gt;NSToolbarFlexibleSpaceItem&lt;/string&gt;
-++						&lt;string&gt;NSToolbarSeparatorItem&lt;/string&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="NSMutableArray" key="dict.values"&gt;
-+ 						&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++						&lt;object class="NSToolbarItem" id="215578734"&gt;
-++							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-++								&lt;characters key="NS.bytes"&gt;1E431E79-1591-49E7-9E17-49497CA4622A&lt;/characters&gt;
-++							&lt;/object&gt;
-++							&lt;string key="NSToolbarItemLabel"&gt;View&lt;/string&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;View selector&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;object class="NSSegmentedControl" key="NSToolbarItemView" id="764711234"&gt;
-++								&lt;nil key="NSNextResponder"/&gt;
-++								&lt;int key="NSvFlags"&gt;268&lt;/int&gt;
-++								&lt;string key="NSFrame"&gt;{{0, 14}, {142, 25}}&lt;/string&gt;
-++								&lt;int key="NSTag"&gt;3&lt;/int&gt;
-++								&lt;bool key="NSEnabled"&gt;YES&lt;/bool&gt;
-++								&lt;object class="NSSegmentedCell" key="NSCell" id="266464607"&gt;
-++									&lt;int key="NSCellFlags"&gt;67239424&lt;/int&gt;
-++									&lt;int key="NSCellFlags2"&gt;0&lt;/int&gt;
-++									&lt;object class="NSFont" key="NSSupport" id="924107556"&gt;
-++										&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-++										&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-++										&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-++									&lt;/object&gt;
-++									&lt;reference key="NSControlView" ref="764711234"/&gt;
-++									&lt;object class="NSMutableArray" key="NSSegmentImages"&gt;
-++										&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;History&lt;/string&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++										&lt;object class="NSSegmentItem"&gt;
-++											&lt;string key="NSSegmentItemLabel"&gt;Commit&lt;/string&gt;
-++											&lt;bool key="NSSegmentItemSelected"&gt;YES&lt;/bool&gt;
-++											&lt;int key="NSSegmentItemImageScaling"&gt;0&lt;/int&gt;
-++										&lt;/object&gt;
-++									&lt;/object&gt;
-++									&lt;int key="NSSelectedSegment"&gt;1&lt;/int&gt;
-++									&lt;int key="NSSegmentStyle"&gt;2&lt;/int&gt;
-++								&lt;/object&gt;
-++							&lt;/object&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{142, 25}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;3&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++						&lt;/object&gt;
-+ 						&lt;object class="NSToolbarItem" id="479447135"&gt;
-+ 							&lt;object class="NSMutableString" key="NSToolbarItemIdentifier"&gt;
-+ 								&lt;characters key="NS.bytes"&gt;7FFB691C-2D2F-49A9-997F-AE1AE8BFF3F1&lt;/characters&gt;
-+@@ -131,11 +182,7 @@
-+ 								&lt;object class="NSSearchFieldCell" key="NSCell" id="449521666"&gt;
-+ 									&lt;int key="NSCellFlags"&gt;343014976&lt;/int&gt;
-+ 									&lt;int key="NSCellFlags2"&gt;268436480&lt;/int&gt;
-+-									&lt;object class="NSFont" key="NSSupport" id="924107556"&gt;
-+-										&lt;string key="NSName"&gt;LucidaGrande&lt;/string&gt;
-+-										&lt;double key="NSSize"&gt;1.300000e+01&lt;/double&gt;
-+-										&lt;int key="NSfFlags"&gt;1044&lt;/int&gt;
-+-									&lt;/object&gt;
-++									&lt;reference key="NSSupport" ref="924107556"/&gt;
-+ 									&lt;string key="NSPlaceholderString"&gt;Subject&lt;/string&gt;
-+ 									&lt;reference key="NSControlView" ref="845792858"/&gt;
-+ 									&lt;bool key="NSDrawsBackground"&gt;YES&lt;/bool&gt;
-+@@ -330,16 +377,47 @@
-+ 								&lt;reference key="NSMixedImage" ref="746375230"/&gt;
-+ 							&lt;/object&gt;
-+ 						&lt;/object&gt;
-++						&lt;object class="NSToolbarSeparatorItem" id="776753395"&gt;
-++							&lt;string key="NSToolbarItemIdentifier"&gt;NSToolbarSeparatorItem&lt;/string&gt;
-++							&lt;string key="NSToolbarItemLabel"/&gt;
-++							&lt;string key="NSToolbarItemPaletteLabel"&gt;Separator&lt;/string&gt;
-++							&lt;nil key="NSToolbarItemToolTip"/&gt;
-++							&lt;nil key="NSToolbarItemView"/&gt;
-++							&lt;nil key="NSToolbarItemImage"/&gt;
-++							&lt;nil key="NSToolbarItemTarget"/&gt;
-++							&lt;nil key="NSToolbarItemAction"/&gt;
-++							&lt;string key="NSToolbarItemMinSize"&gt;{12, 5}&lt;/string&gt;
-++							&lt;string key="NSToolbarItemMaxSize"&gt;{12, 1000}&lt;/string&gt;
-++							&lt;bool key="NSToolbarItemEnabled"&gt;YES&lt;/bool&gt;
-++							&lt;bool key="NSToolbarItemAutovalidates"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemTag"&gt;-1&lt;/int&gt;
-++							&lt;bool key="NSToolbarIsUserRemovable"&gt;YES&lt;/bool&gt;
-++							&lt;int key="NSToolbarItemVisibilityPriority"&gt;0&lt;/int&gt;
-++							&lt;object class="NSMenuItem" key="NSToolbarItemMenuFormRepresentation"&gt;
-++								&lt;bool key="NSIsDisabled"&gt;YES&lt;/bool&gt;
-++								&lt;bool key="NSIsSeparator"&gt;YES&lt;/bool&gt;
-++								&lt;string key="NSTitle"/&gt;
-++								&lt;string key="NSKeyEquiv"/&gt;
-++								&lt;int key="NSKeyEquivModMask"&gt;1048576&lt;/int&gt;
-++								&lt;int key="NSMnemonicLoc"&gt;2147483647&lt;/int&gt;
-++								&lt;reference key="NSOnImage" ref="908677745"/&gt;
-++								&lt;reference key="NSMixedImage" ref="746375230"/&gt;
-++							&lt;/object&gt;
-++						&lt;/object&gt;
-+ 					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;object class="NSArray" key="NSToolbarIBAllowedItems"&gt;
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="215578734"/&gt;
-++					&lt;reference ref="776753395"/&gt;
-+ 					&lt;reference ref="455812118"/&gt;
-+ 					&lt;reference ref="633367776"/&gt;
-+ 					&lt;reference ref="479447135"/&gt;
-+ 				&lt;/object&gt;
-+ 				&lt;object class="NSMutableArray" key="NSToolbarIBDefaultItems"&gt;
-+ 					&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++					&lt;reference ref="215578734"/&gt;
-++					&lt;reference ref="776753395"/&gt;
-+ 					&lt;reference ref="455812118"/&gt;
-+ 					&lt;reference ref="633367776"/&gt;
-+ 					&lt;reference ref="479447135"/&gt;
-+@@ -2053,6 +2131,93 @@
-+ 						&lt;reference key="parent" ref="555671215"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;3&lt;/int&gt;
-++						&lt;reference key="object" ref="663765878"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="942510576"/&gt;
-++							&lt;reference ref="452331733"/&gt;
-++							&lt;reference ref="152625445"/&gt;
-++							&lt;reference ref="254268962"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="202620420"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;30&lt;/int&gt;
-++						&lt;reference key="object" ref="942510576"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;29&lt;/int&gt;
-++						&lt;reference key="object" ref="452331733"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;28&lt;/int&gt;
-++						&lt;reference key="object" ref="152625445"/&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;27&lt;/int&gt;
-++						&lt;reference key="object" ref="254268962"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="976830280"/&gt;
-++							&lt;reference ref="1025472344"/&gt;
-++							&lt;reference ref="792589327"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="663765878"/&gt;
-++						&lt;string key="objectName"&gt;Commit List&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;33&lt;/int&gt;
-++						&lt;reference key="object" ref="976830280"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="853819733"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;32&lt;/int&gt;
-++						&lt;reference key="object" ref="1025472344"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="977219207"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;31&lt;/int&gt;
-++						&lt;reference key="object" ref="792589327"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="746918365"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="254268962"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;36&lt;/int&gt;
-++						&lt;reference key="object" ref="746918365"/&gt;
-++						&lt;reference key="parent" ref="792589327"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;35&lt;/int&gt;
-++						&lt;reference key="object" ref="977219207"/&gt;
-++						&lt;reference key="parent" ref="1025472344"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;34&lt;/int&gt;
-++						&lt;reference key="object" ref="853819733"/&gt;
-++						&lt;reference key="parent" ref="976830280"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;190&lt;/int&gt;
-++						&lt;reference key="object" ref="886549521"/&gt;
-++						&lt;reference key="parent" ref="1002"/&gt;
-++						&lt;string key="objectName"&gt;Branches Controller&lt;/string&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;113&lt;/int&gt;
-+ 						&lt;reference key="object" ref="65173285"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -2060,6 +2225,8 @@
-+ 							&lt;reference ref="455812118"/&gt;
-+ 							&lt;reference ref="633367776"/&gt;
-+ 							&lt;reference ref="479447135"/&gt;
-++							&lt;reference ref="776753395"/&gt;
-++							&lt;reference ref="215578734"/&gt;
-+ 						&lt;/object&gt;
-+ 						&lt;reference key="parent" ref="1002"/&gt;
-+ 						&lt;string key="objectName"&gt;History Toolbar&lt;/string&gt;
-+@@ -2088,6 +2255,34 @@
-+ 						&lt;reference key="parent" ref="65173285"/&gt;
-+ 					&lt;/object&gt;
-+ 					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;222&lt;/int&gt;
-++						&lt;reference key="object" ref="776753395"/&gt;
-++						&lt;reference key="parent" ref="65173285"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;223&lt;/int&gt;
-++						&lt;reference key="object" ref="215578734"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="764711234"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="65173285"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;224&lt;/int&gt;
-++						&lt;reference key="object" ref="764711234"/&gt;
-++						&lt;object class="NSMutableArray" key="children"&gt;
-++							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-++							&lt;reference ref="266464607"/&gt;
-++						&lt;/object&gt;
-++						&lt;reference key="parent" ref="215578734"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-++						&lt;int key="objectID"&gt;225&lt;/int&gt;
-++						&lt;reference key="object" ref="266464607"/&gt;
-++						&lt;reference key="parent" ref="764711234"/&gt;
-++					&lt;/object&gt;
-++					&lt;object class="IBObjectRecord"&gt;
-+ 						&lt;int key="objectID"&gt;117&lt;/int&gt;
-+ 						&lt;reference key="object" ref="845792858"/&gt;
-+ 						&lt;object class="NSMutableArray" key="children"&gt;
-+@@ -2145,93 +2340,6 @@
-+ 						&lt;reference key="object" ref="882172208"/&gt;
-+ 						&lt;reference key="parent" ref="604026377"/&gt;
-+ 					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;3&lt;/int&gt;
-+-						&lt;reference key="object" ref="663765878"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="942510576"/&gt;
-+-							&lt;reference ref="452331733"/&gt;
-+-							&lt;reference ref="152625445"/&gt;
-+-							&lt;reference ref="254268962"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="202620420"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;30&lt;/int&gt;
-+-						&lt;reference key="object" ref="942510576"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;29&lt;/int&gt;
-+-						&lt;reference key="object" ref="452331733"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;28&lt;/int&gt;
-+-						&lt;reference key="object" ref="152625445"/&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;27&lt;/int&gt;
-+-						&lt;reference key="object" ref="254268962"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="976830280"/&gt;
-+-							&lt;reference ref="1025472344"/&gt;
-+-							&lt;reference ref="792589327"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="663765878"/&gt;
-+-						&lt;string key="objectName"&gt;Commit List&lt;/string&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;33&lt;/int&gt;
-+-						&lt;reference key="object" ref="976830280"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="853819733"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;32&lt;/int&gt;
-+-						&lt;reference key="object" ref="1025472344"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="977219207"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;31&lt;/int&gt;
-+-						&lt;reference key="object" ref="792589327"/&gt;
-+-						&lt;object class="NSMutableArray" key="children"&gt;
-+-							&lt;bool key="EncodedWithXMLCoder"&gt;YES&lt;/bool&gt;
-+-							&lt;reference ref="746918365"/&gt;
-+-						&lt;/object&gt;
-+-						&lt;reference key="parent" ref="254268962"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;36&lt;/int&gt;
-+-						&lt;reference key="object" ref="746918365"/&gt;
-+-						&lt;reference key="parent" ref="792589327"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;35&lt;/int&gt;
-+-						&lt;reference key="object" ref="977219207"/&gt;
-+-						&lt;reference key="parent" ref="1025472344"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;34&lt;/int&gt;
-+-						&lt;reference key="object" ref="853819733"/&gt;
-+-						&lt;reference key="parent" ref="976830280"/&gt;
-+-					&lt;/object&gt;
-+-					&lt;object class="IBObjectRecord"&gt;
-+-						&lt;int key="objectID"&gt;190&lt;/int&gt;
-+-						&lt;reference key="object" ref="886549521"/&gt;
-+-						&lt;reference key="parent" ref="1002"/&gt;
-+-						&lt;string key="objectName"&gt;Branches Controller&lt;/string&gt;
-+-					&lt;/object&gt;
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;object class="NSMutableDictionary" key="flattenedProperties"&gt;
-+@@ -2272,6 +2380,9 @@
-+ 					&lt;string&gt;2.ImportedFromIB2&lt;/string&gt;
-+ 					&lt;string&gt;21.IBAttributePlaceholdersKey&lt;/string&gt;
-+ 					&lt;string&gt;21.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;222.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;224.IBPluginDependency&lt;/string&gt;
-++					&lt;string&gt;225.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;23.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;24.IBPluginDependency&lt;/string&gt;
-+ 					&lt;string&gt;25.IBPluginDependency&lt;/string&gt;
-+@@ -2319,7 +2430,7 @@
-+ 					&lt;string&gt;com.apple.InterfaceBuilderKit&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+-					&lt;string&gt;{{244, 901}, {616, 0}}&lt;/string&gt;
-++					&lt;string&gt;{{341, 957}, {616, 0}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;{{132, 614}, {616, 0}}&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+@@ -2360,6 +2471,9 @@
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-++					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;string&gt;PBCommitList&lt;/string&gt;
-+ 					&lt;string&gt;com.apple.InterfaceBuilder.CocoaPlugin&lt;/string&gt;
-+ 					&lt;integer value="0" id="8"/&gt;
-+@@ -2425,7 +2539,7 @@
-+ 				&lt;/object&gt;
-+ 			&lt;/object&gt;
-+ 			&lt;nil key="sourceID"/&gt;
-+-			&lt;int key="maxID"&gt;217&lt;/int&gt;
-++			&lt;int key="maxID"&gt;225&lt;/int&gt;
-+ 		&lt;/object&gt;
-+ 		&lt;object class="IBClassDescriber" key="IBDocument.Classes"&gt;
-+ 			&lt;object class="NSMutableArray" key="referencedPartialClassDescriptions"&gt;
-+diff --git a/PBGitWindowController.h b/PBGitWindowController.h
-+index accde05..d243a37 100644
-+--- a/PBGitWindowController.h
-++++ b/PBGitWindowController.h
-+@@ -14,8 +14,6 @@
-+ 	int selectedViewIndex;
-+ 	IBOutlet NSView* contentView;
-+ 	NSViewController* viewController;
-+-
-+-	IBOutlet NSToolbarItem *viewSelector;
-+ }
-+
-+ @property (assign) __weak PBGitRepository *repository;
-+diff --git a/PBGitWindowController.m b/PBGitWindowController.m
-+index db530c0..18c2393 100644
-+--- a/PBGitWindowController.m
-++++ b/PBGitWindowController.m
-+@@ -87,41 +87,11 @@
-+
-+ #pragma mark -
-+ #pragma mark Toolbar Delegates
-+-- (NSToolbarItem *) toolbar:(NSToolbar *)toolbar
-+-      itemForItemIdentifier:(NSString *)itemIdentifier
-+-  willBeInsertedIntoToolbar:(BOOL)flag
-+-{
-+-	if ([itemIdentifier isEqualToString:[viewSelector itemIdentifier]])
-+-		return viewSelector;
-+-
-+-	return nil;
-+-}
-+-
-+-- (NSArray *)toolbarAllowedItemIdentifiers:(NSToolbar *)toolbar
-+-{
-+-	NSMutableArray *array = [NSMutableArray array];
-+-	for (NSToolbarItem *item in [toolbar items])
-+-		[array addObject:[item itemIdentifier]];
-+-	return array;
-+-}
-+-
-+-- (NSArray *)toolbarDefaultItemIdentifiers:(NSToolbar *)toolbar
-+-{
-+-	NSMutableArray *array = [NSMutableArray array];
-+-	for (NSToolbarItem *item in [toolbar items])
-+-		[array addObject:[item itemIdentifier]];
-+-	return array;
-+-}
-+
-+ - (void) useToolbar:(NSToolbar *)toolbar
-+ {
-+-	[toolbar setDelegate:self];
-+-
-+-	[toolbar insertItemWithItemIdentifier:NSToolbarSeparatorItemIdentifier atIndex:0];
-+-	[toolbar insertItemWithItemIdentifier:[viewSelector itemIdentifier] atIndex:0];
-+-
-+-	NSSegmentedControl *viewSelect = (NSSegmentedControl *)[[[toolbar items] objectAtIndex:0] view];
-+-	[viewSelect bind:@"selectedIndex" toObject:self withKeyPath:@"selectedViewIndex" options:0];
-++	NSSegmentedControl *item = (NSSegmentedControl *)[[[toolbar items] objectAtIndex:0] view];
-++	[item bind:@"selectedIndex" toObject:self withKeyPath:@"selectedViewIndex" options:0];
-+
-+ 	[self.window setToolbar:toolbar];
-+ }
-+
-+	&lt;/textarea>
-+	&lt;pre>&lt;code id='updateddiff'>&lt;/code>&lt;/pre>
-+&lt;/body>
-\ No newline at end of file
-diff --git a/diff/tests/test4.html b/diff/tests/test4.html
-new file mode 100644
-index 0000000..747f908
---- /dev/null
-+++ b/diff/tests/test4.html
-@@ -0,0 +1,17 @@
-+&lt;html>
-+&lt;head>
-+	&lt;link rel="stylesheet" href="diff.css" type="text/css" media="screen" charset="utf-8">
-+	&lt;script src="jquery.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script src="gity.js" type="text/javascript" charset="utf-8">&lt;/script>
-+	&lt;script type="text/javascript" charset="utf-8">
-+		$(document).ready(startDiff);
-+	&lt;/script>
-+&lt;/head>
-+&lt;body>
-+	&lt;textarea id="diff" class="difftextarea">
-+diff --git a/assets/gitui.psd b/assets/gitui.psd
-+index a779764..2d106a4 100644
-+Binary files a/assets/gitui.psd and b/assets/gitui.psd differ
-+	&lt;/textarea>
-+	&lt;pre>&lt;code id='updateddiff'>&lt;/code>&lt;/pre>
-+&lt;/body>
-\ No newline at end of file
-diff --git a/python/__test.py b/python/__test.py
-new file mode 100644
-index 0000000..53ab705
---- /dev/null
-+++ b/python/__test.py
-@@ -0,0 +1,3 @@
-+import os
-+cp =  os.path.abspath(__file__)
-+print "/".join(cp.split("/")[0:-2])
-\ No newline at end of file
-diff --git a/python/_util.py b/python/_util.py
-index 2bb6cb5..a35efa2 100644
---- a/python/_util.py
-+++ b/python/_util.py
-@@ -6,6 +6,9 @@ except Exception,e:
- 	sys.stderr.write(str(e))
- 	exit(84)
- 
-+def resources_dir():
-+	return "/".join(os.path.abspath(__file__).split("/")[0:-2])
-+
- def result_for_default_configs(gitbin):
- 	gitcommand="config --list | grep ^gity.default.remote.branch"
- 	command="%s %s"%(gitbin,gitcommand)
-diff --git a/python/_util.pyc b/python/_util.pyc
-index 932db8f..cdb35ba 100644
-Binary files a/python/_util.pyc and b/python/_util.pyc differ
-diff --git a/python/diff.py b/python/diff.py
-new file mode 100644
-index 0000000..2071ade
---- /dev/null
-+++ b/python/diff.py
-@@ -0,0 +1,22 @@
-+#copyright aaronsmith 2009
-+#do not redistribute or copy
-+from _util import *
-+try:
-+	import sys,re,os,subprocess
-+except Exception,e:
-+	sys.stderr.write(str(e))
-+	exit(84)
-+try:
-+	from _argv import *
-+	#if not options.misc: raise Exception("Gitty Error: The diff command requires extra parameters.")
-+	#command="%s %s %s"%(options.git,"checkout",sanitize_str(str(options.misc[0])))
-+	command = "%s diff" % (options.git)
-+	rcode,stout,sterr=run_command(command)
-+	rcode_for_git_exit(rcode,sterr)
-+	
-+	exit(0)
-+except Exception, e:
-+	sys.stderr.write("The checkout branch command through this error: " + str(e))
-+	log_gity_version(options.gityversion)
-+	log_gitv(options.git)
-+	exit(84)
-\ No newline at end of file
-diff --git a/python/diffprepare.py b/python/diffprepare.py
-new file mode 100644
-index 0000000..f1856e5
---- /dev/null
-+++ b/python/diffprepare.py
-@@ -0,0 +1,20 @@
-+#copyright aaronsmith 2009
-+#do not redistribute or copy
-+from _util import *
-+try:
-+	import sys,re,os,subprocess
-+except Exception,e:
-+	sys.stderr.write(str(e))
-+	exit(84)
-+try:
-+	from _argv import *
-+	os.system("mkdir -p .git/vendor/gity/tmp/diff/")
-+	os.system("rm -rf .git/vendor/gity/tmp/diff/*")
-+	resources=resources_dir()
-+	os.system("cp -r %s/diff .git/vendor/gity/tmp/" % (resources))
-+	exit(0)
-+except Exception, e:
-+	sys.stderr.write("The checkout branch command through this error: " + str(e))
-+	log_gity_version(options.gityversion)
-+	log_gitv(options.git)
-+	exit(84)
-\ No newline at end of file
-diff --git a/versioning/_version b/versioning/_version
-index bfb53fd..b38dd1f 100755
---- a/versioning/_version
-+++ b/versioning/_version
-@@ -1,4 +1,4 @@
- 0
- 1
- 7
--2345
-\ No newline at end of file
-+2347
-\ No newline at end of file
