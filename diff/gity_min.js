var months=["January","February","March","April","May","June","July","August","September","October","November","December"];var lines;var l;var nl;var nnl;var nnnl;var k=0;var i=0;var linkCount=0;var isCommitDetails=false;var commitDetails={};var commitDetailsTable;var commitDetailFiles={};var commitDetailsTableContent=[];function startDiff(){var b=$("#diff");var a=b.val().replace(/\&/g,"&amp;");a=a.replace(/</g,"&lt;");$("#updateddiff").html(a);highlightDiffs()}function startCommit(){commitDetailsTableContent=[];commitDetailFiles.changed=[];commitDetailFiles.removed=[];commitDetailFiles["new"]=[];commitDetailFiles.renamed=[];commitDetailsTable=$("#commitDetailsTable");commitRawMessageDiv=$("#commitMessageContainer");isCommitDetails=true;parseCommitDetails();addAuthor();addCommitter();addDate();addSubject();addRefs();addSHA();addParents();addRawMessage();updateCommitTableContent();startDiff();updateCommitFiles()}function updateCommitTableContent(){commitDetailsTable.append(commitDetailsTableContent.join(""))}function exportTar(){if(window.historyDetailsView){window.historyDetailsView.exportTar()}}function exportZip(a){if(window.historyDetailsView){window.historyDetailsView.exportZip()}}function loadLeft(){if(window.historyDetailsView){window.historyDetailsView.loadLeft_(commitDetails.fullSHA)}}function loadRight(){if(window.historyDetailsView){window.historyDetailsView.loadRight_(commitDetails.fullSHA)}}function loadParent(a){if(window.historyDetailsView){window.historyDetailsView.loadParent_(a)}}function newTag(a){if(window.historyDetailsView){window.historyDetailsView.newTag_(a)}}function cherryPick(a){if(window.historyDetailsView){window.historyDetailsView.cherryPick_(a)}}function loadTree(a){if(window.historyDetailsView){window.historyDetailsView.loadTree_(a)}}function nextLineIsAllSpaces(){if(!nl){return false}if(nl.match(/^\s{0,}$/)){return true}return false}function isLineIsAllSpaces(){var a=lines[i];if(a.match(/^\s{0,}$/)){return true}return false}function isNewFile(a){if(!a){return false}return(a.match("^[a-zA-Z0-9_]*")[0].toLowerCase()=="new")}function isDeletedFile(a){if(!a){return false}return(a.match("^[a-zA-Z0-9_]*")[0].toLowerCase()=="deleted")}function stepOverALine(){var a=i+2;if(lines.length-1<a){return null}return lines[a]}function isNextLineNewFile(){if(!nl){return false}return isNewFile(nl)}function isNextLineDeletedFile(){if(!nl){return false}return isDeletedFile(nl)}function isThisFileBinary(){if(!nnl){return false}return(nnl.match("^[a-zA-Z0-9_]*")[0].toLowerCase()=="binary")}function isNewBinaryFile(){if(!nnnl){return false}return(nnnl.match("^[a-zA-Z0-9_]*")[0].toLowerCase()=="binary")}function isFileNoContent(){if(!nnl){return false}if(nnl.match("^diff")||nnnl.match("^diff")){return true}if(nnnl==""){return true}return false}function isRenamedFile(){if(nnl.match("^rename from")&&nnnl.match("^rename to")){return true}return false}function isLineTooLong(){return(l.length>24887)}function parseCommitDetails(){var a=$("#commitDetails");var e=a.val().replace(/\&/g,"&amp;");e=e.replace(/</g,"&lt;");var h=e.indexOf("\ndiff ");var c=e.indexOf("\n\n")+2;if(h==-1){h=e.length}var n=e.substring(h);$("#diff").html(n);var g=e.substring(0,h);var f=g.match(/\nauthor (.*) \&lt\;(.*@.*|.*)> ([0-9].*)/);commitDetails.author=f[1];commitDetails.authorEmail=f[2];f=g.match(/\ncommitter (.*) \&lt\;(.*@.*|.*)> ([0-9].*)/);commitDetails.committer=f[1];commitDetails.committerEmail=f[2];commitDetails.date=new Date(parseInt(f[3])*1000);f=g.match("^commit ([a-zA-Z0-9]*)\n");commitDetails.fullSHA=f[1];commitDetails.sha=f[1].substring(0,10);f=g.match("tree ([a-zA-Z0-9]*)\n");commitDetails.tree=f[1];f=g.match(/^parent ([a-zA-Z0-9]*)\n/gm);commitDetails.parents=[];if(f){var d=0;var b=f.length;var j="";for(d;d<b;d++){j=f[d].split(" ")[1];commitDetails.parents.push(j)}}var o=e.substring(c,h).replace(/^    /gm,"");commitDetails.rawMessage=o;commitDetails.subject=o.split("\n\n")[0].replace(/^    /gm,"")}function updateCommitFiles(){var c=0;var a;var f;var d;var b=false;var e=commitDetailFiles["new"].length+commitDetailFiles.renamed.length+commitDetailFiles.changed.length+commitDetailFiles.removed.length;if(commitDetails.rawMessage.match("^Merge branch")&&e<1){b=true;$("#commitIndex").html("")}if(e<1&&!b){$("#commitIndex").html("");return}if(commitDetailFiles["new"].length>0){c=0;f=[];a=commitDetailFiles["new"].length;f.push("<table id='fileStatuses' class='monaco'><tr><td><span class='fileStatus newFileStatus'>New</span><div id='spacer'>&nbsp;</div></td></tr>");f.push("<tr><td><ul class='fileStatusList'>");for(c;c<a;c++){d=commitDetailFiles["new"][c];if(!d.binary){f.push("<li><a href='#"+d.linkCount+"' title='go to "+d.file+"' class='file'>"+d.file+"</a></li>")}else{f.push("<li><a href='#"+d.linkCount+"' title='go to "+d.file+"' class='file'>"+d.file+"</a> (binary)</li>")}}f.push("</ul></td></tr></table>");$("#fileStatusesContainer").append(f.join(""))}if(commitDetailFiles.renamed.length>0){c=0;f=[];a=commitDetailFiles.renamed.length;f.push("<table id='fileStatuses' class='monaco'><tr><td><span class='fileStatus renamedFileStatus'>Renamed</span><div id='spacer'>&nbsp;</div></td></tr>");f.push("<tr><td><ul class='fileStatusList'>");for(c;c<a;c++){d=commitDetailFiles.renamed[c];if(!d.binary){f.push("<li><span class='renameFrom'>"+d.from+"</span> -> "+d.to+"</li>")}else{f.push("<li><span class='renameFrom'>"+d.from+"</span> -> "+d.to+" (binary)</li>")}}f.push("</ul></td></tr></table>");$("#fileStatusesContainer").append(f.join(""))}if(commitDetailFiles.changed.length>0){c=0;f=[];a=commitDetailFiles.changed.length;f.push("<table id='fileStatuses' class='monaco'><tr><td><span class='fileStatus changedFileStatus'>Modified</span><div id='spacer'>&nbsp;</div></td></tr>");f.push("<tr><td><ul class='fileStatusList'>");for(c;c<a;c++){d=commitDetailFiles.changed[c];if(!d.binary){f.push("<li><a href='#"+d.linkCount+"' title='go to "+d.file+"' class='file'>"+d.file+"</a></li>")}else{f.push("<li><a href='#"+d.linkCount+"' title='go to "+d.file+"' class='file'>"+d.file+"</a> (binary)</li>")}}f.push("</ul></td></tr></table>");$("#fileStatusesContainer").append(f.join(""))}if(commitDetailFiles.removed.length>0){c=0;f=[];a=commitDetailFiles.removed.length;f.push("<table id='fileStatuses' class='monaco'><tr><td><span class='fileStatus removedFileStatus'>Removed</span><div id='spacer'>&nbsp;</div></td></tr>");f.push("<tr><td><ul class='fileStatusList'>");for(c;c<a;c++){d=commitDetailFiles.removed[c];if(!d.binary){f.push("<li><a href='#"+d.linkCount+"' title='go to "+d.file+"'>"+d.file+"</a></li>")}else{f.push("<li><a href='#"+d.linkCount+"' title='go to "+d.file+"'>"+d.file+"</a> (binary)</li>")}}f.push("</ul></td></tr></table>");$("#fileStatusesContainer").append(f.join(""))}}function addCommitter(){if(commitDetails.author==commitDetails.committer){return}if(commitDetails.committerEmail){commitDetailsTableContent.push("<tr><td class='detailItemLabel' style='width:79px;'>Committer:</td><td class='detailItem'>"+commitDetails.committer+" &lt;<a href='mailto:"+commitDetails.committerEmail+"'>"+commitDetails.committerEmail+"</a>&gt;</td></tr>")}else{commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Committer:</td><td class='detailItem'>"+commitDetails.committer+"</td></tr>")}}function addAuthor(){if(commitDetails.authorEmail){commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Author:</td><td class='detailItem'>"+commitDetails.author+" &lt;<a href='mailto:"+commitDetails.authorEmail+"'>"+commitDetails.authorEmail+"</a>&gt;</td></tr>")}else{commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Author:</td><td class='detailItem'>"+commitDetails.author+"</td></tr>")}}function addDate(){var a=commitDetails.date.format("ddd mmmm dS yyyy @ hh:MM:sstt ('GMT'o Z)");commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Date:</td><td class='detailItem'>"+a+"</td></tr>")}function addSubject(){if(!commitDetails.subject){return}commitDetailsTableContent.push("<tr><td class='detailItemLabel' valign='top'>Subject:</td><td class='detailItem subjectItem'><b>"+commitDetails.subject+"</b></td></tr>")}function clearExtendedMessage(){$("#extendedMessageContainer").html("")}function addRawMessage(){if(!commitDetails.rawMessage){clearExtendedMessage();return}if(commitDetails.rawMessage.trim()==commitDetails.subject.trim()){clearExtendedMessage();return}var a=commitDetails.rawMessage;a=a.replace(/\n/gm,"<br/>");commitRawMessageDiv.append(a)}function addSHA(){if(!commitDetails.sha){return}commitDetailsTableContent.push("<tr><td class='detailItemLabel'>SHA:</td><td class='detailItem'>"+commitDetails.sha);commitDetailsTableContent.push(" <a href='javascript:exportTar();' class='archive' title='Export a tar of this commit'>tar</a> ");commitDetailsTableContent.push(" <a href='javascript:exportZip();' class='archive' title='Export a zip of this commit'>zip</a> <a href='javascript:newTag");commitDetailsTableContent.push('("'+commitDetails.fullSHA+"\")' class='archive' title='Tag this commit'>+tag</a> ");if(window.historyDetailsView&&!window.historyDetailsView.isHeadDetatched()&&commitDetails.parents&&commitDetails.parents.length<2){commitDetailsTableContent.push("<a href='javascript:cherryPick(\""+commitDetails.fullSHA+"\")' class='archive' title='Cherry pick this commit'>+cherry</a>")}commitDetailsTableContent.push("</td></tr>")}function addOptions(){return;if(!commitDetails.sha){return}commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Options:</td><td class='detailItem'>");commitDetailsTableContent.push(" <a href='javascript:exportTar();' class='archive' title='Export a tar of this commit'>tar</a> ");commitDetailsTableContent.push("<a href='javascript:exportZip();' class='archive' title='Export a zip of this commit'>zip</a> <a href='javascript:newTag");commitDetailsTableContent.push('("'+commitDetails.fullSHA+"\")' class='archive' title='Tag this commit'>+tag</a> ");if(window.historyDetailsView&&!window.historyDetailsView.isHeadDetatched()&&commitDetails.parents&&commitDetails.parents.length<2){commitDetailsTableContent.push("<a href='javascript:cherryPick(\""+commitDetails.fullSHA+"\")' class='archive' title='Cherry pick this commit'>+cherry</a>")}commitDetailsTableContent.push("</td></tr>")}function addDiff(){return;commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Differ:</td><td class='detailItem'>");commitDetailsTableContent.push("<a href='javascript:loadLeft()' class='archive' title='Load this in the left slot of the diff viewer'>left</a> ");commitDetailsTableContent.push("<a href='javascript:loadRight()' class='archive'>right</a> </td></tr>")}function addTree(){var a=commitDetails.tree;var b=a.substring(0,10);commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Tree:</td><td class='detailItem'><a href='javascript:loadTree(\""+a+"\")' title='Inspect this tree'>"+b+"</a></td></tr>")}function addRefs(){if(!window.historyDetailsView){return}refs=window.historyDetailsView.getRefs_(commitDetails.fullSHA);if(!refs||refs.length<1){return}con=[];con.push("<tr><td class='detailItemLabel'>Refs: </td>");con.push("<td class='detailItem'>");var b=0;var a=refs.length;for(b;b<a;b++){con.push("<span class='ref'>"+refs[b]+"</span> ")}con.push("</td>");commitDetailsTableContent.push(con.join(""))}function addParents(){var e;var c;var b=commitDetails.parents;var d=0;var a=b.length;if(a<1){return}for(d;d<a;d++){e=b[d];c=e.substring(0,10);commitDetailsTableContent.push("<tr><td class='detailItemLabel'>Parent:</td><td class='detailItem'><a href='javascript:loadParent(\""+e+"\")' title='Load this parent commit'>"+c+"</a></td></tr>")}}function highlightDiffs(){var s=$("#updateddiff")[0];var u=s.innerHTML.replace(/\t/g,"  ");lines=u.split("\n");var q="";var p="";var b="";var j=-1;var h=-1;var w=true;var n=true;var B=false;var t=false;var v=false;k=lines.length;for(i;i<k;i++){l=lines[i];var A=l.charAt(0);var y=l.match("^[a-zA-Z0-9_]*")[0].toLowerCase();if(A=="\\"){continue}try{nl=lines[i+1]}catch(z){nl=null}try{nnl=lines[i+2]}catch(z){nnl=null}try{nnnl=lines[i+3]}catch(z){nnnl=null}if(v){if(A=="+"||A=="-"){if(nl.match("^diff --")||nl==""){b+='<div class="line binaryChange">No diff content</div>'}continue}}if(y=="index"){continue}if(v&&y=="binary"){msg=l;m=l.match("Binary files a/(.*) and");if(m.length==2){msg=msg="Binary file "+m[1]+" has changed"}b+='<div class="line binaryChange">'+msg+"</div>";v=false;continue}if(B){b+='<div class="line binaryChange">New binary file</div>';B=false;continue}if(t){b+='<div class="line binaryChange">Deleted binary file</div>';t=false;continue}if(y=="diff"){v=true;var d;var c=false;var C=false;var D=false;var a=false;var g=false;var x=false;l=l.replace("--cc ","");l=l.replace("--c","");if(isRenamedFile()){x=true}if(isNextLineNewFile()){c=true}if(isThisFileBinary()){a=true}if(isNextLineDeletedFile()){C=true}if(isNewBinaryFile()){B=true;if(C){D=true;C=false;t=true;B=false}v=false;g=true}if(l.match("b/")){pieces=l.split("b/")}else{pieces=l.split(" ")}file=pieces[pieces.length-1];w=true;linkCount++;if(isCommitDetails){var r={};r.file=file;r.linkCount=linkCount;if(x){var o=nnl.match("^rename from (t/)?(.*)");var f=nnnl.match("^rename to (t/)?(.*)");r.from=o[2];r.to=f[2];commitDetailFiles.renamed.push(r);continue}if(a||D||g){r.binary=true}if(D||C){commitDetailFiles.removed.push(r)}else{if(g||c){commitDetailFiles["new"].push(r)}else{commitDetailFiles.changed.push(r)}}if(D&&n&&!isCommitDetails){d='<div class="firstFileHeader"><a name="'+linkCount+'"></a>'+file+' (binary) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(D){d='<div class="fileHeader"><a name="'+linkCount+'"></a>'+file+' (binary) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(C&&n&&!isCommitDetails){d='<div class="firstFileHeader"><a name="'+linkCount+'"></a>'+file+' (deleted file) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(C){d='<div class="fileHeader"><a name="'+linkCount+'"></a>'+file+' (deleted file) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(g&&n&&!isCommitDetails){d='<div class="firstFileHeader"><a name="'+linkCount+'"></a>'+file+' (binary) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(g){d='<div class="fileHeader"><a name="'+linkCount+'"></a>'+file+' (binary) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(a&&n&&!isCommitDetails){d='<div class="firstFileHeader"><a name="'+linkCount+'"></a>'+file+' (binary) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(a){d='<div class="fileHeader"><a name="'+linkCount+'"></a>'+file+' (binary) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(c&&n&&!isCommitDetails){d='<div class="firstFileHeader"><a name="'+linkCount+'"></a>'+file+' (new file) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(c){d='<div class="fileHeader"><a name="'+linkCount+'"></a>'+file+' (new file) <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{if(n&&!isCommitDetails){d='<div class="firstFileHeader"><a name="'+linkCount+'"></a>'+file+' | <a href="#index" class="index" title="Go back to the top">index</a></div>'}else{d='<div class="fileHeader"><a name="'+linkCount+'"></a>'+file+' | <a href="#index" class="index" title="Go back to the top">index</a></div>'}}}}}}}}}}}}else{if(D&&n&&!isCommitDetails){d='<div class="firstFileHeader">'+file+" (binary)</div>"}else{if(D){d='<div class="fileHeader">'+file+" (binary)</div>"}else{if(C&&n&&!isCommitDetails){d='<div class="firstFileHeader">'+file+" (deleted file)</div>"}else{if(C){d='<div class="fileHeader">'+file+" (deleted file)</div>"}else{if(g&&n&&!isCommitDetails){d='<div class="firstFileHeader">'+file+" (binary)</div>"}else{if(g){d='<div class="fileHeader">'+file+" (binary)</div>"}else{if(a&&n&&!isCommitDetails){d='<div class="firstFileHeader">'+file+" (binary)</div>"}else{if(a){d='<div class="fileHeader">'+file+" (binary)</div>"}else{if(c&&n&&!isCommitDetails){d='<div class="firstFileHeader">'+file+" (new file)</div>"}else{if(c){d='<div class="fileHeader">'+file+" (new file)</div>"}else{if(n&&!isCommitDetails){d='<div class="firstFileHeader">'+file+"</div>"}else{d='<div class="fileHeader">'+file+"</div>"}}}}}}}}}}}}b+=d;if(((g||c)||(D||C))&&isFileNoContent()){b+='<div class="line binaryChange">Empty file</div>'}n=false;q+="\n";p+="\n";continue}if(isLineTooLong()){if(A=="+"){b+="<div class='longline line'>+ This line is too long to display. Lines cannot exceed 24,500 characters.</div>";q+="\n";p+=++h+"\n"}else{if(A=="-"){b+="<div class='longline line'>- This line is too long to display. Lines cannot exceed 24,500 characters.</div>";q+=++j+"\n";p+="\n"}else{b+="<div class='longline line'> This line is too long to display. Lines cannot exceed 24,500 characters.</div>";q+="\n";p+="\n"}}}else{if(A=="+"){b+="<div class='addline line'>"+l+"</div>";q+="\n";p+=++h+"\n"}else{if(A=="-"){b+="<div class='delline line'>"+l+"</div>";q+=++j+"\n";p+="\n"}else{if(A=="@"){q="";p="";if(m=l.match(/@@ \-([0-9]+),\d+ \+(\d+),\d+ @@/)){j=parseInt(m[1])-1;h=parseInt(m[2])-1}l=l.replace(/@ ?/g,"");if(w){b+="<div class='firsthunkheader'>"+l+"</div>"}else{b+="<div class='hunkheader'>"+l+"</div>"}w=false;v=false;q+="\n";p+="\n";if(nextLineIsAllSpaces()){i+=1;continue}}else{if(A==" "){b+="<span class='line'>"+l+"</span>\n";q+=++j+"\n";p+=++h+"\n"}}}}}}s.innerHTML="<table width='100%'><td><pre>"+b+"</pre></td></tr></table>"}var dateFormat=function(){var a=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,b=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,d=/[^-+\dA-Z]/g,c=function(f,e){f=String(f);e=e||2;while(f.length<e){f="0"+f}return f};return function(j,z,u){var g=dateFormat;if(arguments.length==1&&Object.prototype.toString.call(j)=="[object String]"&&!/\d/.test(j)){z=j;j=undefined}j=j?new Date(j):new Date;if(isNaN(j)){throw SyntaxError("invalid date")}z=String(g.masks[z]||z||g.masks["default"]);if(z.slice(0,4)=="UTC:"){z=z.slice(4);u=true}var w=u?"getUTC":"get",q=j[w+"Date"](),e=j[w+"Day"](),n=j[w+"Month"](),t=j[w+"FullYear"](),v=j[w+"Hours"](),p=j[w+"Minutes"](),x=j[w+"Seconds"](),r=j[w+"Milliseconds"](),f=u?0:j.getTimezoneOffset(),h={d:q,dd:c(q),ddd:g.i18n.dayNames[e],dddd:g.i18n.dayNames[e+7],m:n+1,mm:c(n+1),mmm:g.i18n.monthNames[n],mmmm:g.i18n.monthNames[n+12],yy:String(t).slice(2),yyyy:t,h:v%12||12,hh:c(v%12||12),H:v,HH:c(v),M:p,MM:c(p),s:x,ss:c(x),l:c(r,3),L:c(r>99?Math.round(r/10):r),t:v<12?"a":"p",tt:v<12?"am":"pm",T:v<12?"A":"P",TT:v<12?"AM":"PM",Z:u?"UTC":(String(j).match(b)||[""]).pop().replace(d,""),o:(f>0?"-":"+")+c(Math.floor(Math.abs(f)/60)*100+Math.abs(f)%60,4),S:["th","st","nd","rd"][q%10>3?0:(q%100-q%10!=10)*q%10]};return z.replace(a,function(o){return o in h?h[o]:o.slice(1,o.length-1)})}}();dateFormat.masks={"default":"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};dateFormat.i18n={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]};Date.prototype.format=function(a,b){return dateFormat(this,a,b)};String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")};String.prototype.ltrim=function(){return this.replace(/^\s+/,"")};String.prototype.rtrim=function(){return this.replace(/\s+$/,"")};